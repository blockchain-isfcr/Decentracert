{"id":"4f00bd35ae3a4a6953cf09e26f1bbcd8","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/interfaces/IIssuerRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title IIssuerRegistry\r\n * @dev Interface for the IssuerRegistry contract that manages verification of certificate issuers\r\n */\r\ninterface IIssuerRegistry {\r\n    /**\r\n     * @dev Enum representing the verification tier level of an issuer\r\n     * T1: Highest level, verified via DNS\r\n     * T2: Medium level, verified via social media\r\n     * MANUAL: Lowest level, verified manually by admin\r\n     * NONE: Not verified\r\n     */\r\n    enum IssuerTier { NONE, MANUAL, T2, T1 }\r\n    \r\n    /**\r\n     * @dev Struct containing issuer verification data\r\n     */\r\n    struct IssuerData {\r\n        address issuerAddress;\r\n        IssuerTier tier;\r\n        string name;\r\n        string verificationData; // Domain name for T1, social media URL for T2\r\n        uint256 verifiedAt;\r\n        bool isActive;\r\n    }\r\n    \r\n    /**\r\n     * @dev Verifies an issuer with T1 verification (DNS)\r\n     * @param issuerName The name of the issuer organization\r\n     * @param domain The domain name used for verification\r\n     * @param verificationData Additional data used in verification process\r\n     */\r\n    function verifyIssuerT1(string calldata issuerName, string calldata domain, string calldata verificationData) external;\r\n    \r\n    /**\r\n     * @dev Verifies an issuer with T2 verification (social media)\r\n     * @param issuerName The name of the issuer organization\r\n     * @param socialMediaUrl The URL of the social media post used for verification\r\n     */\r\n    function verifyIssuerT2(string calldata issuerName, string calldata socialMediaUrl) external;\r\n    \r\n    /**\r\n     * @dev Manually verifies an issuer (only admin)\r\n     * @param issuerAddress The address to be verified\r\n     * @param issuerName The name of the issuer organization\r\n     */\r\n    function manualVerifyIssuer(address issuerAddress, string calldata issuerName) external;\r\n    \r\n    /**\r\n     * @dev Upgrades an issuer from T2 to T1\r\n     * @param domain The domain name used for verification\r\n     * @param verificationData Additional data used in verification process\r\n     */\r\n    function upgradeToT1(string calldata domain, string calldata verificationData) external;\r\n    \r\n    /**\r\n     * @dev Checks if an address is a verified issuer\r\n     * @param issuer The address to check\r\n     * @return True if the address is a verified issuer, false otherwise\r\n     */\r\n    function isVerifiedIssuer(address issuer) external view returns (bool);\r\n    \r\n    /**\r\n     * @dev Gets the tier level of an issuer\r\n     * @param issuer The address to check\r\n     * @return The tier level of the issuer\r\n     */\r\n    function getIssuerTier(address issuer) external view returns (IssuerTier);\r\n    \r\n    /**\r\n     * @dev Gets the data for an issuer\r\n     * @param issuer The address to get data for\r\n     * @return The issuer data\r\n     */\r\n    function getIssuerData(address issuer) external view returns (IssuerData memory);\r\n    \r\n    /**\r\n     * @dev Event emitted when an issuer is verified\r\n     */\r\n    event IssuerVerified(address indexed issuer, IssuerTier tier, string name);\r\n    \r\n    /**\r\n     * @dev Event emitted when an issuer is upgraded\r\n     */\r\n    event IssuerUpgraded(address indexed issuer, IssuerTier fromTier, IssuerTier toTier);\r\n} "},"contracts/interfaces/ISoulboundNFT.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title ISoulboundNFT\r\n * @dev Interface for the SoulboundNFT contract\r\n */\r\ninterface ISoulboundNFT {\r\n    /**\r\n     * @dev Mints a new certificate to a recipient\r\n     * @param recipient The address that will receive the certificate\r\n     * @param merkleProof The Merkle proof that verifies the recipient is eligible\r\n     * @return The token ID of the minted certificate\r\n     */\r\n    function mintCertificate(address recipient, bytes32[] calldata merkleProof) external returns (uint256);\r\n    \r\n    /**\r\n     * @dev Checks if an address is eligible to claim a certificate\r\n     * @param recipient The address to check eligibility for\r\n     * @param merkleProof The Merkle proof to verify eligibility\r\n     * @return True if the address is eligible, false otherwise\r\n     */\r\n    function isEligible(address recipient, bytes32[] calldata merkleProof) external view returns (bool);\r\n    \r\n    /**\r\n     * @dev Gets the certificate data for a token ID\r\n     * @param tokenId The token ID to get data for\r\n     * @return issuer The address of the certificate issuer\r\n     * @return issuerLevel The level of the issuer (T1, T2, etc.)\r\n     * @return metadataURI The URI for the certificate metadata\r\n     * @return issuedTimestamp The timestamp when the certificate was issued\r\n     */\r\n    function getCertificateData(uint256 tokenId) external view returns (\r\n        address issuer,\r\n        uint8 issuerLevel,\r\n        string memory metadataURI,\r\n        uint256 issuedTimestamp\r\n    );\r\n    \r\n    /**\r\n     * @dev Event emitted when a certificate is minted\r\n     */\r\n    event CertificateMinted(address indexed recipient, uint256 indexed tokenId, address indexed issuer);\r\n} "},"contracts/interfaces/IZKVerifier.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title IZKVerifier\r\n * @dev Interface for the ZKVerifier contract that verifies zero-knowledge proofs for certificates\r\n */\r\ninterface IZKVerifier {\r\n    /**\r\n     * @dev Struct containing information about a registered verifier circuit\r\n     */\r\n    struct VerifierCircuit {\r\n        uint256 id;\r\n        string name;\r\n        string description;\r\n        address verifierContract;\r\n        bool isActive;\r\n    }\r\n    \r\n    /**\r\n     * @dev Struct containing proof data\r\n     */\r\n    struct ProofData {\r\n        uint256 id;\r\n        address owner;\r\n        uint256 circuitId;\r\n        bytes32 proofHash;\r\n        uint256 createdAt;\r\n        uint256 expiresAt;\r\n        bool isRevoked;\r\n    }\r\n    \r\n    /**\r\n     * @dev Registers a new verifier circuit (admin only)\r\n     * @param name The name of the circuit\r\n     * @param description The description of the circuit\r\n     * @param verifierContract The address of the verifier contract\r\n     * @return The ID of the registered circuit\r\n     */\r\n    function registerCircuit(string calldata name, string calldata description, address verifierContract) external returns (uint256);\r\n    \r\n    /**\r\n     * @dev Creates a new ZK proof\r\n     * @param circuitId The ID of the circuit to use\r\n     * @param proofData The raw proof data\r\n     * @param publicInputs The public inputs for the proof\r\n     * @param validityPeriod How long the proof should be valid for (in seconds)\r\n     * @return The ID of the created proof\r\n     */\r\n    function createProof(\r\n        uint256 circuitId, \r\n        bytes calldata proofData, \r\n        bytes calldata publicInputs,\r\n        uint256 validityPeriod\r\n    ) external returns (uint256);\r\n    \r\n    /**\r\n     * @dev Verifies a ZK proof\r\n     * @param proofId The ID of the proof to verify\r\n     * @param verifierAddress The address of the verifier (if restricted)\r\n     * @return True if the proof is valid, false otherwise\r\n     */\r\n    function verifyProof(uint256 proofId, address verifierAddress) external view returns (bool);\r\n    \r\n    /**\r\n     * @dev Revokes a ZK proof\r\n     * @param proofId The ID of the proof to revoke\r\n     */\r\n    function revokeProof(uint256 proofId) external;\r\n    \r\n    /**\r\n     * @dev Gets information about a proof\r\n     * @param proofId The ID of the proof\r\n     * @return The proof data\r\n     */\r\n    function getProofData(uint256 proofId) external view returns (ProofData memory);\r\n    \r\n    /**\r\n     * @dev Gets information about a circuit\r\n     * @param circuitId The ID of the circuit\r\n     * @return The circuit data\r\n     */\r\n    function getCircuitData(uint256 circuitId) external view returns (VerifierCircuit memory);\r\n    \r\n    /**\r\n     * @dev Event emitted when a new circuit is registered\r\n     */\r\n    event CircuitRegistered(uint256 indexed circuitId, string name, address verifierContract);\r\n    \r\n    /**\r\n     * @dev Event emitted when a new proof is created\r\n     */\r\n    event ProofCreated(uint256 indexed proofId, address indexed owner, uint256 indexed circuitId);\r\n    \r\n    /**\r\n     * @dev Event emitted when a proof is revoked\r\n     */\r\n    event ProofRevoked(uint256 indexed proofId, address indexed revoker);\r\n} "},"contracts/IssuerRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./interfaces/IIssuerRegistry.sol\";\r\n\r\n/**\r\n * @title IssuerRegistry\r\n * @dev Implementation of the issuer registry for verifying certificate issuers\r\n */\r\ncontract IssuerRegistry is IIssuerRegistry, Ownable {\r\n    // Mapping from issuer address to issuer data\r\n    mapping(address => IssuerData) private _issuers;\r\n    \r\n    // Mapping from domain to issuer address\r\n    mapping(string => address) private _domainToIssuer;\r\n    \r\n    // Mapping from social media URL to issuer address\r\n    mapping(string => address) private _socialMediaToIssuer;\r\n    \r\n    // Admin addresses for manual verification\r\n    mapping(address => bool) private _admins;\r\n    \r\n    /**\r\n     * @dev Constructor for IssuerRegistry\r\n     */\r\n    constructor() Ownable(msg.sender) {\r\n        // Add deployer as admin\r\n        _admins[msg.sender] = true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Modifier to restrict function access to admins\r\n     */\r\n    modifier onlyAdmin() {\r\n        require(_admins[msg.sender], \"IssuerRegistry: Caller is not an admin\");\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev Add an admin\r\n     * @param admin The address to add as admin\r\n     */\r\n    function addAdmin(address admin) external onlyOwner {\r\n        _admins[admin] = true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Remove an admin\r\n     * @param admin The address to remove as admin\r\n     */\r\n    function removeAdmin(address admin) external onlyOwner {\r\n        _admins[admin] = false;\r\n    }\r\n    \r\n    /**\r\n     * @dev Verifies an issuer with T1 verification (DNS)\r\n     * @param issuerName The name of the issuer organization\r\n     * @param domain The domain name used for verification\r\n     * @param verificationData Additional data used in verification process\r\n     */\r\n    function verifyIssuerT1(\r\n        string calldata issuerName,\r\n        string calldata domain,\r\n        string calldata verificationData\r\n    ) external override {\r\n        // In a real implementation, this would involve checking DNS TXT records\r\n        // For this demo, we'll simulate the verification\r\n        \r\n        // Ensure domain isn't already registered\r\n        require(_domainToIssuer[domain] == address(0), \"IssuerRegistry: Domain already registered\");\r\n        \r\n        // Create issuer data\r\n        _issuers[msg.sender] = IssuerData({\r\n            issuerAddress: msg.sender,\r\n            tier: IssuerTier.T1,\r\n            name: issuerName,\r\n            verificationData: domain,\r\n            verifiedAt: block.timestamp,\r\n            isActive: true\r\n        });\r\n        \r\n        // Register domain\r\n        _domainToIssuer[domain] = msg.sender;\r\n        \r\n        emit IssuerVerified(msg.sender, IssuerTier.T1, issuerName);\r\n    }\r\n    \r\n    /**\r\n     * @dev Verifies an issuer with T2 verification (social media)\r\n     * @param issuerName The name of the issuer organization\r\n     * @param socialMediaUrl The URL of the social media post used for verification\r\n     */\r\n    function verifyIssuerT2(\r\n        string calldata issuerName,\r\n        string calldata socialMediaUrl\r\n    ) external override {\r\n        // In a real implementation, this would involve checking the social media post\r\n        // For this demo, we'll simulate the verification\r\n        \r\n        // Ensure social media URL isn't already registered\r\n        require(_socialMediaToIssuer[socialMediaUrl] == address(0), \"IssuerRegistry: Social media URL already registered\");\r\n        \r\n        // Create issuer data\r\n        _issuers[msg.sender] = IssuerData({\r\n            issuerAddress: msg.sender,\r\n            tier: IssuerTier.T2,\r\n            name: issuerName,\r\n            verificationData: socialMediaUrl,\r\n            verifiedAt: block.timestamp,\r\n            isActive: true\r\n        });\r\n        \r\n        // Register social media URL\r\n        _socialMediaToIssuer[socialMediaUrl] = msg.sender;\r\n        \r\n        emit IssuerVerified(msg.sender, IssuerTier.T2, issuerName);\r\n    }\r\n    \r\n    /**\r\n     * @dev Manually verifies an issuer (only admin)\r\n     * @param issuerAddress The address to be verified\r\n     * @param issuerName The name of the issuer organization\r\n     */\r\n    function manualVerifyIssuer(\r\n        address issuerAddress,\r\n        string calldata issuerName\r\n    ) external override onlyAdmin {\r\n        // Create issuer data\r\n        _issuers[issuerAddress] = IssuerData({\r\n            issuerAddress: issuerAddress,\r\n            tier: IssuerTier.MANUAL,\r\n            name: issuerName,\r\n            verificationData: \"Manual verification\",\r\n            verifiedAt: block.timestamp,\r\n            isActive: true\r\n        });\r\n        \r\n        emit IssuerVerified(issuerAddress, IssuerTier.MANUAL, issuerName);\r\n    }\r\n    \r\n    /**\r\n     * @dev Upgrades an issuer from T2 to T1\r\n     * @param domain The domain name used for verification\r\n     * @param verificationData Additional data used in verification process\r\n     */\r\n    function upgradeToT1(\r\n        string calldata domain,\r\n        string calldata verificationData\r\n    ) external override {\r\n        // Ensure caller is a T2 issuer\r\n        require(_issuers[msg.sender].tier == IssuerTier.T2, \"IssuerRegistry: Caller is not a T2 issuer\");\r\n        \r\n        // Ensure domain isn't already registered\r\n        require(_domainToIssuer[domain] == address(0), \"IssuerRegistry: Domain already registered\");\r\n        \r\n        // Store old data for event\r\n        IssuerTier oldTier = _issuers[msg.sender].tier;\r\n        string memory oldVerificationData = _issuers[msg.sender].verificationData;\r\n        \r\n        // Update issuer data\r\n        _issuers[msg.sender].tier = IssuerTier.T1;\r\n        _issuers[msg.sender].verificationData = domain;\r\n        _issuers[msg.sender].verifiedAt = block.timestamp;\r\n        \r\n        // Register domain\r\n        _domainToIssuer[domain] = msg.sender;\r\n        \r\n        // Unregister social media URL\r\n        _socialMediaToIssuer[oldVerificationData] = address(0);\r\n        \r\n        emit IssuerUpgraded(msg.sender, oldTier, IssuerTier.T1);\r\n    }\r\n    \r\n    /**\r\n     * @dev Checks if an address is a verified issuer\r\n     * @param issuer The address to check\r\n     * @return True if the address is a verified issuer, false otherwise\r\n     */\r\n    function isVerifiedIssuer(address issuer) external view override returns (bool) {\r\n        return _issuers[issuer].tier != IssuerTier.NONE && _issuers[issuer].isActive;\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets the tier level of an issuer\r\n     * @param issuer The address to check\r\n     * @return The tier level of the issuer\r\n     */\r\n    function getIssuerTier(address issuer) external view override returns (IssuerTier) {\r\n        return _issuers[issuer].tier;\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets the data for an issuer\r\n     * @param issuer The address to get data for\r\n     * @return The issuer data\r\n     */\r\n    function getIssuerData(address issuer) external view override returns (IssuerData memory) {\r\n        return _issuers[issuer];\r\n    }\r\n    \r\n    /**\r\n     * @dev Checks if a domain is registered\r\n     * @param domain The domain to check\r\n     * @return The address associated with the domain, or address(0) if not registered\r\n     */\r\n    function getDomainIssuer(string calldata domain) external view returns (address) {\r\n        return _domainToIssuer[domain];\r\n    }\r\n    \r\n    /**\r\n     * @dev Checks if a social media URL is registered\r\n     * @param socialMediaUrl The social media URL to check\r\n     * @return The address associated with the social media URL, or address(0) if not registered\r\n     */\r\n    function getSocialMediaIssuer(string calldata socialMediaUrl) external view returns (address) {\r\n        return _socialMediaToIssuer[socialMediaUrl];\r\n    }\r\n    \r\n    /**\r\n     * @dev Deactivates an issuer\r\n     * @param issuer The address to deactivate\r\n     */\r\n    function deactivateIssuer(address issuer) external onlyAdmin {\r\n        require(_issuers[issuer].tier != IssuerTier.NONE, \"IssuerRegistry: Not a registered issuer\");\r\n        _issuers[issuer].isActive = false;\r\n    }\r\n    \r\n    /**\r\n     * @dev Reactivates an issuer\r\n     * @param issuer The address to reactivate\r\n     */\r\n    function reactivateIssuer(address issuer) external onlyAdmin {\r\n        require(_issuers[issuer].tier != IssuerTier.NONE, \"IssuerRegistry: Not a registered issuer\");\r\n        _issuers[issuer].isActive = true;\r\n    }\r\n} "},"contracts/SoulboundNFT.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"./interfaces/ISoulboundNFT.sol\";\r\nimport \"./interfaces/IIssuerRegistry.sol\";\r\nimport \"./utils/MerkleProof.sol\";\r\n\r\n/**\r\n * @title SoulboundNFT\r\n * @dev Implementation of non-transferable (soulbound) NFTs for certificates\r\n */\r\ncontract SoulboundNFT is ERC721, Ownable, ISoulboundNFT {\r\n    using Strings for uint256;\r\n    \r\n    // Token counter for NFT IDs\r\n    uint256 private _tokenIdCounter;\r\n    \r\n    // Certificate data\r\n    struct Certificate {\r\n        address issuer;\r\n        uint8 issuerLevel;\r\n        string metadataURI;\r\n        uint256 issuedAt;\r\n        address recipient;\r\n    }\r\n    \r\n    // Mapping from token ID to certificate data\r\n    mapping(uint256 => Certificate) private _certificates;\r\n    \r\n    // Merkle root for whitelisting recipients\r\n    bytes32 private _merkleRoot;\r\n    \r\n    // Address of the issuer registry contract\r\n    address private _issuerRegistry;\r\n    \r\n    // Base URI for metadata\r\n    string private _baseTokenURI;\r\n    \r\n    // Error for soulbound transfers\r\n    error SoulboundToken();\r\n    \r\n    /**\r\n     * @dev Constructor for the SoulboundNFT contract\r\n     * @param name Name of the NFT collection\r\n     * @param symbol Symbol of the NFT collection\r\n     * @param merkleRoot Merkle root for whitelisting recipients\r\n     * @param issuerRegistry Address of the issuer registry contract\r\n     * @param baseTokenURI Base URI for metadata\r\n     */\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        bytes32 merkleRoot,\r\n        address issuerRegistry,\r\n        string memory baseTokenURI\r\n    ) ERC721(name, symbol) Ownable(msg.sender) {\r\n        _merkleRoot = merkleRoot;\r\n        _issuerRegistry = issuerRegistry;\r\n        _baseTokenURI = baseTokenURI;\r\n    }\r\n    \r\n    /**\r\n     * @dev Override _update to prevent transfers (except minting and burning)\r\n     */\r\n    function _update(address to, uint256 tokenId, address auth) internal override returns (address) {\r\n        address from = _ownerOf(tokenId);\r\n        \r\n        // Allow minting (from == address(0)) and burning (to == address(0))\r\n        // but prevent transfers (from != address(0) && to != address(0))\r\n        if (from != address(0) && to != address(0)) {\r\n            revert SoulboundToken();\r\n        }\r\n        \r\n        return super._update(to, tokenId, auth);\r\n    }\r\n    \r\n    /**\r\n     * @dev Alias for mintCertificate to maintain compatibility with frontend\r\n     * @param recipient The address that will receive the certificate\r\n     * @param merkleProof The Merkle proof that verifies the recipient is eligible\r\n     * @return The token ID of the minted certificate\r\n     */\r\n    function mint(address recipient, bytes32[] calldata merkleProof) external returns (uint256) {\r\n        return mintCertificate(recipient, merkleProof);\r\n    }\r\n    \r\n    /**\r\n     * @dev Mints a new certificate to a recipient\r\n     * @param recipient The address that will receive the certificate\r\n     * @param merkleProof The Merkle proof that verifies the recipient is eligible\r\n     * @return The token ID of the minted certificate\r\n     */\r\n    function mintCertificate(address recipient, bytes32[] calldata merkleProof) public override returns (uint256) {\r\n        // Verify issuer is authorized\r\n        require(\r\n            IIssuerRegistry(_issuerRegistry).isVerifiedIssuer(msg.sender),\r\n            \"SoulboundNFT: Caller is not a verified issuer\"\r\n        );\r\n        \r\n        // Verify recipient is in the whitelist\r\n        require(\r\n            isEligible(recipient, merkleProof),\r\n            \"SoulboundNFT: Recipient is not eligible\"\r\n        );\r\n        \r\n        // Get issuer level\r\n        IIssuerRegistry.IssuerTier issuerTier = IIssuerRegistry(_issuerRegistry).getIssuerTier(msg.sender);\r\n        \r\n        // Increment token ID\r\n        _tokenIdCounter++;\r\n        uint256 tokenId = _tokenIdCounter;\r\n        \r\n        // Mint NFT\r\n        _mint(recipient, tokenId);\r\n        \r\n        // Store certificate data\r\n        _certificates[tokenId] = Certificate({\r\n            issuer: msg.sender,\r\n            issuerLevel: uint8(issuerTier),\r\n            metadataURI: string(abi.encodePacked(_baseTokenURI, tokenId.toString())),\r\n            issuedAt: block.timestamp,\r\n            recipient: recipient\r\n        });\r\n        \r\n        emit CertificateMinted(recipient, tokenId, msg.sender);\r\n        \r\n        return tokenId;\r\n    }\r\n    \r\n    /**\r\n     * @dev Checks if an address is eligible to claim a certificate\r\n     * @param recipient The address to check eligibility for\r\n     * @param merkleProof The Merkle proof to verify eligibility\r\n     * @return True if the address is eligible, false otherwise\r\n     */\r\n    function isEligible(address recipient, bytes32[] calldata merkleProof) public view override returns (bool) {\r\n        bytes32 leaf = MerkleProof.leafFromAddress(recipient);\r\n        return MerkleProof.verify(merkleProof, _merkleRoot, leaf);\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets the certificate data for a token ID\r\n     * @param tokenId The token ID to get data for\r\n     * @return issuer The address of the certificate issuer\r\n     * @return issuerLevel The level of the issuer (T1, T2, etc.)\r\n     * @return metadataURI The URI for the certificate metadata\r\n     * @return issuedTimestamp The timestamp when the certificate was issued\r\n     */\r\n    function getCertificateData(uint256 tokenId) external view override returns (\r\n        address issuer,\r\n        uint8 issuerLevel,\r\n        string memory metadataURI,\r\n        uint256 issuedTimestamp\r\n    ) {\r\n        require(_exists(tokenId), \"SoulboundNFT: Query for nonexistent token\");\r\n        \r\n        Certificate memory cert = _certificates[tokenId];\r\n        \r\n        return (\r\n            cert.issuer,\r\n            cert.issuerLevel,\r\n            cert.metadataURI,\r\n            cert.issuedAt\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets the issuer of a token\r\n     * @param tokenId The token ID\r\n     * @return The address of the issuer\r\n     */\r\n    function issuerOf(uint256 tokenId) external view returns (address) {\r\n        require(_exists(tokenId), \"SoulboundNFT: Query for nonexistent token\");\r\n        return _certificates[tokenId].issuer;\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets the issuance timestamp of a token\r\n     * @param tokenId The token ID\r\n     * @return The timestamp when the token was issued\r\n     */\r\n    function getIssuedAt(uint256 tokenId) external view returns (uint256) {\r\n        require(_exists(tokenId), \"SoulboundNFT: Query for nonexistent token\");\r\n        return _certificates[tokenId].issuedAt;\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets the URI for a token's metadata\r\n     * @param tokenId The token ID to get the URI for\r\n     * @return The token URI\r\n     */\r\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n        require(_exists(tokenId), \"SoulboundNFT: URI query for nonexistent token\");\r\n        return _certificates[tokenId].metadataURI;\r\n    }\r\n    \r\n    /**\r\n     * @dev Updates the base token URI\r\n     * @param newBaseURI The new base token URI\r\n     */\r\n    function setBaseURI(string memory newBaseURI) external onlyOwner {\r\n        _baseTokenURI = newBaseURI;\r\n    }\r\n    \r\n    /**\r\n     * @dev Updates the Merkle root\r\n     * @param newMerkleRoot The new Merkle root\r\n     */\r\n    function setMerkleRoot(bytes32 newMerkleRoot) external onlyOwner {\r\n        _merkleRoot = newMerkleRoot;\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets the current Merkle root\r\n     * @return The current Merkle root\r\n     */\r\n    function getMerkleRoot() external view returns (bytes32) {\r\n        return _merkleRoot;\r\n    }\r\n    \r\n    /**\r\n     * @dev Utility function to check if a token exists\r\n     * @param tokenId The token ID to check\r\n     * @return True if the token exists, false otherwise\r\n     */\r\n    function _exists(uint256 tokenId) internal view returns (bool) {\r\n        return tokenId != 0 && tokenId <= _tokenIdCounter && _ownerOf(tokenId) != address(0);\r\n    }\r\n} "},"contracts/utils/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\n/**\r\n * @title MerkleProof\r\n * @dev Library for verification of Merkle proofs\r\n */\r\nlibrary MerkleProof {\r\n    /**\r\n     * @dev Verifies a Merkle proof proving the existence of a leaf in a Merkle tree.\r\n     * @param proof Merkle proof containing sibling hashes on the branch from the leaf to the root\r\n     * @param root Merkle root\r\n     * @param leaf Leaf of the Merkle tree\r\n     * @return True if the proof is valid, false otherwise\r\n     */\r\n    function verify(\r\n        bytes32[] memory proof,\r\n        bytes32 root,\r\n        bytes32 leaf\r\n    ) internal pure returns (bool) {\r\n        bytes32 computedHash = leaf;\r\n\r\n        for (uint256 i = 0; i < proof.length; i++) {\r\n            bytes32 proofElement = proof[i];\r\n\r\n            if (computedHash <= proofElement) {\r\n                // Hash(current computed hash + current element of the proof)\r\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\r\n            } else {\r\n                // Hash(current element of the proof + current computed hash)\r\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\r\n            }\r\n        }\r\n\r\n        // Check if the computed hash equals the root of the Merkle tree\r\n        return computedHash == root;\r\n    }\r\n\r\n    /**\r\n     * @dev Helper function that creates a leaf node for a Merkle tree from an address\r\n     * @param addr The address to create a leaf for\r\n     * @return The leaf node\r\n     */\r\n    function leafFromAddress(address addr) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(addr));\r\n    }\r\n} "},"contracts/ZKVerifier.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./interfaces/IZKVerifier.sol\";\r\n\r\n/**\r\n * @title ZKVerifier\r\n * @dev Contract for managing zero-knowledge proof verification for certificates\r\n */\r\ncontract ZKVerifier is IZKVerifier, Ownable {\r\n    // Counter for circuit IDs\r\n    uint256 private _circuitIdCounter;\r\n    \r\n    // Counter for proof IDs\r\n    uint256 private _proofIdCounter;\r\n    \r\n    // Mapping from circuit ID to circuit data\r\n    mapping(uint256 => VerifierCircuit) private _circuits;\r\n    \r\n    // Mapping from proof ID to proof data\r\n    mapping(uint256 => ProofData) private _proofs;\r\n    \r\n    // Mapping from owner to proof IDs\r\n    mapping(address => uint256[]) private _ownerProofs;\r\n    \r\n    // Admin addresses\r\n    mapping(address => bool) private _admins;\r\n    \r\n    /**\r\n     * @dev Constructor for ZKVerifier\r\n     */\r\n    constructor() Ownable(msg.sender) {\r\n        // Add deployer as admin\r\n        _admins[msg.sender] = true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Modifier to restrict function access to admins\r\n     */\r\n    modifier onlyAdmin() {\r\n        require(_admins[msg.sender], \"ZKVerifier: Caller is not an admin\");\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev Add an admin\r\n     * @param admin The address to add as admin\r\n     */\r\n    function addAdmin(address admin) external onlyOwner {\r\n        _admins[admin] = true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Remove an admin\r\n     * @param admin The address to remove as admin\r\n     */\r\n    function removeAdmin(address admin) external onlyOwner {\r\n        _admins[admin] = false;\r\n    }\r\n    \r\n    /**\r\n     * @dev Registers a new verifier circuit (admin only)\r\n     * @param name The name of the circuit\r\n     * @param description The description of the circuit\r\n     * @param verifierContract The address of the verifier contract\r\n     * @return The ID of the registered circuit\r\n     */\r\n    function registerCircuit(\r\n        string calldata name,\r\n        string calldata description,\r\n        address verifierContract\r\n    ) external override onlyAdmin returns (uint256) {\r\n        require(verifierContract != address(0), \"ZKVerifier: Invalid verifier contract address\");\r\n        \r\n        // Increment circuit ID\r\n        _circuitIdCounter++;\r\n        uint256 circuitId = _circuitIdCounter;\r\n        \r\n        // Store circuit data\r\n        _circuits[circuitId] = VerifierCircuit({\r\n            id: circuitId,\r\n            name: name,\r\n            description: description,\r\n            verifierContract: verifierContract,\r\n            isActive: true\r\n        });\r\n        \r\n        emit CircuitRegistered(circuitId, name, verifierContract);\r\n        \r\n        return circuitId;\r\n    }\r\n    \r\n    /**\r\n     * @dev Creates a new ZK proof\r\n     * @param circuitId The ID of the circuit to use\r\n     * @param proofData The raw proof data\r\n     * @param publicInputs The public inputs for the proof\r\n     * @param validityPeriod How long the proof should be valid for (in seconds)\r\n     * @return The ID of the created proof\r\n     */\r\n    function createProof(\r\n        uint256 circuitId,\r\n        bytes calldata proofData,\r\n        bytes calldata publicInputs,\r\n        uint256 validityPeriod\r\n    ) external override returns (uint256) {\r\n        require(_circuits[circuitId].isActive, \"ZKVerifier: Circuit is not active\");\r\n        \r\n        // In a real implementation, we would actually verify the proof\r\n        // using the circuit's verifier contract\r\n        // For this demo, we'll assume the proof is valid\r\n        \r\n        // Increment proof ID\r\n        _proofIdCounter++;\r\n        uint256 proofId = _proofIdCounter;\r\n        \r\n        // Calculate proof hash\r\n        bytes32 proofHash = keccak256(abi.encodePacked(proofData, publicInputs));\r\n        \r\n        // Calculate expiration time\r\n        uint256 expiresAt = block.timestamp + validityPeriod;\r\n        \r\n        // Store proof data\r\n        _proofs[proofId] = ProofData({\r\n            id: proofId,\r\n            owner: msg.sender,\r\n            circuitId: circuitId,\r\n            proofHash: proofHash,\r\n            createdAt: block.timestamp,\r\n            expiresAt: expiresAt,\r\n            isRevoked: false\r\n        });\r\n        \r\n        // Add proof to owner's list\r\n        _ownerProofs[msg.sender].push(proofId);\r\n        \r\n        emit ProofCreated(proofId, msg.sender, circuitId);\r\n        \r\n        return proofId;\r\n    }\r\n    \r\n    /**\r\n     * @dev Simplified verifier for frontend compatibility\r\n     * @param proofId The ID of the proof to verify\r\n     * @return True if the proof is valid, false otherwise\r\n     */\r\n    function verifyProof(uint256 proofId) external view returns (bool) {\r\n        return this.verifyProof(proofId, address(0));\r\n    }\r\n    \r\n    /**\r\n     * @dev Verifies a ZK proof\r\n     * @param proofId The ID of the proof to verify\r\n     * @param verifierAddress The address of the verifier (if restricted)\r\n     * @return True if the proof is valid, false otherwise\r\n     */\r\n    function verifyProof(uint256 proofId, address verifierAddress) external view override returns (bool) {\r\n        ProofData memory proof = _proofs[proofId];\r\n        \r\n        // Check if proof exists\r\n        if (proof.id == 0) {\r\n            return false;\r\n        }\r\n        \r\n        // Check if proof is revoked\r\n        if (proof.isRevoked) {\r\n            return false;\r\n        }\r\n        \r\n        // Check if proof is expired\r\n        if (block.timestamp > proof.expiresAt) {\r\n            return false;\r\n        }\r\n        \r\n        // In a real implementation, we would check that the verifier has permission\r\n        // to verify this proof, and potentially do additional verification\r\n        \r\n        return true;\r\n    }\r\n    \r\n    /**\r\n     * @dev Revokes a ZK proof\r\n     * @param proofId The ID of the proof to revoke\r\n     */\r\n    function revokeProof(uint256 proofId) external override {\r\n        ProofData storage proof = _proofs[proofId];\r\n        \r\n        // Check if proof exists\r\n        require(proof.id != 0, \"ZKVerifier: Proof does not exist\");\r\n        \r\n        // Check if caller is the owner or an admin\r\n        require(\r\n            proof.owner == msg.sender || _admins[msg.sender],\r\n            \"ZKVerifier: Caller is not authorized to revoke this proof\"\r\n        );\r\n        \r\n        // Revoke the proof\r\n        proof.isRevoked = true;\r\n        \r\n        emit ProofRevoked(proofId, msg.sender);\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets information about a proof\r\n     * @param proofId The ID of the proof\r\n     * @return The proof data\r\n     */\r\n    function getProofData(uint256 proofId) external view override returns (ProofData memory) {\r\n        return _proofs[proofId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets information about a proof (alias for frontend compatibility)\r\n     * @param proofId The ID of the proof\r\n     * @return The proof data\r\n     */\r\n    function getProof(uint256 proofId) external view returns (ProofData memory) {\r\n        return _proofs[proofId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets information about a circuit\r\n     * @param circuitId The ID of the circuit\r\n     * @return The circuit data\r\n     */\r\n    function getCircuitData(uint256 circuitId) external view override returns (VerifierCircuit memory) {\r\n        return _circuits[circuitId];\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets all proofs owned by an address\r\n     * @param owner The address to get proofs for\r\n     * @return An array of proof IDs\r\n     */\r\n    function getProofsByOwner(address owner) external view returns (uint256[] memory) {\r\n        return _ownerProofs[owner];\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets the number of proofs created by a user\r\n     * @param user The address of the user\r\n     * @return The number of proofs\r\n     */\r\n    function getProofCount(address user) external view returns (uint256) {\r\n        return _ownerProofs[user].length;\r\n    }\r\n    \r\n    /**\r\n     * @dev Gets a proof ID by index in a user's proofs\r\n     * @param user The address of the user\r\n     * @param index The index in the user's proof array\r\n     * @return The proof ID\r\n     */\r\n    function userProofByIndex(address user, uint256 index) external view returns (uint256) {\r\n        require(index < _ownerProofs[user].length, \"ZKVerifier: Index out of bounds\");\r\n        return _ownerProofs[user][index];\r\n    }\r\n    \r\n    /**\r\n     * @dev Deactivate a circuit\r\n     * @param circuitId The ID of the circuit to deactivate\r\n     */\r\n    function deactivateCircuit(uint256 circuitId) external onlyAdmin {\r\n        require(_circuits[circuitId].id != 0, \"ZKVerifier: Circuit does not exist\");\r\n        _circuits[circuitId].isActive = false;\r\n    }\r\n    \r\n    /**\r\n     * @dev Reactivate a circuit\r\n     * @param circuitId The ID of the circuit to reactivate\r\n     */\r\n    function reactivateCircuit(uint256 circuitId) external onlyAdmin {\r\n        require(_circuits[circuitId].id != 0, \"ZKVerifier: Circuit does not exist\");\r\n        _circuits[circuitId].isActive = true;\r\n    }\r\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/IssuerRegistry.sol:65:9:\n   |\n65 |         string calldata verificationData\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":1997,"file":"contracts/IssuerRegistry.sol","start":1965},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/IssuerRegistry.sol:149:9:\n    |\n149 |         string calldata verificationData\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5108,"file":"contracts/IssuerRegistry.sol","start":5076},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/ZKVerifier.sol:158:43:\n    |\n158 |     function verifyProof(uint256 proofId, address verifierAddress) external view override returns (bool) {\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5117,"file":"contracts/ZKVerifier.sol","start":5094},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1511],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1512,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1511],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1511],"ERC165":[2989],"ERC721":[1241],"ERC721Utils":[1481],"IERC165":[3001],"IERC721":[1358],"IERC721Errors":[237],"IERC721Metadata":[1404],"Strings":[2965]},"id":1242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1359,"src":"133:38:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1405,"src":"172:65:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"180:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1482,"src":"238:52:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"246:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1512,"src":"291:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"299:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":2966,"src":"340:48:2","symbolAliases":[{"foreign":{"id":295,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"348:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":2990,"src":"389:69:2","symbolAliases":[{"foreign":{"id":297,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"397:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":298,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2989,"src":"406:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":285,"src":"459:66:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["803:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1511,"src":"803:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"803:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["812:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"812:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"812:6:2"},{"baseName":{"id":307,"name":"IERC721","nameLocations":["820:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"820:7:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"820:7:2"},{"baseName":{"id":309,"name":"IERC721Metadata","nameLocations":["829:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1404,"src":"829:15:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"829:15:2"},{"baseName":{"id":311,"name":"IERC721Errors","nameLocations":["846:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"846:13:2"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"527:247:2","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1241,"linearizedBaseContracts":[1241,237,1404,1358,2989,3001,1511],"name":"ERC721","nameLocation":"793:6:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":315,"libraryName":{"id":313,"name":"Strings","nameLocations":["872:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":2965,"src":"872:7:2"},"nodeType":"UsingForDirective","src":"866:26:2","typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"931:5:2","nodeType":"VariableDeclaration","scope":1241,"src":"916:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"963:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":323,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"992:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":322,"keyName":"tokenId","keyNameLocation":"1008:7:2","keyType":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:2","nodeType":"VariableDeclaration","scope":1241,"src":"1050:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":326,"keyName":"owner","keyNameLocation":"1066:5:2","keyType":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":331,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:2","nodeType":"VariableDeclaration","scope":1241,"src":"1108:59:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":330,"keyName":"tokenId","keyNameLocation":"1124:7:2","keyType":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":337,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:2","nodeType":"VariableDeclaration","scope":1241,"src":"1174:86:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":336,"keyName":"owner","keyNameLocation":"1190:5:2","keyType":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"keyName":"operator","keyNameLocation":"1215:8:2","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":334,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":353,"nodeType":"Block","src":"1436:57:2","statements":[{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1446:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":346,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1454:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":348,"nodeType":"ExpressionStatement","src":"1446:13:2"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":349,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1469:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":350,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1479:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":352,"nodeType":"ExpressionStatement","src":"1469:17:2"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"1267:108:2","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":354,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"name_","nameLocation":"1406:5:2","nodeType":"VariableDeclaration","scope":354,"src":"1392:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:2","nodeType":"VariableDeclaration","scope":354,"src":"1413:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"1436:0:2"},"scope":1241,"src":"1380:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2988,3000],"body":{"id":384,"nodeType":"Block","src":"1668:192:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1697:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":367,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"1717:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}],"id":366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1358","typeString":"type(contract IERC721)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1753:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":373,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1773:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}],"id":372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1404","typeString":"type(contract IERC721Metadata)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":380,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1841:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":378,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1241_$","typeString":"type(contract super ERC721)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2988,"src":"1817:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":364,"id":383,"nodeType":"Return","src":"1678:175:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1499:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:2","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[{"id":359,"name":"ERC165","nameLocations":["1636:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":2989,"src":"1636:6:2"},{"id":360,"name":"IERC165","nameLocations":["1644:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3001,"src":"1644:7:2"}],"src":"1627:25:2"},"parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:2","nodeType":"VariableDeclaration","scope":385,"src":"1587:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":356,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"1662:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:2"},"scope":1241,"src":"1560:300:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":412,"nodeType":"Block","src":"1991:136:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2005:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:2","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":407,"nodeType":"IfStatement","src":"2001:87:2","trueBody":{"id":406,"nodeType":"Block","src":"2026:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:2","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":399,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2047:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"RevertStatement","src":"2040:37:2"}]}},{"expression":{"baseExpression":{"id":408,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2104:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":410,"indexExpression":{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2114:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":392,"id":411,"nodeType":"Return","src":"2097:23:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"1866:48:2","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":413,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"1946:5:2","nodeType":"VariableDeclaration","scope":413,"src":"1938:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"1982:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:2"},"scope":1241,"src":"1919:208:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1291],"body":{"id":425,"nodeType":"Block","src":"2256:46:2","statements":[{"expression":{"arguments":[{"id":422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2287:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2273:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"2266:29:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2133:46:2","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:2","nodeType":"VariableDeclaration","scope":426,"src":"2201:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"2247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:2"},"scope":1241,"src":"2184:118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1389],"body":{"id":434,"nodeType":"Block","src":"2424:29:2","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2441:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"2434:12:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2308:51:2","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"2377:2:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2409:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:2"},"scope":1241,"src":"2364:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1395],"body":{"id":443,"nodeType":"Block","src":"2579:31:2","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2596:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2589:14:2"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"2459:53:2","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2532:2:2"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2564:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:2"},"scope":1241,"src":"2517:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1403],"body":{"id":479,"nodeType":"Block","src":"2755:176:2","statements":[{"expression":{"arguments":[{"id":453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2779:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2765:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"nodeType":"ExpressionStatement","src":"2765:22:2"},{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:2","nodeType":"VariableDeclaration","scope":479,"src":"2798:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":460,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":458,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2822:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":463,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2855:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:2","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:2","memberName":"length","nodeType":"MemberAccess","src":"2849:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:2","trueExpression":{"arguments":[{"id":471,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2891:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2900:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1677,"src":"2900:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":468,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:2","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":451,"id":478,"nodeType":"Return","src":"2842:82:2"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2616:55:2","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":480,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:2","nodeType":"VariableDeclaration","scope":480,"src":"2694:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:2"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"2740:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":449,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:2"},"scope":1241,"src":"2676:255:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":488,"nodeType":"Block","src":"3239:26:2","statements":[{"expression":{"hexValue":"","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":485,"id":487,"nodeType":"Return","src":"3249:9:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2937:231:2","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"3190:2:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"3224:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":483,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:2"},"scope":1241,"src":"3173:92:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1331],"body":{"id":504,"nodeType":"Block","src":"3383:52:2","statements":[{"expression":{"arguments":[{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3402:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3415:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1108,"src":"3393:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"3393:35:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"3271:46:2","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:2","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"to","nameLocation":"3347:2:2","nodeType":"VariableDeclaration","scope":505,"src":"3339:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:2","nodeType":"VariableDeclaration","scope":505,"src":"3351:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:2"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"3383:0:2"},"scope":1241,"src":"3322:113:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1347],"body":{"id":521,"nodeType":"Block","src":"3572:78:2","statements":[{"expression":{"arguments":[{"id":514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3582:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":516,"nodeType":"ExpressionStatement","src":"3582:22:2"},{"expression":{"arguments":[{"id":518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3635:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3622:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":512,"id":520,"nodeType":"Return","src":"3615:28:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3441:50:2","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:2","nodeType":"VariableDeclaration","scope":522,"src":"3517:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:2"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"3563:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:2"},"scope":1241,"src":"3496:154:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1339],"body":{"id":537,"nodeType":"Block","src":"3792:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3821:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3835:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3845:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":530,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3802:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"3802:52:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3656:56:2","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":538,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:2","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"operator","nameLocation":"3752:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3744:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"approved","nameLocation":"3767:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3762:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"3792:0:2"},"scope":1241,"src":"3717:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1357],"body":{"id":554,"nodeType":"Block","src":"4021:59:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":548,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4038:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":550,"indexExpression":{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4057:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":552,"indexExpression":{"id":551,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4064:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":547,"id":553,"nodeType":"Return","src":"4031:42:2"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3867:55:2","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:2","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"owner","nameLocation":"3961:5:2","nodeType":"VariableDeclaration","scope":555,"src":"3953:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"operator","nameLocation":"3976:8:2","nodeType":"VariableDeclaration","scope":555,"src":"3968:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:2"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"4015:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:2"},"scope":1241,"src":"3927:153:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":600,"nodeType":"Block","src":"4222:498:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4236:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"4232:87:2","trueBody":{"id":578,"nodeType":"Block","src":"4254:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:2","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":571,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4275:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"RevertStatement","src":"4268:40:2"}]}},{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:2","nodeType":"VariableDeclaration","scope":600,"src":"4537:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":588,"initialValue":{"arguments":[{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4569:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4573:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":585,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"4582:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4561:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4609:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":590,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4626:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"IfStatement","src":"4605:109:2","trueBody":{"id":598,"nodeType":"Block","src":"4632:82:2","statements":[{"errorCall":{"arguments":[{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4680:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":595,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4689:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4653:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":597,"nodeType":"RevertStatement","src":"4646:57:2"}]}}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"4086:51:2","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:2","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"from","nameLocation":"4172:4:2","nodeType":"VariableDeclaration","scope":601,"src":"4164:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"to","nameLocation":"4186:2:2","nodeType":"VariableDeclaration","scope":601,"src":"4178:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:2","nodeType":"VariableDeclaration","scope":601,"src":"4190:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:2"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"4222:0:2"},"scope":1241,"src":"4142:578:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1313],"body":{"id":618,"nodeType":"Block","src":"4862:56:2","statements":[{"expression":{"arguments":[{"id":612,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4889:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4895:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4899:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":611,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[619,649],"referencedDeclaration":649,"src":"4872:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"4872:39:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4726:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"from","nameLocation":"4820:4:2","nodeType":"VariableDeclaration","scope":619,"src":"4812:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"to","nameLocation":"4834:2:2","nodeType":"VariableDeclaration","scope":619,"src":"4826:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:2","nodeType":"VariableDeclaration","scope":619,"src":"4838:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"4862:0:2"},"scope":1241,"src":"4786:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":648,"nodeType":"Block","src":"5087:130:2","statements":[{"expression":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5110:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5116:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5120:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"5097:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"5097:31:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5172:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5192:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":645,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5205:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":637,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"5138:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"5138:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"5138:72:2"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"4924:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":649,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"5018:4:2","nodeType":"VariableDeclaration","scope":649,"src":"5010:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"5032:2:2","nodeType":"VariableDeclaration","scope":649,"src":"5024:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:2","nodeType":"VariableDeclaration","scope":649,"src":"5036:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"data","nameLocation":"5066:4:2","nodeType":"VariableDeclaration","scope":649,"src":"5053:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"5087:0:2"},"scope":1241,"src":"4984:233:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":661,"nodeType":"Block","src":"5807:40:2","statements":[{"expression":{"baseExpression":{"id":657,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5824:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":659,"indexExpression":{"id":658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5832:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":656,"id":660,"nodeType":"Return","src":"5817:23:2"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"5223:504:2","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":662,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:2","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:2","nodeType":"VariableDeclaration","scope":662,"src":"5750:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:2"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":662,"src":"5798:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:2"},"scope":1241,"src":"5732:115:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"6042:48:2","statements":[{"expression":{"baseExpression":{"id":670,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6059:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":672,"indexExpression":{"id":671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":669,"id":673,"nodeType":"Return","src":"6052:31:2"}]},"documentation":{"id":663,"nodeType":"StructuredDocumentation","src":"5853:105:2","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:2","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:2","nodeType":"VariableDeclaration","scope":675,"src":"5985:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:2"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"6033:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:2"},"scope":1241,"src":"5963:127:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"6510:163:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6539:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:2","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6577:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":694,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6614:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6621:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":696,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6597:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":702,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6646:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"6633:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":704,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6658:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":686,"id":709,"nodeType":"Return","src":"6520:146:2"}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"6096:300:2","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:2","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"owner","nameLocation":"6432:5:2","nodeType":"VariableDeclaration","scope":711,"src":"6424:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"spender","nameLocation":"6447:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6439:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6456:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:2"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"6504:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":684,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:2"},"scope":1241,"src":"6401:272:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"7202:271:2","statements":[{"condition":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:2","subExpression":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7231:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7238:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7247:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":721,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"7217:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"7212:255:2","trueBody":{"id":745,"nodeType":"Block","src":"7257:210:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7275:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":743,"nodeType":"Block","src":"7373:84:2","statements":[{"errorCall":{"arguments":[{"id":739,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7425:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7434:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7398:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":742,"nodeType":"RevertStatement","src":"7391:51:2"}]},"id":744,"nodeType":"IfStatement","src":"7271:186:2","trueBody":{"id":737,"nodeType":"Block","src":"7296:71:2","statements":[{"errorCall":{"arguments":[{"id":734,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7344:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7321:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":736,"nodeType":"RevertStatement","src":"7314:38:2"}]}}]}}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"6679:421:2","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:2","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"owner","nameLocation":"7139:5:2","nodeType":"VariableDeclaration","scope":748,"src":"7131:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"spender","nameLocation":"7154:7:2","nodeType":"VariableDeclaration","scope":748,"src":"7146:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:2","nodeType":"VariableDeclaration","scope":748,"src":"7163:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:2"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"7202:0:2"},"scope":1241,"src":"7105:368:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"8190:78:2","statements":[{"id":762,"nodeType":"UncheckedBlock","src":"8200:62:2","statements":[{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":756,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8224:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":758,"indexExpression":{"id":757,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"8234:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"8246:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"8224:27:2"}]}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"7479:631:2","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:2","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"account","nameLocation":"8149:7:2","nodeType":"VariableDeclaration","scope":764,"src":"8141:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"value","nameLocation":"8166:5:2","nodeType":"VariableDeclaration","scope":764,"src":"8158:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":752,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:2"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"8190:0:2"},"scope":1241,"src":"8115:153:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"8956:700:2","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"from","nameLocation":"8974:4:2","nodeType":"VariableDeclaration","scope":853,"src":"8966:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[{"id":779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8990:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"8981:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"9058:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:2","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":795,"nodeType":"IfStatement","src":"9054:86:2","trueBody":{"id":794,"nodeType":"Block","src":"9078:62:2","statements":[{"expression":{"arguments":[{"id":789,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9109:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"9115:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":788,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9092:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"9092:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9184:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:2","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"9180:256:2","trueBody":{"id":822,"nodeType":"Block","src":"9204:232:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:2","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9321:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:2","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":802,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"9300:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"9300:48:2"},{"id":821,"nodeType":"UncheckedBlock","src":"9363:63:2","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":815,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9391:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":817,"indexExpression":{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9401:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"9391:20:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9450:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:2","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"9446:107:2","trueBody":{"id":837,"nodeType":"Block","src":"9468:85:2","statements":[{"id":836,"nodeType":"UncheckedBlock","src":"9482:61:2","statements":[{"expression":{"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":830,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9510:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":832,"indexExpression":{"id":831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9520:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ExpressionStatement","src":"9510:18:2"}]}]}},{"expression":{"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":839,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"9563:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":841,"indexExpression":{"id":840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9571:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9582:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":844,"nodeType":"ExpressionStatement","src":"9563:21:2"},{"eventCall":{"arguments":[{"id":846,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9609:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9615:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9619:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":845,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9600:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"EmitStatement","src":"9595:32:2"},{"expression":{"id":851,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9645:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":775,"id":852,"nodeType":"Return","src":"9638:11:2"}]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"8274:582:2","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"to","nameLocation":"8886:2:2","nodeType":"VariableDeclaration","scope":854,"src":"8878:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:2","nodeType":"VariableDeclaration","scope":854,"src":"8890:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"auth","nameLocation":"8915:4:2","nodeType":"VariableDeclaration","scope":854,"src":"8907:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"8947:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:2"},"scope":1241,"src":"8861:795:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"10031:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10045:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:2","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":876,"nodeType":"IfStatement","src":"10041:87:2","trueBody":{"id":875,"nodeType":"Block","src":"10063:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:2","typeDescriptions":{}}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":868,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10084:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"RevertStatement","src":"10077:40:2"}]}},{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:2","nodeType":"VariableDeclaration","scope":903,"src":"10137:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":887,"initialValue":{"arguments":[{"id":880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10169:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10173:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:2","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":879,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10161:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10207:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:2","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":902,"nodeType":"IfStatement","src":"10203:96:2","trueBody":{"id":901,"nodeType":"Block","src":"10236:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:2","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":894,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10257:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"RevertStatement","src":"10250:38:2"}]}}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"9662:311:2","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"to","nameLocation":"10001:2:2","nodeType":"VariableDeclaration","scope":904,"src":"9993:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:2","nodeType":"VariableDeclaration","scope":904,"src":"10005:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:2"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"10031:0:2"},"scope":1241,"src":"9978:327:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":918,"nodeType":"Block","src":"10713:43:2","statements":[{"expression":{"arguments":[{"id":913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10733:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"10737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":912,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":949,"src":"10723:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"ExpressionStatement","src":"10723:26:2"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"10311:340:2","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":919,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"to","nameLocation":"10683:2:2","nodeType":"VariableDeclaration","scope":919,"src":"10675:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:2","nodeType":"VariableDeclaration","scope":919,"src":"10687:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"10713:0:2"},"scope":1241,"src":"10656:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"11061:123:2","statements":[{"expression":{"arguments":[{"id":930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11077:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11081:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":929,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"11071:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"11071:18:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":937,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"11133:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:2","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11159:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11163:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":945,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"11172:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":934,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11099:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"11099:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"11099:78:2"}]},"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"10762:210:2","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:2","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"to","nameLocation":"11004:2:2","nodeType":"VariableDeclaration","scope":949,"src":"10996:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:2","nodeType":"VariableDeclaration","scope":949,"src":"11008:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"data","nameLocation":"11038:4:2","nodeType":"VariableDeclaration","scope":949,"src":"11025:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":925,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:2"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"11061:0:2"},"scope":1241,"src":"10977:207:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"11551:186:2","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:2","nodeType":"VariableDeclaration","scope":981,"src":"11561:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":968,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:2","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11605:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:2","typeDescriptions":{}}},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":957,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11585:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11639:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:2","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"11635:96:2","trueBody":{"id":979,"nodeType":"Block","src":"11668:63:2","statements":[{"errorCall":{"arguments":[{"id":976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":975,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11689:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"RevertStatement","src":"11682:38:2"}]}}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"11190:315:2","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:2","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:2","nodeType":"VariableDeclaration","scope":982,"src":"11525:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:2"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"11551:0:2"},"scope":1241,"src":"11510:227:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1041,"nodeType":"Block","src":"12132:389:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12146:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:2","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1006,"nodeType":"IfStatement","src":"12142:87:2","trueBody":{"id":1005,"nodeType":"Block","src":"12164:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:2","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":998,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12185:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"RevertStatement","src":"12178:40:2"}]}},{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:2","nodeType":"VariableDeclaration","scope":1041,"src":"12238:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1017,"initialValue":{"arguments":[{"id":1010,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12270:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:2","typeDescriptions":{}}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1009,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"12262:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12308:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:2","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12410:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1030,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12427:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1039,"nodeType":"IfStatement","src":"12406:109:2","trueBody":{"id":1038,"nodeType":"Block","src":"12433:82:2","statements":[{"errorCall":{"arguments":[{"id":1033,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12475:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12481:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1035,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12490:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1032,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12454:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1037,"nodeType":"RevertStatement","src":"12447:57:2"}]}},"id":1040,"nodeType":"IfStatement","src":"12304:211:2","trueBody":{"id":1028,"nodeType":"Block","src":"12337:63:2","statements":[{"errorCall":{"arguments":[{"id":1025,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12381:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1024,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12358:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"RevertStatement","src":"12351:38:2"}]}}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"11743:313:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:2","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"from","nameLocation":"12088:4:2","nodeType":"VariableDeclaration","scope":1042,"src":"12080:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"to","nameLocation":"12102:2:2","nodeType":"VariableDeclaration","scope":1042,"src":"12094:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:2","nodeType":"VariableDeclaration","scope":1042,"src":"12106:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:2"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"12132:0:2"},"scope":1241,"src":"12061:460:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1059,"nodeType":"Block","src":"13530:53:2","statements":[{"expression":{"arguments":[{"id":1053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13554:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"13560:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"13564:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1052,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1060,1090],"referencedDeclaration":1090,"src":"13540:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"13540:36:2"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"12527:923:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:2","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"from","nameLocation":"13486:4:2","nodeType":"VariableDeclaration","scope":1060,"src":"13478:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"to","nameLocation":"13500:2:2","nodeType":"VariableDeclaration","scope":1060,"src":"13492:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:2","nodeType":"VariableDeclaration","scope":1060,"src":"13504:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:2"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"13530:0:2"},"scope":1241,"src":"13455:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"13922:127:2","statements":[{"expression":{"arguments":[{"id":1073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"13942:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"13948:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13952:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"13932:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"13932:28:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1081,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"14004:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"14018:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"14024:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"14028:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"14037:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1078,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"13970:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"13970:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"13970:72:2"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"13589:226:2","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:2","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"from","nameLocation":"13851:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13843:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"to","nameLocation":"13865:2:2","nodeType":"VariableDeclaration","scope":1090,"src":"13857:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:2","nodeType":"VariableDeclaration","scope":1090,"src":"13869:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"data","nameLocation":"13899:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13886:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:2"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"13922:0:2"},"scope":1241,"src":"13820:229:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"14562:50:2","statements":[{"expression":{"arguments":[{"id":1101,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"14581:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"14585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1103,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"14594:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1100,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"14572:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"14572:33:2"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"14055:432:2","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:2","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"to","nameLocation":"14518:2:2","nodeType":"VariableDeclaration","scope":1108,"src":"14510:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:2","nodeType":"VariableDeclaration","scope":1108,"src":"14522:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"auth","nameLocation":"14547:4:2","nodeType":"VariableDeclaration","scope":1108,"src":"14539:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:2"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"14562:0:2"},"scope":1241,"src":"14492:120:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1173,"nodeType":"Block","src":"14888:568:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14954:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14967:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:2","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"IfStatement","src":"14950:460:2","trueBody":{"id":1165,"nodeType":"Block","src":"14987:423:2","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"owner","nameLocation":"15009:5:2","nodeType":"VariableDeclaration","scope":1165,"src":"15001:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"id":1131,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15031:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1130,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"15017:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1134,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15167:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:2","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15189:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1141,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:2","subExpression":{"arguments":[{"id":1145,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15224:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15231:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1144,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"15207:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1155,"nodeType":"IfStatement","src":"15163:142:2","trueBody":{"id":1154,"nodeType":"Block","src":"15238:67:2","statements":[{"errorCall":{"arguments":[{"id":1151,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15285:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1150,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15263:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1153,"nodeType":"RevertStatement","src":"15256:34:2"}]}},{"condition":{"id":1156,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15323:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"IfStatement","src":"15319:81:2","trueBody":{"id":1163,"nodeType":"Block","src":"15334:66:2","statements":[{"eventCall":{"arguments":[{"id":1158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15366:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15373:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15377:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1157,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"15357:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"EmitStatement","src":"15352:33:2"}]}}]}},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1167,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15420:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1169,"indexExpression":{"id":1168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15436:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15447:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1172,"nodeType":"ExpressionStatement","src":"15420:29:2"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"14618:171:2","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:2","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"to","nameLocation":"14820:2:2","nodeType":"VariableDeclaration","scope":1174,"src":"14812:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:2","nodeType":"VariableDeclaration","scope":1174,"src":"14824:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"auth","nameLocation":"14849:4:2","nodeType":"VariableDeclaration","scope":1174,"src":"14841:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:2","nodeType":"VariableDeclaration","scope":1174,"src":"14855:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:2"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"14888:0:2"},"scope":1241,"src":"14794:662:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"15758:219:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15772:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:2","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1195,"nodeType":"IfStatement","src":"15768:91:2","trueBody":{"id":1194,"nodeType":"Block","src":"15796:63:2","statements":[{"errorCall":{"arguments":[{"id":1191,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15839:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1190,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15817:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"RevertStatement","src":"15810:38:2"}]}},{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1196,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"15868:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1199,"indexExpression":{"id":1197,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15887:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1200,"indexExpression":{"id":1198,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15894:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1201,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15906:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1203,"nodeType":"ExpressionStatement","src":"15868:46:2"},{"eventCall":{"arguments":[{"id":1205,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15944:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15951:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15961:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1204,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"15929:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"15924:46:2"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"15462:198:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:2","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"owner","nameLocation":"15701:5:2","nodeType":"VariableDeclaration","scope":1211,"src":"15693:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"operator","nameLocation":"15716:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15708:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"approved","nameLocation":"15731:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15726:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1180,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:2"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"15758:0:2"},"scope":1241,"src":"15665:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"16284:169:2","statements":[{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"owner","nameLocation":"16302:5:2","nodeType":"VariableDeclaration","scope":1239,"src":"16294:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1224,"initialValue":{"arguments":[{"id":1222,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"16319:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1221,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"16310:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"16341:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:2","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1236,"nodeType":"IfStatement","src":"16337:88:2","trueBody":{"id":1235,"nodeType":"Block","src":"16362:63:2","statements":[{"errorCall":{"arguments":[{"id":1232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"16406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16383:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1234,"nodeType":"RevertStatement","src":"16376:38:2"}]}},{"expression":{"id":1237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"16441:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1218,"id":1238,"nodeType":"Return","src":"16434:12:2"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"15983:224:2","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:2","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:2","nodeType":"VariableDeclaration","scope":1240,"src":"16235:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:2"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"16275:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:2"},"scope":1241,"src":"16212:241:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1242,"src":"775:15680:2","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1257,1266,1275]}],"src":"107:16349:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3001],"IERC721":[1358]},"id":1359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1243,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1359,"sourceUnit":3002,"src":"134:62:3","symbolAliases":[{"foreign":{"id":1244,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1247,"name":"IERC165","nameLocations":["288:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3001,"src":"288:7:3"},"id":1248,"nodeType":"InheritanceSpecifier","src":"288:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"198:68:3","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1358,"linearizedBaseContracts":[1358,3001],"name":"IERC721","nameLocation":"277:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"302:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1257,"name":"Transfer","nameLocation":"401:8:3","nodeType":"EventDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:3","nodeType":"VariableDeclaration","scope":1257,"src":"410:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:3","nodeType":"VariableDeclaration","scope":1257,"src":"432:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:3","nodeType":"VariableDeclaration","scope":1257,"src":"452:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:3"},"src":"395:82:3"},{"anonymous":false,"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"483:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1266,"name":"Approval","nameLocation":"588:8:3","nodeType":"EventDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:3","nodeType":"VariableDeclaration","scope":1266,"src":"597:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1262,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:3","nodeType":"VariableDeclaration","scope":1266,"src":"620:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1264,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:3","nodeType":"VariableDeclaration","scope":1266,"src":"646:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:3"},"src":"582:89:3"},{"anonymous":false,"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"677:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1275,"name":"ApprovalForAll","nameLocation":"805:14:3","nodeType":"EventDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:3","nodeType":"VariableDeclaration","scope":1275,"src":"820:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"843:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"869:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:3"},"src":"799:85:3"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"890:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:3","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"owner","nameLocation":"998:5:3","nodeType":"VariableDeclaration","scope":1283,"src":"990:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"balance","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1283,"src":"1028:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:3"},"scope":1358,"src":"971:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"1051:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1291,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:3","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:3","nodeType":"VariableDeclaration","scope":1291,"src":"1204:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:3"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"1252:5:3","nodeType":"VariableDeclaration","scope":1291,"src":"1244:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:3"},"scope":1358,"src":"1187:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"1265:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:3","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"from","nameLocation":"1869:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1861:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"to","nameLocation":"1883:2:3","nodeType":"VariableDeclaration","scope":1303,"src":"1875:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:3","nodeType":"VariableDeclaration","scope":1303,"src":"1887:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"data","nameLocation":"1919:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1904:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:3"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"1933:0:3"},"scope":1358,"src":"1835:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"1940:706:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:3","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":1313,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"to","nameLocation":"2699:2:3","nodeType":"VariableDeclaration","scope":1313,"src":"2691:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:3","nodeType":"VariableDeclaration","scope":1313,"src":"2703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:3"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"2728:0:3"},"scope":1358,"src":"2651:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2735:733:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"3503:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"3495:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"3517:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"3509:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:3","nodeType":"VariableDeclaration","scope":1323,"src":"3521:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"3546:0:3"},"scope":1358,"src":"3473:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"3553:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1331,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:3","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"to","nameLocation":"4035:2:3","nodeType":"VariableDeclaration","scope":1331,"src":"4027:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:3","nodeType":"VariableDeclaration","scope":1331,"src":"4039:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:3"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"4064:0:3"},"scope":1358,"src":"4010:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"4071:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:3","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"4426:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4418:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"approved","nameLocation":"4441:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4436:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:3"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"4459:0:3"},"scope":1358,"src":"4391:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"4466:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:3","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:3","nodeType":"VariableDeclaration","scope":1347,"src":"4631:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:3"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"operator","nameLocation":"4679:8:3","nodeType":"VariableDeclaration","scope":1347,"src":"4671:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:3"},"scope":1358,"src":"4610:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"4695:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1357,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:3","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"owner","nameLocation":"4872:5:3","nodeType":"VariableDeclaration","scope":1357,"src":"4864:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"operator","nameLocation":"4887:8:3","nodeType":"VariableDeclaration","scope":1357,"src":"4879:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:3"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"4920:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1354,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:3"},"scope":1358,"src":"4838:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1359,"src":"267:4661:3","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"108:4821:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1376]},"id":1377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1360,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"142:154:4","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1376,"linearizedBaseContracts":[1376],"name":"IERC721Receiver","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"329:500:4","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:4","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"operator","nameLocation":"877:8:4","nodeType":"VariableDeclaration","scope":1375,"src":"869:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"from","nameLocation":"903:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"895:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:4","nodeType":"VariableDeclaration","scope":1375,"src":"917:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"data","nameLocation":"957:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"942:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1369,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:4"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"986:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1372,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:4"},"scope":1376,"src":"834:160:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1377,"src":"297:699:4","usedErrors":[],"usedEvents":[]}],"src":"116:881:4"},"id":4},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1358],"IERC721Metadata":[1404]},"id":1405,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1378,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1405,"sourceUnit":1359,"src":"153:39:5","symbolAliases":[{"foreign":{"id":1379,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"161:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1382,"name":"IERC721","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"357:7:5"},"id":1383,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"194:133:5","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1404,"linearizedBaseContracts":[1404,1358,3001],"name":"IERC721Metadata","nameLocation":"338:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"371:58:5","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:5","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"473:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1386,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:5"},"scope":1404,"src":"434:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"494:60:5","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:5","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"574:2:5"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"600:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1392,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:5"},"scope":1404,"src":"559:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"621:90:5","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1403,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:5","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:5","nodeType":"VariableDeclaration","scope":1403,"src":"734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:5"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1403,"src":"774:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:5"},"scope":1404,"src":"716:73:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1405,"src":"328:463:5","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"127:665:5"},"id":5},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1481],"IERC721Errors":[237],"IERC721Receiver":[1376]},"id":1482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1406,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":1377,"src":"144:55:6","symbolAliases":[{"foreign":{"id":1407,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"152:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":285,"src":"200:69:6","symbolAliases":[{"foreign":{"id":1409,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"271:159:6","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1481,"linearizedBaseContracts":[1481],"name":"ERC721Utils","nameLocation":"439:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1479,"nodeType":"Block","src":"1159:758:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1173:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:6","memberName":"code","nodeType":"MemberAccess","src":"1173:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:6","memberName":"length","nodeType":"MemberAccess","src":"1173:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"1169:742:6","trueBody":{"id":1477,"nodeType":"Block","src":"1193:718:6","statements":[{"clauses":[{"block":{"id":1455,"nodeType":"Block","src":"1303:214:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"1325:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1443,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1335:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1335:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1454,"nodeType":"IfStatement","src":"1321:182:6","trueBody":{"id":1453,"nodeType":"Block","src":"1378:125:6","statements":[{"errorCall":{"arguments":[{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1481:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1447,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1445:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1445:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1452,"nodeType":"RevertStatement","src":"1438:46:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"retval","nameLocation":"1295:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1288:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1439,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:6"},"src":"1279:238:6"},{"block":{"id":1474,"nodeType":"Block","src":"1546:355:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1460,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1568:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:6","memberName":"length","nodeType":"MemberAccess","src":"1568:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1472,"nodeType":"Block","src":"1736:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1820:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1824:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:6"},"nodeType":"YulFunctionCall","src":"1816:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1839:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1833:5:6"},"nodeType":"YulFunctionCall","src":"1833:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:6"},"nodeType":"YulFunctionCall","src":"1809:38:6"},"nodeType":"YulExpressionStatement","src":"1809:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1824:6:6","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1839:6:6","valueSize":1}],"flags":["memory-safe"],"id":1471,"nodeType":"InlineAssembly","src":"1758:111:6"}]},"id":1473,"nodeType":"IfStatement","src":"1564:323:6","trueBody":{"id":1470,"nodeType":"Block","src":"1588:142:6","statements":[{"errorCall":{"arguments":[{"id":1467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1708:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1464,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1672:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1672:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"RevertStatement","src":"1665:46:6"}]}}]},"errorName":"","id":1475,"nodeType":"TryCatchClause","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"reason","nameLocation":"1538:6:6","nodeType":"VariableDeclaration","scope":1475,"src":"1525:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:6"},"src":"1518:383:6"}],"externalCall":{"arguments":[{"id":1434,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1248:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1258:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1264:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1437,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1273:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1227:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1430,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1211:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1376","typeString":"contract IERC721Receiver"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1211:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1476,"nodeType":"TryStatement","src":"1207:694:6"}]}}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"457:531:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1480,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:6","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"operator","nameLocation":"1041:8:6","nodeType":"VariableDeclaration","scope":1480,"src":"1033:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"from","nameLocation":"1067:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1059:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"to","nameLocation":"1089:2:6","nodeType":"VariableDeclaration","scope":1480,"src":"1081:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:6","nodeType":"VariableDeclaration","scope":1480,"src":"1101:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"1139:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1126:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:6"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"1159:0:6"},"scope":1481,"src":"993:924:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1482,"src":"431:1488:6","usedErrors":[],"usedEvents":[]}],"src":"118:1802:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1511]},"id":1512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"127:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1511,"linearizedBaseContracts":[1511],"name":"Context","nameLocation":"642:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1492,"nodeType":"Block","src":"718:34:7","statements":[{"expression":{"expression":{"id":1489,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:7","memberName":"sender","nodeType":"MemberAccess","src":"735:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1488,"id":1491,"nodeType":"Return","src":"728:17:7"}]},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:7","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[],"src":"675:2:7"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1493,"src":"709:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:7"},"scope":1511,"src":"656:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1501,"nodeType":"Block","src":"825:32:7","statements":[{"expression":{"expression":{"id":1498,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:7","memberName":"data","nodeType":"MemberAccess","src":"842:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1497,"id":1500,"nodeType":"Return","src":"835:15:7"}]},"id":1502,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:7","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[],"src":"775:2:7"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1502,"src":"809:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:7"},"scope":1511,"src":"758:99:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1509,"nodeType":"Block","src":"935:25:7","statements":[{"expression":{"hexValue":"30","id":1507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1506,"id":1508,"nodeType":"Return","src":"945:8:7"}]},"id":1510,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:7","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"892:2:7"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1510,"src":"926:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:7"},"scope":1511,"src":"863:97:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1512,"src":"624:338:7","usedErrors":[],"usedEvents":[]}],"src":"101:862:7"},"id":7},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1563]},"id":1564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1513,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"125:489:8","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1563,"linearizedBaseContracts":[1563],"name":"Panic","nameLocation":"665:5:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"677:36:8","text":"@dev generic / unspecified error"},"id":1518,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:8","nodeType":"VariableDeclaration","scope":1563,"src":"718:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1519,"nodeType":"StructuredDocumentation","src":"764:37:8","text":"@dev used by the assert() builtin"},"id":1522,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:8","nodeType":"VariableDeclaration","scope":1563,"src":"806:39:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"851:41:8","text":"@dev arithmetic underflow or overflow"},"id":1526,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:8","nodeType":"VariableDeclaration","scope":1563,"src":"897:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:8","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1527,"nodeType":"StructuredDocumentation","src":"950:35:8","text":"@dev division or modulo by zero"},"id":1530,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:8","nodeType":"VariableDeclaration","scope":1563,"src":"990:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1528,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"1045:30:8","text":"@dev enum conversion error"},"id":1534,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:8","nodeType":"VariableDeclaration","scope":1563,"src":"1080:54:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:8","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"1140:36:8","text":"@dev invalid encoding in storage"},"id":1538,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:8","nodeType":"VariableDeclaration","scope":1563,"src":"1181:55:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1536,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:8","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"1242:24:8","text":"@dev empty array pop"},"id":1542,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:8","nodeType":"VariableDeclaration","scope":1563,"src":"1271:48:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:8","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"1325:35:8","text":"@dev array out of bounds access"},"id":1546,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:8","nodeType":"VariableDeclaration","scope":1563,"src":"1365:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1544,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:8","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1423:65:8","text":"@dev resource error (too large allocation or too large array)"},"id":1550,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:8","nodeType":"VariableDeclaration","scope":1563,"src":"1493:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:8","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1551,"nodeType":"StructuredDocumentation","src":"1546:42:8","text":"@dev calling invalid internal function"},"id":1554,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:8","nodeType":"VariableDeclaration","scope":1563,"src":"1593:58:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:8","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1561,"nodeType":"Block","src":"1819:151:8","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:8","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:8","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:8","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:8"},"nodeType":"YulFunctionCall","src":"1868:24:8"},"nodeType":"YulExpressionStatement","src":"1868:24:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:8","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:8"},"nodeType":"YulFunctionCall","src":"1905:18:8"},"nodeType":"YulExpressionStatement","src":"1905:18:8"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:8","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:8","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:8"},"nodeType":"YulFunctionCall","src":"1936:18:8"},"nodeType":"YulExpressionStatement","src":"1936:18:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":1557,"isOffset":false,"isSlot":false,"src":"1918:4:8","valueSize":1}],"flags":["memory-safe"],"id":1560,"nodeType":"InlineAssembly","src":"1829:135:8"}]},"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"1658:113:8","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:8","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"code","nameLocation":"1799:4:8","nodeType":"VariableDeclaration","scope":1562,"src":"1791:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:8"},"returnParameters":{"id":1559,"nodeType":"ParameterList","parameters":[],"src":"1819:0:8"},"scope":1563,"src":"1776:194:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1564,"src":"657:1315:8","usedErrors":[],"usedEvents":[]}],"src":"99:1874:8"},"id":8},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4622],"SafeCast":[6387],"SignedMath":[6531],"Strings":[2965]},"id":2966,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1565,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1567,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2966,"sourceUnit":4623,"src":"127:37:9","symbolAliases":[{"foreign":{"id":1566,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"135:4:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2966,"sourceUnit":6388,"src":"165:45:9","symbolAliases":[{"foreign":{"id":1568,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"173:8:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1571,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2966,"sourceUnit":6532,"src":"211:49:9","symbolAliases":[{"foreign":{"id":1570,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"219:10:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"262:34:9","text":" @dev String operations."},"fullyImplemented":true,"id":2965,"linearizedBaseContracts":[2965],"name":"Strings","nameLocation":"305:7:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1574,"libraryName":{"id":1573,"name":"SafeCast","nameLocations":["325:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":6387,"src":"325:8:9"},"nodeType":"UsingForDirective","src":"319:21:9"},{"constant":true,"id":1577,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:9","nodeType":"VariableDeclaration","scope":2965,"src":"346:56:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1575,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1580,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:9","nodeType":"VariableDeclaration","scope":2965,"src":"408:42:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1578,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:9","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1616,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:9","nodeType":"VariableDeclaration","scope":2965,"src":"456:302:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:9","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1585,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:9","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:9","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1589,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:9","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:9","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:9","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1594,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:9","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:9","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:9","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:9","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1599,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:9","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:9","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:9","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:9","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:9","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:9","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:9","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1609,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:9","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:9","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:9","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:9","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:9","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:9","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"778:81:9","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1623,"name":"StringsInsufficientHexLength","nameLocation":"870:28:9","nodeType":"ErrorDefinition","parameters":{"id":1622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"value","nameLocation":"907:5:9","nodeType":"VariableDeclaration","scope":1623,"src":"899:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"length","nameLocation":"922:6:9","nodeType":"VariableDeclaration","scope":1623,"src":"914:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1620,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:9"},"src":"864:66:9"},{"documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"936:108:9","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1626,"name":"StringsInvalidChar","nameLocation":"1055:18:9","nodeType":"ErrorDefinition","parameters":{"id":1625,"nodeType":"ParameterList","parameters":[],"src":"1073:2:9"},"src":"1049:27:9"},{"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"1082:84:9","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1629,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:9","nodeType":"ErrorDefinition","parameters":{"id":1628,"nodeType":"ParameterList","parameters":[],"src":"1204:2:9"},"src":"1171:36:9"},{"body":{"id":1676,"nodeType":"Block","src":"1379:561:9","statements":[{"id":1675,"nodeType":"UncheckedBlock","src":"1389:545:9","statements":[{"assignments":[1638],"declarations":[{"constant":false,"id":1638,"mutability":"mutable","name":"length","nameLocation":"1421:6:9","nodeType":"VariableDeclaration","scope":1675,"src":"1413:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1645,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1441:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1639,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"1430:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4622_$","typeString":"type(library Math)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:9","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4454,"src":"1430:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:9"},{"assignments":[1647],"declarations":[{"constant":false,"id":1647,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:9","nodeType":"VariableDeclaration","scope":1675,"src":"1465:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1646,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1652,"initialValue":{"arguments":[{"id":1650,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"1499:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1648,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:9"},{"assignments":[1654],"declarations":[{"constant":false,"id":1654,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:9","nodeType":"VariableDeclaration","scope":1675,"src":"1520:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1655,"nodeType":"VariableDeclarationStatement","src":"1520:11:9"},{"AST":{"nodeType":"YulBlock","src":"1570:67:9","statements":[{"nodeType":"YulAssignment","src":"1588:35:9","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:9","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:9"},"nodeType":"YulFunctionCall","src":"1607:15:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:9"},"nodeType":"YulFunctionCall","src":"1595:28:9"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1647,"isOffset":false,"isSlot":false,"src":"1599:6:9","valueSize":1},{"declaration":1638,"isOffset":false,"isSlot":false,"src":"1615:6:9","valueSize":1},{"declaration":1654,"isOffset":false,"isSlot":false,"src":"1588:3:9","valueSize":1}],"flags":["memory-safe"],"id":1656,"nodeType":"InlineAssembly","src":"1545:92:9"},{"body":{"id":1671,"nodeType":"Block","src":"1663:234:9","statements":[{"expression":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:9","subExpression":{"id":1658,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"1681:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1660,"nodeType":"ExpressionStatement","src":"1681:5:9"},{"AST":{"nodeType":"YulBlock","src":"1729:86:9","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:9"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:9","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:9"},"nodeType":"YulFunctionCall","src":"1769:14:9"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:9"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:9"},"nodeType":"YulFunctionCall","src":"1764:32:9"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:9"},"nodeType":"YulFunctionCall","src":"1751:46:9"},"nodeType":"YulExpressionStatement","src":"1751:46:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1577,"isOffset":false,"isSlot":false,"src":"1785:10:9","valueSize":1},{"declaration":1654,"isOffset":false,"isSlot":false,"src":"1759:3:9","valueSize":1},{"declaration":1632,"isOffset":false,"isSlot":false,"src":"1773:5:9","valueSize":1}],"flags":["memory-safe"],"id":1661,"nodeType":"InlineAssembly","src":"1704:111:9"},{"expression":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1832:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1665,"nodeType":"ExpressionStatement","src":"1832:11:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1632,"src":"1865:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"nodeType":"IfStatement","src":"1861:21:9","trueBody":{"id":1669,"nodeType":"Break","src":"1877:5:9"}}]},"condition":{"hexValue":"74727565","id":1657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1672,"nodeType":"WhileStatement","src":"1650:247:9"},{"expression":{"id":1673,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"1917:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1636,"id":1674,"nodeType":"Return","src":"1910:13:9"}]}]},"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"1213:90:9","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1677,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:9","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1632,"mutability":"mutable","name":"value","nameLocation":"1334:5:9","nodeType":"VariableDeclaration","scope":1677,"src":"1326:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:9"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1677,"src":"1364:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1634,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:9"},"scope":2965,"src":"1308:632:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1702,"nodeType":"Block","src":"2116:92:9","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2147:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:9","trueExpression":{"hexValue":"2d","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1697,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"2193:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1695,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6531,"src":"2178:10:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6531_$","typeString":"type(library SignedMath)"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:9","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6530,"src":"2178:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1694,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"2169:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1685,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:9","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:9","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:9","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1684,"id":1701,"nodeType":"Return","src":"2126:75:9"}]},"documentation":{"id":1678,"nodeType":"StructuredDocumentation","src":"1946:89:9","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1703,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:9","nodeType":"FunctionDefinition","parameters":{"id":1681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1680,"mutability":"mutable","name":"value","nameLocation":"2071:5:9","nodeType":"VariableDeclaration","scope":1703,"src":"2064:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1679,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:9"},"returnParameters":{"id":1684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1703,"src":"2101:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1682,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:9"},"scope":2965,"src":"2040:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1722,"nodeType":"Block","src":"2387:100:9","statements":[{"id":1721,"nodeType":"UncheckedBlock","src":"2397:84:9","statements":[{"expression":{"arguments":[{"id":1712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2440:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2459:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1713,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"2447:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4622_$","typeString":"type(library Math)"}},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:9","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4565,"src":"2447:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1711,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1723,1806,1826],"referencedDeclaration":1806,"src":"2428:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1710,"id":1720,"nodeType":"Return","src":"2421:49:9"}]}]},"documentation":{"id":1704,"nodeType":"StructuredDocumentation","src":"2214:94:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1723,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:9","nodeType":"FunctionDefinition","parameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"value","nameLocation":"2342:5:9","nodeType":"VariableDeclaration","scope":1723,"src":"2334:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:9"},"returnParameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1723,"src":"2372:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1708,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:9"},"scope":2965,"src":"2313:174:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1805,"nodeType":"Block","src":"2700:435:9","statements":[{"assignments":[1734],"declarations":[{"constant":false,"id":1734,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:9","nodeType":"VariableDeclaration","scope":1805,"src":"2710:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1736,"initialValue":{"id":1735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2731:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:9"},{"assignments":[1738],"declarations":[{"constant":false,"id":1738,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:9","nodeType":"VariableDeclaration","scope":1805,"src":"2746:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1737,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1747,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1742,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"2782:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:9"},{"expression":{"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1748,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2803:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1750,"indexExpression":{"hexValue":"30","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1753,"nodeType":"ExpressionStatement","src":"2803:15:9"},{"expression":{"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1754,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2828:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1756,"indexExpression":{"hexValue":"31","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1759,"nodeType":"ExpressionStatement","src":"2828:15:9"},{"body":{"id":1788,"nodeType":"Block","src":"2898:95:9","statements":[{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1774,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"2912:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1776,"indexExpression":{"id":1775,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2919:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1777,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2924:10:9","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1781,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1778,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2935:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1783,"nodeType":"ExpressionStatement","src":"2912:40:9"},{"expression":{"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1784,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"2966:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1787,"nodeType":"ExpressionStatement","src":"2966:16:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1768,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2886:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1789,"initializationExpression":{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"i","nameLocation":"2866:1:9","nodeType":"VariableDeclaration","scope":1789,"src":"2858:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1763,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"2874:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:9"},"loopExpression":{"expression":{"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:9","subExpression":{"id":1771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"2895:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1773,"nodeType":"ExpressionStatement","src":"2893:3:9"},"nodeType":"ForStatement","src":"2853:140:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"3006:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1799,"nodeType":"IfStatement","src":"3002:96:9","trueBody":{"id":1798,"nodeType":"Block","src":"3023:75:9","statements":[{"errorCall":{"arguments":[{"id":1794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3073:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1795,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3080:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1793,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1623,"src":"3044:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1797,"nodeType":"RevertStatement","src":"3037:50:9"}]}},{"expression":{"arguments":[{"id":1802,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"3121:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1800,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:9","typeDescriptions":{}}},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1732,"id":1804,"nodeType":"Return","src":"3107:21:9"}]},"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"2493:112:9","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:9","nodeType":"FunctionDefinition","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"value","nameLocation":"2639:5:9","nodeType":"VariableDeclaration","scope":1806,"src":"2631:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1725,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"length","nameLocation":"2654:6:9","nodeType":"VariableDeclaration","scope":1806,"src":"2646:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:9"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"2685:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1730,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:9"},"scope":2965,"src":"2610:525:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1825,"nodeType":"Block","src":"3367:75:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1819,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"3412:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1817,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:9","typeDescriptions":{}}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:9","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1822,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"3420:14:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1814,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1723,1806,1826],"referencedDeclaration":1806,"src":"3384:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1813,"id":1824,"nodeType":"Return","src":"3377:58:9"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"3141:148:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1826,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:9","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"addr","nameLocation":"3323:4:9","nodeType":"VariableDeclaration","scope":1826,"src":"3315:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:9"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1826,"src":"3352:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1811,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:9"},"scope":2965,"src":"3294:148:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1890,"nodeType":"Block","src":"3699:642:9","statements":[{"assignments":[1835],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:9","nodeType":"VariableDeclaration","scope":1890,"src":"3709:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1834,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1842,"initialValue":{"arguments":[{"arguments":[{"id":1839,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1829,"src":"3749:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1838,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1723,1806,1826],"referencedDeclaration":1826,"src":"3737:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1836,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:9","typeDescriptions":{}}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:9"},{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:9","nodeType":"VariableDeclaration","scope":1890,"src":"3840:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1845,"nodeType":"VariableDeclarationStatement","src":"3840:17:9"},{"AST":{"nodeType":"YulBlock","src":"3892:78:9","statements":[{"nodeType":"YulAssignment","src":"3906:54:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:9","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:9","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:9"},"nodeType":"YulFunctionCall","src":"3937:17:9"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:9","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:9"},"nodeType":"YulFunctionCall","src":"3927:32:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:9"},"nodeType":"YulFunctionCall","src":"3919:41:9"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1835,"isOffset":false,"isSlot":false,"src":"3941:6:9","valueSize":1},{"declaration":1844,"isOffset":false,"isSlot":false,"src":"3906:9:9","valueSize":1}],"flags":["memory-safe"],"id":1846,"nodeType":"InlineAssembly","src":"3867:103:9"},{"body":{"id":1883,"nodeType":"Block","src":"4013:291:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1857,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"4119:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:9","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1864,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4148:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1866,"indexExpression":{"id":1865,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4155:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1863,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1862,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:9","typeDescriptions":{}}},"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1878,"nodeType":"IfStatement","src":"4115:150:9","trueBody":{"id":1877,"nodeType":"Block","src":"4165:100:9","statements":[{"expression":{"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1871,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4233:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1873,"indexExpression":{"id":1872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4240:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:9","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1876,"nodeType":"ExpressionStatement","src":"4233:17:9"}]}},{"expression":{"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1879,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"4278:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:9","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1882,"nodeType":"ExpressionStatement","src":"4278:15:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1851,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4001:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1884,"initializationExpression":{"assignments":[1848],"declarations":[{"constant":false,"id":1848,"mutability":"mutable","name":"i","nameLocation":"3993:1:9","nodeType":"VariableDeclaration","scope":1884,"src":"3985:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1850,"initialValue":{"hexValue":"3431","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:9","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:9"},"loopExpression":{"expression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:9","subExpression":{"id":1854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4010:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1856,"nodeType":"ExpressionStatement","src":"4008:3:9"},"nodeType":"ForStatement","src":"3980:324:9"},{"expression":{"arguments":[{"id":1887,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"4327:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1885,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:9","typeDescriptions":{}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1833,"id":1889,"nodeType":"Return","src":"4313:21:9"}]},"documentation":{"id":1827,"nodeType":"StructuredDocumentation","src":"3448:165:9","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1891,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:9","nodeType":"FunctionDefinition","parameters":{"id":1830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1829,"mutability":"mutable","name":"addr","nameLocation":"3655:4:9","nodeType":"VariableDeclaration","scope":1891,"src":"3647:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:9"},"returnParameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1891,"src":"3684:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1831,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:9"},"scope":2965,"src":"3618:723:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1927,"nodeType":"Block","src":"4496:104:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4519:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1901,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:9","typeDescriptions":{}}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:9","memberName":"length","nodeType":"MemberAccess","src":"4513:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1908,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"4538:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1906,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:9","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:9","memberName":"length","nodeType":"MemberAccess","src":"4532:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1915,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1894,"src":"4567:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:9","typeDescriptions":{}}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1912,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1921,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"4590:1:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1919,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:9","typeDescriptions":{}}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1918,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:9","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1900,"id":1926,"nodeType":"Return","src":"4506:87:9"}]},"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"4347:66:9","text":" @dev Returns true if the two strings are equal."},"id":1928,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:9","nodeType":"FunctionDefinition","parameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"a","nameLocation":"4447:1:9","nodeType":"VariableDeclaration","scope":1928,"src":"4433:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1893,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1896,"mutability":"mutable","name":"b","nameLocation":"4464:1:9","nodeType":"VariableDeclaration","scope":1928,"src":"4450:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1895,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:9"},"returnParameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1928,"src":"4490:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1898,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:9"},"scope":2965,"src":"4418:182:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1946,"nodeType":"Block","src":"4897:64:9","statements":[{"expression":{"arguments":[{"id":1937,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4924:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1941,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"4940:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1939,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:9","typeDescriptions":{}}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:9","memberName":"length","nodeType":"MemberAccess","src":"4934:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1936,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1947,1978],"referencedDeclaration":1978,"src":"4914:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1935,"id":1945,"nodeType":"Return","src":"4907:47:9"}]},"documentation":{"id":1929,"nodeType":"StructuredDocumentation","src":"4606:214:9","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1947,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:9","nodeType":"FunctionDefinition","parameters":{"id":1932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1931,"mutability":"mutable","name":"input","nameLocation":"4858:5:9","nodeType":"VariableDeclaration","scope":1947,"src":"4844:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1930,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:9"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1947,"src":"4888:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:9"},"scope":2965,"src":"4825:136:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1977,"nodeType":"Block","src":"5366:153:9","statements":[{"assignments":[1960,1962],"declarations":[{"constant":false,"id":1960,"mutability":"mutable","name":"success","nameLocation":"5382:7:9","nodeType":"VariableDeclaration","scope":1977,"src":"5377:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1959,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"value","nameLocation":"5399:5:9","nodeType":"VariableDeclaration","scope":1977,"src":"5391:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1968,"initialValue":{"arguments":[{"id":1964,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"5421:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1965,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5428:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1966,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1954,"src":"5435:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1963,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1999,2036],"referencedDeclaration":2036,"src":"5408:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:9"},{"condition":{"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:9","subExpression":{"id":1969,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"5454:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1974,"nodeType":"IfStatement","src":"5449:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1971,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"5470:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1973,"nodeType":"RevertStatement","src":"5463:27:9"}},{"expression":{"id":1975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"5507:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1958,"id":1976,"nodeType":"Return","src":"5500:12:9"}]},"documentation":{"id":1948,"nodeType":"StructuredDocumentation","src":"4967:294:9","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1978,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:9","nodeType":"FunctionDefinition","parameters":{"id":1955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1950,"mutability":"mutable","name":"input","nameLocation":"5299:5:9","nodeType":"VariableDeclaration","scope":1978,"src":"5285:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1949,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1952,"mutability":"mutable","name":"begin","nameLocation":"5314:5:9","nodeType":"VariableDeclaration","scope":1978,"src":"5306:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1954,"mutability":"mutable","name":"end","nameLocation":"5329:3:9","nodeType":"VariableDeclaration","scope":1978,"src":"5321:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1953,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:9"},"returnParameters":{"id":1958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1978,"src":"5357:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:9"},"scope":2965,"src":"5266:253:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1998,"nodeType":"Block","src":"5840:83:9","statements":[{"expression":{"arguments":[{"id":1989,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"5886:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1993,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1981,"src":"5902:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:9","typeDescriptions":{}}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:9","memberName":"length","nodeType":"MemberAccess","src":"5896:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1988,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"5857:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1987,"id":1997,"nodeType":"Return","src":"5850:66:9"}]},"documentation":{"id":1979,"nodeType":"StructuredDocumentation","src":"5525:215:9","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:9","nodeType":"FunctionDefinition","parameters":{"id":1982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1981,"mutability":"mutable","name":"input","nameLocation":"5781:5:9","nodeType":"VariableDeclaration","scope":1999,"src":"5767:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1980,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:9"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"success","nameLocation":"5816:7:9","nodeType":"VariableDeclaration","scope":1999,"src":"5811:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1983,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"value","nameLocation":"5833:5:9","nodeType":"VariableDeclaration","scope":1999,"src":"5825:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:9"},"scope":2965,"src":"5745:178:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2035,"nodeType":"Block","src":"6325:144:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2013,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6339:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2016,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"6351:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2014,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:9","typeDescriptions":{}}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:9","memberName":"length","nodeType":"MemberAccess","src":"6345:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2020,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"6368:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2021,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6376:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2028,"nodeType":"IfStatement","src":"6335:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2012,"id":2027,"nodeType":"Return","src":"6381:17:9"}},{"expression":{"arguments":[{"id":2030,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"6444:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2031,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"6451:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2032,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"6458:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2029,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"6415:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2012,"id":2034,"nodeType":"Return","src":"6408:54:9"}]},"documentation":{"id":2000,"nodeType":"StructuredDocumentation","src":"5929:238:9","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2036,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:9","nodeType":"FunctionDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"input","nameLocation":"6217:5:9","nodeType":"VariableDeclaration","scope":2036,"src":"6203:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2001,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"begin","nameLocation":"6240:5:9","nodeType":"VariableDeclaration","scope":2036,"src":"6232:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2003,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2006,"mutability":"mutable","name":"end","nameLocation":"6263:3:9","nodeType":"VariableDeclaration","scope":2036,"src":"6255:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:9"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"success","nameLocation":"6301:7:9","nodeType":"VariableDeclaration","scope":2036,"src":"6296:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2008,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2011,"mutability":"mutable","name":"value","nameLocation":"6318:5:9","nodeType":"VariableDeclaration","scope":2036,"src":"6310:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2010,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:9"},"scope":2965,"src":"6172:297:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"6872:347:9","statements":[{"assignments":[2051],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:9","nodeType":"VariableDeclaration","scope":2105,"src":"6882:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2050,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2056,"initialValue":{"arguments":[{"id":2054,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"6910:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2052,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:9","typeDescriptions":{}}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:9"},{"assignments":[2058],"declarations":[{"constant":false,"id":2058,"mutability":"mutable","name":"result","nameLocation":"6935:6:9","nodeType":"VariableDeclaration","scope":2105,"src":"6927:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2057,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2060,"initialValue":{"hexValue":"30","id":2059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:9"},{"body":{"id":2099,"nodeType":"Block","src":"6993:189:9","statements":[{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"chr","nameLocation":"7013:3:9","nodeType":"VariableDeclaration","scope":2099,"src":"7007:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2071,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2082,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2077,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7062:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2078,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"7070:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2076,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"7039:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2074,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:9","typeDescriptions":{}}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2073,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"7019:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2083,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"7092:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"nodeType":"IfStatement","src":"7088:30:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2088,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2049,"id":2089,"nodeType":"Return","src":"7101:17:9"}},{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2091,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"7132:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2094,"nodeType":"ExpressionStatement","src":"7132:12:9"},{"expression":{"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2095,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"7158:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2096,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"7168:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2098,"nodeType":"ExpressionStatement","src":"7158:13:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"6979:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2066,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2043,"src":"6983:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2100,"initializationExpression":{"assignments":[2062],"declarations":[{"constant":false,"id":2062,"mutability":"mutable","name":"i","nameLocation":"6968:1:9","nodeType":"VariableDeclaration","scope":2100,"src":"6960:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2064,"initialValue":{"id":2063,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"6972:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:9"},"loopExpression":{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:9","subExpression":{"id":2068,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"6990:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ExpressionStatement","src":"6988:3:9"},"nodeType":"ForStatement","src":"6955:227:9"},{"expression":{"components":[{"hexValue":"74727565","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2102,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"7205:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2049,"id":2104,"nodeType":"Return","src":"7191:21:9"}]},"documentation":{"id":2037,"nodeType":"StructuredDocumentation","src":"6475:224:9","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:9","nodeType":"FunctionDefinition","parameters":{"id":2044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"input","nameLocation":"6765:5:9","nodeType":"VariableDeclaration","scope":2106,"src":"6751:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2038,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2041,"mutability":"mutable","name":"begin","nameLocation":"6788:5:9","nodeType":"VariableDeclaration","scope":2106,"src":"6780:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2043,"mutability":"mutable","name":"end","nameLocation":"6811:3:9","nodeType":"VariableDeclaration","scope":2106,"src":"6803:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:9"},"returnParameters":{"id":2049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2046,"mutability":"mutable","name":"success","nameLocation":"6848:7:9","nodeType":"VariableDeclaration","scope":2106,"src":"6843:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2045,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2048,"mutability":"mutable","name":"value","nameLocation":"6865:5:9","nodeType":"VariableDeclaration","scope":2106,"src":"6857:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:9"},"scope":2965,"src":"6704:515:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2124,"nodeType":"Block","src":"7516:63:9","statements":[{"expression":{"arguments":[{"id":2115,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"7542:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2119,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"7558:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2117,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:9","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:9","memberName":"length","nodeType":"MemberAccess","src":"7552:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2114,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2125,2156],"referencedDeclaration":2156,"src":"7533:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2113,"id":2123,"nodeType":"Return","src":"7526:46:9"}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"7225:216:9","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:9","nodeType":"FunctionDefinition","parameters":{"id":2110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"input","nameLocation":"7478:5:9","nodeType":"VariableDeclaration","scope":2125,"src":"7464:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2108,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:9"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2125,"src":"7508:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2111,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:9"},"scope":2965,"src":"7446:133:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"7984:151:9","statements":[{"assignments":[2138,2140],"declarations":[{"constant":false,"id":2138,"mutability":"mutable","name":"success","nameLocation":"8000:7:9","nodeType":"VariableDeclaration","scope":2155,"src":"7995:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2137,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2140,"mutability":"mutable","name":"value","nameLocation":"8016:5:9","nodeType":"VariableDeclaration","scope":2155,"src":"8009:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2139,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2146,"initialValue":{"arguments":[{"id":2142,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"8037:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2143,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"8044:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2144,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"8051:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2141,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2177,2219],"referencedDeclaration":2219,"src":"8025:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:9"},{"condition":{"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:9","subExpression":{"id":2147,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"8070:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2152,"nodeType":"IfStatement","src":"8065:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2149,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"8086:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2151,"nodeType":"RevertStatement","src":"8079:27:9"}},{"expression":{"id":2153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2140,"src":"8123:5:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2136,"id":2154,"nodeType":"Return","src":"8116:12:9"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"7585:296:9","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:9","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"input","nameLocation":"7918:5:9","nodeType":"VariableDeclaration","scope":2156,"src":"7904:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2127,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"begin","nameLocation":"7933:5:9","nodeType":"VariableDeclaration","scope":2156,"src":"7925:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"end","nameLocation":"7948:3:9","nodeType":"VariableDeclaration","scope":2156,"src":"7940:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:9"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2156,"src":"7976:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2134,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:9"},"scope":2965,"src":"7886:249:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"8526:82:9","statements":[{"expression":{"arguments":[{"id":2167,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8571:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2171,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"8587:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2169,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:9","typeDescriptions":{}}},"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:9","memberName":"length","nodeType":"MemberAccess","src":"8581:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2166,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"8543:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2165,"id":2175,"nodeType":"Return","src":"8536:65:9"}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"8141:287:9","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:9","nodeType":"FunctionDefinition","parameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"input","nameLocation":"8468:5:9","nodeType":"VariableDeclaration","scope":2177,"src":"8454:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2158,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:9"},"returnParameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"success","nameLocation":"8503:7:9","nodeType":"VariableDeclaration","scope":2177,"src":"8498:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2161,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"value","nameLocation":"8519:5:9","nodeType":"VariableDeclaration","scope":2177,"src":"8512:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2163,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:9"},"scope":2965,"src":"8433:175:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2182,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:9","nodeType":"VariableDeclaration","scope":2965,"src":"8614:50:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2178,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:9","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:9","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2218,"nodeType":"Block","src":"9130:143:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2196,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"9144:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2199,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9156:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2197,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:9","typeDescriptions":{}}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:9","memberName":"length","nodeType":"MemberAccess","src":"9150:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2203,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9173:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2204,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"9181:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2211,"nodeType":"IfStatement","src":"9140:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2195,"id":2210,"nodeType":"Return","src":"9186:17:9"}},{"expression":{"arguments":[{"id":2213,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2185,"src":"9248:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2214,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2187,"src":"9255:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2215,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"9262:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2212,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"9220:27:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2195,"id":2217,"nodeType":"Return","src":"9213:53:9"}]},"documentation":{"id":2183,"nodeType":"StructuredDocumentation","src":"8671:303:9","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:9","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2185,"mutability":"mutable","name":"input","nameLocation":"9023:5:9","nodeType":"VariableDeclaration","scope":2219,"src":"9009:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2184,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2187,"mutability":"mutable","name":"begin","nameLocation":"9046:5:9","nodeType":"VariableDeclaration","scope":2219,"src":"9038:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2186,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2189,"mutability":"mutable","name":"end","nameLocation":"9069:3:9","nodeType":"VariableDeclaration","scope":2219,"src":"9061:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:9"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2192,"mutability":"mutable","name":"success","nameLocation":"9107:7:9","nodeType":"VariableDeclaration","scope":2219,"src":"9102:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2191,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"value","nameLocation":"9123:5:9","nodeType":"VariableDeclaration","scope":2219,"src":"9116:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2193,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:9"},"scope":2965,"src":"8979:294:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2339,"nodeType":"Block","src":"9673:812:9","statements":[{"assignments":[2234],"declarations":[{"constant":false,"id":2234,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:9","nodeType":"VariableDeclaration","scope":2339,"src":"9683:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2233,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2239,"initialValue":{"arguments":[{"id":2237,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"9711:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2235,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:9","typeDescriptions":{}}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:9"},{"assignments":[2241],"declarations":[{"constant":false,"id":2241,"mutability":"mutable","name":"sign","nameLocation":"9781:4:9","nodeType":"VariableDeclaration","scope":2339,"src":"9774:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2240,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2257,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2242,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9788:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2243,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"9797:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2252,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"9845:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2253,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9853:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2251,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"9822:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2249,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:9","typeDescriptions":{}}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:9","trueExpression":{"arguments":[{"hexValue":"30","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2245,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:9","typeDescriptions":{}}},"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:9"},{"assignments":[2259],"declarations":[{"constant":false,"id":2259,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:9","nodeType":"VariableDeclaration","scope":2339,"src":"9941:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2258,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2266,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"9961:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2261,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:9","typeDescriptions":{}}},"id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:9"},{"assignments":[2268],"declarations":[{"constant":false,"id":2268,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:9","nodeType":"VariableDeclaration","scope":2339,"src":"9990:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2267,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2275,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"10010:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2270,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:9","typeDescriptions":{}}},"id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:9"},{"assignments":[2277],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"offset","nameLocation":"10047:6:9","nodeType":"VariableDeclaration","scope":2339,"src":"10039:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2284,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2259,"src":"10057:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2279,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"10073:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"10056:37:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:9"},{"assignments":[2286,2288],"declarations":[{"constant":false,"id":2286,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:9","nodeType":"VariableDeclaration","scope":2339,"src":"10107:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2285,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2288,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:9","nodeType":"VariableDeclaration","scope":2339,"src":"10124:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2296,"initialValue":{"arguments":[{"id":2290,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"10157:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2291,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"10164:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2292,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"10172:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2294,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"10180:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2289,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1999,2036],"referencedDeclaration":2036,"src":"10144:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:9"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"10199:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2298,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10213:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2299,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"10224:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2317,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2286,"src":"10341:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2318,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"10355:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2320,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10371:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2321,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"10383:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2232,"id":2336,"nodeType":"Return","src":"10461:17:9"},"id":2337,"nodeType":"IfStatement","src":"10337:141:9","trueBody":{"id":2332,"nodeType":"Block","src":"10399:56:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2326,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2325,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:9","memberName":"min","nodeType":"MemberAccess","src":"10427:16:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2330,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2232,"id":2331,"nodeType":"Return","src":"10413:31:9"}]}},"id":2338,"nodeType":"IfStatement","src":"10195:283:9","trueBody":{"id":2316,"nodeType":"Block","src":"10240:91:9","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2303,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"10268:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2311,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10310:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2309,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:9","typeDescriptions":{}}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:9","trueExpression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:9","subExpression":{"arguments":[{"id":2306,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"10291:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2304,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:9","typeDescriptions":{}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2232,"id":2315,"nodeType":"Return","src":"10254:66:9"}]}}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"9279:223:9","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2340,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:9","nodeType":"FunctionDefinition","parameters":{"id":2227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"input","nameLocation":"9567:5:9","nodeType":"VariableDeclaration","scope":2340,"src":"9553:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2221,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2224,"mutability":"mutable","name":"begin","nameLocation":"9590:5:9","nodeType":"VariableDeclaration","scope":2340,"src":"9582:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2223,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2226,"mutability":"mutable","name":"end","nameLocation":"9613:3:9","nodeType":"VariableDeclaration","scope":2340,"src":"9605:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:9"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2229,"mutability":"mutable","name":"success","nameLocation":"9650:7:9","nodeType":"VariableDeclaration","scope":2340,"src":"9645:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2228,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"value","nameLocation":"9666:5:9","nodeType":"VariableDeclaration","scope":2340,"src":"9659:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2230,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:9"},"scope":2965,"src":"9507:978:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2358,"nodeType":"Block","src":"10830:67:9","statements":[{"expression":{"arguments":[{"id":2349,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"10860:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2353,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"10876:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2351,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:9","typeDescriptions":{}}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:9","memberName":"length","nodeType":"MemberAccess","src":"10870:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2348,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2359,2390],"referencedDeclaration":2390,"src":"10847:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2347,"id":2357,"nodeType":"Return","src":"10840:50:9"}]},"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"10491:259:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:9","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"input","nameLocation":"10791:5:9","nodeType":"VariableDeclaration","scope":2359,"src":"10777:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2342,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:9"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2359,"src":"10821:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:9"},"scope":2965,"src":"10755:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2389,"nodeType":"Block","src":"11318:156:9","statements":[{"assignments":[2372,2374],"declarations":[{"constant":false,"id":2372,"mutability":"mutable","name":"success","nameLocation":"11334:7:9","nodeType":"VariableDeclaration","scope":2389,"src":"11329:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2371,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2374,"mutability":"mutable","name":"value","nameLocation":"11351:5:9","nodeType":"VariableDeclaration","scope":2389,"src":"11343:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2380,"initialValue":{"arguments":[{"id":2376,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"11376:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2377,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"11383:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2378,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"11390:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2375,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2411,2448],"referencedDeclaration":2448,"src":"11360:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:9"},{"condition":{"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:9","subExpression":{"id":2381,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"11409:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2386,"nodeType":"IfStatement","src":"11404:41:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2383,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"11425:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2385,"nodeType":"RevertStatement","src":"11418:27:9"}},{"expression":{"id":2387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"11462:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2370,"id":2388,"nodeType":"Return","src":"11455:12:9"}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"10903:307:9","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2390,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:9","nodeType":"FunctionDefinition","parameters":{"id":2367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"input","nameLocation":"11251:5:9","nodeType":"VariableDeclaration","scope":2390,"src":"11237:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2361,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"begin","nameLocation":"11266:5:9","nodeType":"VariableDeclaration","scope":2390,"src":"11258:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2366,"mutability":"mutable","name":"end","nameLocation":"11281:3:9","nodeType":"VariableDeclaration","scope":2390,"src":"11273:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:9"},"returnParameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2390,"src":"11309:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2368,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:9"},"scope":2965,"src":"11215:259:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2410,"nodeType":"Block","src":"11801:86:9","statements":[{"expression":{"arguments":[{"id":2401,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11850:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2405,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2393,"src":"11866:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2403,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:9","typeDescriptions":{}}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:9","memberName":"length","nodeType":"MemberAccess","src":"11860:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2400,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"11818:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2399,"id":2409,"nodeType":"Return","src":"11811:69:9"}]},"documentation":{"id":2391,"nodeType":"StructuredDocumentation","src":"11480:218:9","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2411,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:9","nodeType":"FunctionDefinition","parameters":{"id":2394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"input","nameLocation":"11742:5:9","nodeType":"VariableDeclaration","scope":2411,"src":"11728:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2392,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:9"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2396,"mutability":"mutable","name":"success","nameLocation":"11777:7:9","nodeType":"VariableDeclaration","scope":2411,"src":"11772:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2395,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"value","nameLocation":"11794:5:9","nodeType":"VariableDeclaration","scope":2411,"src":"11786:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:9"},"scope":2965,"src":"11703:184:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2447,"nodeType":"Block","src":"12295:147:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2425,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"12309:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2428,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"12321:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2426,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:9","typeDescriptions":{}}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:9","memberName":"length","nodeType":"MemberAccess","src":"12315:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2432,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"12338:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2433,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"12346:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2440,"nodeType":"IfStatement","src":"12305:63:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2424,"id":2439,"nodeType":"Return","src":"12351:17:9"}},{"expression":{"arguments":[{"id":2442,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"12417:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2443,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2416,"src":"12424:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2444,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2418,"src":"12431:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2441,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"12385:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2424,"id":2446,"nodeType":"Return","src":"12378:57:9"}]},"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"11893:241:9","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2448,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:9","nodeType":"FunctionDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2414,"mutability":"mutable","name":"input","nameLocation":"12187:5:9","nodeType":"VariableDeclaration","scope":2448,"src":"12173:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2413,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2416,"mutability":"mutable","name":"begin","nameLocation":"12210:5:9","nodeType":"VariableDeclaration","scope":2448,"src":"12202:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2418,"mutability":"mutable","name":"end","nameLocation":"12233:3:9","nodeType":"VariableDeclaration","scope":2448,"src":"12225:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2417,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:9"},"returnParameters":{"id":2424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2421,"mutability":"mutable","name":"success","nameLocation":"12271:7:9","nodeType":"VariableDeclaration","scope":2448,"src":"12266:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2420,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2423,"mutability":"mutable","name":"value","nameLocation":"12288:5:9","nodeType":"VariableDeclaration","scope":2448,"src":"12280:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2422,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:9"},"scope":2965,"src":"12139:303:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2550,"nodeType":"Block","src":"12851:881:9","statements":[{"assignments":[2463],"declarations":[{"constant":false,"id":2463,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:9","nodeType":"VariableDeclaration","scope":2550,"src":"12861:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2462,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2468,"initialValue":{"arguments":[{"id":2466,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"12889:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2464,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:9","typeDescriptions":{}}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:9"},{"assignments":[2470],"declarations":[{"constant":false,"id":2470,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:9","nodeType":"VariableDeclaration","scope":2550,"src":"12943:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2469,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2490,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"12961:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2472,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"12967:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2480,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"13011:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2481,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"13019:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2479,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"12988:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2477,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:9","typeDescriptions":{}}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2484,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:9","typeDescriptions":{}}},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:9"},{"assignments":[2492],"declarations":[{"constant":false,"id":2492,"mutability":"mutable","name":"offset","nameLocation":"13131:6:9","nodeType":"VariableDeclaration","scope":2550,"src":"13123:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2491,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2498,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2493,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"13140:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"13140:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:9"},{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"result","nameLocation":"13181:6:9","nodeType":"VariableDeclaration","scope":2550,"src":"13173:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2502,"initialValue":{"hexValue":"30","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:9"},{"body":{"id":2544,"nodeType":"Block","src":"13248:447:9","statements":[{"assignments":[2516],"declarations":[{"constant":false,"id":2516,"mutability":"mutable","name":"chr","nameLocation":"13268:3:9","nodeType":"VariableDeclaration","scope":2544,"src":"13262:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2515,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2526,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2521,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"13317:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"13325:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2520,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"13294:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2518,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:9","typeDescriptions":{}}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2517,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"13274:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2527,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"13347:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:9","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"13343:31:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2461,"id":2533,"nodeType":"Return","src":"13357:17:9"}},{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"13388:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:9","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2538,"nodeType":"ExpressionStatement","src":"13388:12:9"},{"id":2543,"nodeType":"UncheckedBlock","src":"13414:271:9","statements":[{"expression":{"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2539,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"13657:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2540,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"13667:3:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2542,"nodeType":"ExpressionStatement","src":"13657:13:9"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2509,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"13234:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2510,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"13238:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2545,"initializationExpression":{"assignments":[2504],"declarations":[{"constant":false,"id":2504,"mutability":"mutable","name":"i","nameLocation":"13214:1:9","nodeType":"VariableDeclaration","scope":2545,"src":"13206:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2508,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"13218:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2506,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"13226:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:9"},"loopExpression":{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:9","subExpression":{"id":2512,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"13245:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"13243:3:9"},"nodeType":"ForStatement","src":"13201:494:9"},{"expression":{"components":[{"hexValue":"74727565","id":2546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"13718:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2461,"id":2549,"nodeType":"Return","src":"13704:21:9"}]},"documentation":{"id":2449,"nodeType":"StructuredDocumentation","src":"12448:227:9","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2551,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:9","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2451,"mutability":"mutable","name":"input","nameLocation":"12744:5:9","nodeType":"VariableDeclaration","scope":2551,"src":"12730:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2450,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2453,"mutability":"mutable","name":"begin","nameLocation":"12767:5:9","nodeType":"VariableDeclaration","scope":2551,"src":"12759:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2455,"mutability":"mutable","name":"end","nameLocation":"12790:3:9","nodeType":"VariableDeclaration","scope":2551,"src":"12782:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:9"},"returnParameters":{"id":2461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2458,"mutability":"mutable","name":"success","nameLocation":"12827:7:9","nodeType":"VariableDeclaration","scope":2551,"src":"12822:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2457,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2460,"mutability":"mutable","name":"value","nameLocation":"12844:5:9","nodeType":"VariableDeclaration","scope":2551,"src":"12836:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:9"},"scope":2965,"src":"12680:1052:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2569,"nodeType":"Block","src":"14030:67:9","statements":[{"expression":{"arguments":[{"id":2560,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"14060:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2564,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"14076:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2562,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:9","typeDescriptions":{}}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:9","memberName":"length","nodeType":"MemberAccess","src":"14070:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2559,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2570,2601],"referencedDeclaration":2601,"src":"14047:12:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2558,"id":2568,"nodeType":"Return","src":"14040:50:9"}]},"documentation":{"id":2552,"nodeType":"StructuredDocumentation","src":"13738:212:9","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2570,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:9","nodeType":"FunctionDefinition","parameters":{"id":2555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"input","nameLocation":"13991:5:9","nodeType":"VariableDeclaration","scope":2570,"src":"13977:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2553,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:9"},"returnParameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2570,"src":"14021:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2556,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:9"},"scope":2965,"src":"13955:142:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2600,"nodeType":"Block","src":"14470:165:9","statements":[{"assignments":[2583,2585],"declarations":[{"constant":false,"id":2583,"mutability":"mutable","name":"success","nameLocation":"14486:7:9","nodeType":"VariableDeclaration","scope":2600,"src":"14481:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2582,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"value","nameLocation":"14503:5:9","nodeType":"VariableDeclaration","scope":2600,"src":"14495:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2591,"initialValue":{"arguments":[{"id":2587,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"14528:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2588,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"14535:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2589,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"14542:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2586,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2622,2726],"referencedDeclaration":2726,"src":"14512:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:9"},{"condition":{"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:9","subExpression":{"id":2592,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"14561:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2597,"nodeType":"IfStatement","src":"14556:50:9","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2594,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"14577:27:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2596,"nodeType":"RevertStatement","src":"14570:36:9"}},{"expression":{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"14623:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2581,"id":2599,"nodeType":"Return","src":"14616:12:9"}]},"documentation":{"id":2571,"nodeType":"StructuredDocumentation","src":"14103:259:9","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2601,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:9","nodeType":"FunctionDefinition","parameters":{"id":2578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"input","nameLocation":"14403:5:9","nodeType":"VariableDeclaration","scope":2601,"src":"14389:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2572,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"begin","nameLocation":"14418:5:9","nodeType":"VariableDeclaration","scope":2601,"src":"14410:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2574,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"end","nameLocation":"14433:3:9","nodeType":"VariableDeclaration","scope":2601,"src":"14425:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:9"},"returnParameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2601,"src":"14461:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:9"},"scope":2965,"src":"14367:268:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2621,"nodeType":"Block","src":"14942:70:9","statements":[{"expression":{"arguments":[{"id":2612,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"14975:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2616,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"14991:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2614,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:9","typeDescriptions":{}}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:9","memberName":"length","nodeType":"MemberAccess","src":"14985:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2611,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2622,2726],"referencedDeclaration":2726,"src":"14959:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2610,"id":2620,"nodeType":"Return","src":"14952:53:9"}]},"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"14641:198:9","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2622,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:9","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"input","nameLocation":"14883:5:9","nodeType":"VariableDeclaration","scope":2622,"src":"14869:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2603,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:9"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"success","nameLocation":"14918:7:9","nodeType":"VariableDeclaration","scope":2622,"src":"14913:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2606,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"value","nameLocation":"14935:5:9","nodeType":"VariableDeclaration","scope":2622,"src":"14927:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2608,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:9"},"scope":2965,"src":"14844:168:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2725,"nodeType":"Block","src":"15405:733:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2636,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"15419:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2639,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"15431:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2637,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:9","typeDescriptions":{}}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:9","memberName":"length","nodeType":"MemberAccess","src":"15425:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"15448:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2644,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"15456:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2654,"nodeType":"IfStatement","src":"15415:72:9","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2648,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:9","typeDescriptions":{}}},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2635,"id":2653,"nodeType":"Return","src":"15461:26:9"}},{"assignments":[2656],"declarations":[{"constant":false,"id":2656,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:9","nodeType":"VariableDeclaration","scope":2725,"src":"15498:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2655,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2679,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"15516:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2658,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"15522:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2668,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"15572:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2666,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:9","typeDescriptions":{}}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2670,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"15580:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2665,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"15543:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2663,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:9","typeDescriptions":{}}},"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2673,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:9","typeDescriptions":{}}},"id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:9"},{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:9","nodeType":"VariableDeclaration","scope":2725,"src":"15684:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2689,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:9","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2683,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"15714:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:9","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"15714:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2690,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"15801:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2691,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"15807:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2693,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"15816:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2723,"nodeType":"Block","src":"16081:51:9","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2717,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:9","typeDescriptions":{}}},"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2635,"id":2722,"nodeType":"Return","src":"16095:26:9"}]},"id":2724,"nodeType":"IfStatement","src":"15797:335:9","trueBody":{"id":2715,"nodeType":"Block","src":"15832:243:9","statements":[{"assignments":[2696,2698],"declarations":[{"constant":false,"id":2696,"mutability":"mutable","name":"s","nameLocation":"15953:1:9","nodeType":"VariableDeclaration","scope":2715,"src":"15948:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2695,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"v","nameLocation":"15964:1:9","nodeType":"VariableDeclaration","scope":2715,"src":"15956:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2704,"initialValue":{"arguments":[{"id":2700,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"16001:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2701,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"16008:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2702,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"16015:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2699,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2551,"src":"15969:31:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:9"},{"expression":{"components":[{"id":2705,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"16041:1:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2710,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2698,"src":"16060:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2708,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:9","typeDescriptions":{}}},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2706,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:9","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:9","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2635,"id":2714,"nodeType":"Return","src":"16033:31:9"}]}}]},"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"15018:226:9","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2726,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:9","nodeType":"FunctionDefinition","parameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"input","nameLocation":"15297:5:9","nodeType":"VariableDeclaration","scope":2726,"src":"15283:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2624,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"begin","nameLocation":"15320:5:9","nodeType":"VariableDeclaration","scope":2726,"src":"15312:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2629,"mutability":"mutable","name":"end","nameLocation":"15343:3:9","nodeType":"VariableDeclaration","scope":2726,"src":"15335:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2628,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:9"},"returnParameters":{"id":2635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2632,"mutability":"mutable","name":"success","nameLocation":"15381:7:9","nodeType":"VariableDeclaration","scope":2726,"src":"15376:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2631,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2634,"mutability":"mutable","name":"value","nameLocation":"15398:5:9","nodeType":"VariableDeclaration","scope":2726,"src":"15390:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2633,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:9"},"scope":2965,"src":"15249:889:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"16207:461:9","statements":[{"assignments":[2734],"declarations":[{"constant":false,"id":2734,"mutability":"mutable","name":"value","nameLocation":"16223:5:9","nodeType":"VariableDeclaration","scope":2785,"src":"16217:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2733,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2739,"initialValue":{"arguments":[{"id":2737,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"16237:3:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2735,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:9","typeDescriptions":{}}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:9"},{"id":2782,"nodeType":"UncheckedBlock","src":"16401:238:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16429:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:9","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16443:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:9","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16489:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:9","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16503:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:9","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16550:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:9","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2765,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16564:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:9","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2774,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2773,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:9","memberName":"max","nodeType":"MemberAccess","src":"16613:15:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2732,"id":2778,"nodeType":"Return","src":"16606:22:9"},"id":2779,"nodeType":"IfStatement","src":"16546:82:9","trueBody":{"expression":{"id":2771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16576:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:9","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2772,"nodeType":"ExpressionStatement","src":"16576:11:9"}},"id":2780,"nodeType":"IfStatement","src":"16485:143:9","trueBody":{"expression":{"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16516:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:9","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2761,"nodeType":"ExpressionStatement","src":"16516:11:9"}},"id":2781,"nodeType":"IfStatement","src":"16425:203:9","trueBody":{"expression":{"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16455:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:9","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2750,"nodeType":"ExpressionStatement","src":"16455:11:9"}}]},{"expression":{"id":2783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"16656:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2732,"id":2784,"nodeType":"Return","src":"16649:12:9"}]},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:9","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"chr","nameLocation":"16173:3:9","nodeType":"VariableDeclaration","scope":2786,"src":"16166:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2727,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:9"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"16200:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2730,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:9"},"scope":2965,"src":"16144:524:9","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2951,"nodeType":"Block","src":"17334:1331:9","statements":[{"assignments":[2795],"declarations":[{"constant":false,"id":2795,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:9","nodeType":"VariableDeclaration","scope":2951,"src":"17344:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2794,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2800,"initialValue":{"arguments":[{"id":2798,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"17372:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2796,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:9","typeDescriptions":{}}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:9"},{"assignments":[2802],"declarations":[{"constant":false,"id":2802,"mutability":"mutable","name":"output","nameLocation":"17401:6:9","nodeType":"VariableDeclaration","scope":2951,"src":"17388:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2801,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2810,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:9","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2806,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"17424:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:9","memberName":"length","nodeType":"MemberAccess","src":"17424:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2803,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:9"},{"assignments":[2812],"declarations":[{"constant":false,"id":2812,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:9","nodeType":"VariableDeclaration","scope":2951,"src":"17471:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2811,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2814,"initialValue":{"hexValue":"30","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:9"},{"body":{"id":2943,"nodeType":"Block","src":"17546:854:9","statements":[{"assignments":[2826],"declarations":[{"constant":false,"id":2826,"mutability":"mutable","name":"char","nameLocation":"17567:4:9","nodeType":"VariableDeclaration","scope":2943,"src":"17560:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2825,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2834,"initialValue":{"arguments":[{"arguments":[{"id":2830,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"17604:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2831,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"17612:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"17581:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2827,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:9","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:9"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2835,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"17635:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2839,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17670:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2837,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:9","typeDescriptions":{}}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2847,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2941,"nodeType":"Block","src":"18328:62:9","statements":[{"expression":{"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2934,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18346:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2937,"indexExpression":{"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:9","subExpression":{"id":2935,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18353:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2938,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"18371:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2940,"nodeType":"ExpressionStatement","src":"18346:29:9"}]},"id":2942,"nodeType":"IfStatement","src":"17629:761:9","trueBody":{"id":2933,"nodeType":"Block","src":"17685:637:9","statements":[{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2848,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17703:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2851,"indexExpression":{"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:9","subExpression":{"id":2849,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17710:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2854,"nodeType":"ExpressionStatement","src":"17703:29:9"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17754:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:9","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2865,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17823:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:9","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2875,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17892:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:9","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2885,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"17961:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:9","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2895,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"18030:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:9","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2905,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"18099:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:9","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"18169:4:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2926,"nodeType":"IfStatement","src":"18165:143:9","trueBody":{"id":2925,"nodeType":"Block","src":"18183:125:9","statements":[{"expression":{"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2918,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18261:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2921,"indexExpression":{"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:9","subExpression":{"id":2919,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18268:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2924,"nodeType":"ExpressionStatement","src":"18261:28:9"}]}},"id":2927,"nodeType":"IfStatement","src":"18095:213:9","trueBody":{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2908,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18113:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2911,"indexExpression":{"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:9","subExpression":{"id":2909,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18120:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2914,"nodeType":"ExpressionStatement","src":"18113:29:9"}},"id":2928,"nodeType":"IfStatement","src":"18026:282:9","trueBody":{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2898,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18044:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2901,"indexExpression":{"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:9","subExpression":{"id":2899,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"18051:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2904,"nodeType":"ExpressionStatement","src":"18044:28:9"}},"id":2929,"nodeType":"IfStatement","src":"17957:351:9","trueBody":{"expression":{"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2888,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17975:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2891,"indexExpression":{"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:9","subExpression":{"id":2889,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17982:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2894,"nodeType":"ExpressionStatement","src":"17975:28:9"}},"id":2930,"nodeType":"IfStatement","src":"17888:420:9","trueBody":{"expression":{"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2878,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17906:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2881,"indexExpression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:9","subExpression":{"id":2879,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17913:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2884,"nodeType":"ExpressionStatement","src":"17906:28:9"}},"id":2931,"nodeType":"IfStatement","src":"17819:489:9","trueBody":{"expression":{"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2868,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17837:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2871,"indexExpression":{"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:9","subExpression":{"id":2869,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17844:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2874,"nodeType":"ExpressionStatement","src":"17837:28:9"}},"id":2932,"nodeType":"IfStatement","src":"17750:558:9","trueBody":{"expression":{"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2858,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"17768:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2861,"indexExpression":{"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:9","subExpression":{"id":2859,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"17775:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:9","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2864,"nodeType":"ExpressionStatement","src":"17768:28:9"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"17522:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2819,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"17526:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:9","memberName":"length","nodeType":"MemberAccess","src":"17526:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2944,"initializationExpression":{"assignments":[2816],"declarations":[{"constant":false,"id":2816,"mutability":"mutable","name":"i","nameLocation":"17519:1:9","nodeType":"VariableDeclaration","scope":2944,"src":"17511:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2817,"nodeType":"VariableDeclarationStatement","src":"17511:9:9"},"loopExpression":{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:9","subExpression":{"id":2822,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"17543:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"17541:3:9"},"nodeType":"ForStatement","src":"17506:894:9"},{"AST":{"nodeType":"YulBlock","src":"18498:129:9","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:9"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:9"},"nodeType":"YulFunctionCall","src":"18512:28:9"},"nodeType":"YulExpressionStatement","src":"18512:28:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:9","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:9","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:9","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:9"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:9","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:9"},"nodeType":"YulFunctionCall","src":"18592:21:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:9"},"nodeType":"YulFunctionCall","src":"18585:29:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:9"},"nodeType":"YulFunctionCall","src":"18578:37:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:9"},"nodeType":"YulFunctionCall","src":"18566:50:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:9"},"nodeType":"YulFunctionCall","src":"18553:64:9"},"nodeType":"YulExpressionStatement","src":"18553:64:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":2802,"isOffset":false,"isSlot":false,"src":"18519:6:9","valueSize":1},{"declaration":2802,"isOffset":false,"isSlot":false,"src":"18570:6:9","valueSize":1},{"declaration":2812,"isOffset":false,"isSlot":false,"src":"18527:12:9","valueSize":1},{"declaration":2812,"isOffset":false,"isSlot":false,"src":"18596:12:9","valueSize":1}],"flags":["memory-safe"],"id":2945,"nodeType":"InlineAssembly","src":"18473:154:9"},{"expression":{"arguments":[{"id":2948,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"18651:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2946,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:9","typeDescriptions":{}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2793,"id":2950,"nodeType":"Return","src":"18637:21:9"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"16674:576:9","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2952,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:9","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"input","nameLocation":"17289:5:9","nodeType":"VariableDeclaration","scope":2952,"src":"17275:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2788,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:9"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2952,"src":"17319:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2791,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:9"},"scope":2965,"src":"17255:1410:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2963,"nodeType":"Block","src":"19050:225:9","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:9","statements":[{"nodeType":"YulAssignment","src":"19213:46:9","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:9","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:9"},"nodeType":"YulFunctionCall","src":"19240:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:9"},"nodeType":"YulFunctionCall","src":"19228:30:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:9"},"nodeType":"YulFunctionCall","src":"19222:37:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2955,"isOffset":false,"isSlot":false,"src":"19232:6:9","valueSize":1},{"declaration":2957,"isOffset":false,"isSlot":false,"src":"19250:6:9","valueSize":1},{"declaration":2960,"isOffset":false,"isSlot":false,"src":"19213:5:9","valueSize":1}],"flags":["memory-safe"],"id":2962,"nodeType":"InlineAssembly","src":"19174:95:9"}]},"documentation":{"id":2953,"nodeType":"StructuredDocumentation","src":"18671:268:9","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2964,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:9","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:9","nodeType":"VariableDeclaration","scope":2964,"src":"18976:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2954,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2957,"mutability":"mutable","name":"offset","nameLocation":"19005:6:9","nodeType":"VariableDeclaration","scope":2964,"src":"18997:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:9"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"value","nameLocation":"19043:5:9","nodeType":"VariableDeclaration","scope":2964,"src":"19035:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:9"},"scope":2965,"src":"18944:331:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2966,"src":"297:18980:9","usedErrors":[1623,1626,1629],"usedEvents":[]}],"src":"101:19177:9"},"id":9},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2989],"IERC165":[3001]},"id":2990,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2967,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2969,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2990,"sourceUnit":3002,"src":"140:38:10","symbolAliases":[{"foreign":{"id":2968,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"148:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2971,"name":"IERC165","nameLocations":["688:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":3001,"src":"688:7:10"},"id":2972,"nodeType":"InheritanceSpecifier","src":"688:7:10"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2970,"nodeType":"StructuredDocumentation","src":"180:479:10","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":2989,"linearizedBaseContracts":[2989,3001],"name":"ERC165","nameLocation":"678:6:10","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3000],"body":{"id":2987,"nodeType":"Block","src":"845:64:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"862:11:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2982,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"882:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3001_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3001_$","typeString":"type(contract IERC165)"}],"id":2981,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3001","typeString":"type(contract IERC165)"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:10","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2979,"id":2986,"nodeType":"Return","src":"855:47:10"}]},"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"702:56:10","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2988,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:10","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:10","nodeType":"VariableDeclaration","scope":2988,"src":"790:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2974,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:10","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:10"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2988,"src":"839:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2977,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:10"},"scope":2989,"src":"763:146:10","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2990,"src":"660:251:10","usedErrors":[],"usedEvents":[]}],"src":"114:798:10"},"id":10},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3001]},"id":3002,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2991,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"141:280:11","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3001,"linearizedBaseContracts":[3001],"name":"IERC165","nameLocation":"432:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2993,"nodeType":"StructuredDocumentation","src":"446:340:11","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3000,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:11","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:11","nodeType":"VariableDeclaration","scope":3000,"src":"818:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2994,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:11"},"returnParameters":{"id":2999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3000,"src":"861:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2997,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:11"},"scope":3001,"src":"791:76:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3002,"src":"422:447:11","usedErrors":[],"usedEvents":[]}],"src":"115:755:11"},"id":11},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4622],"Panic":[1563],"SafeCast":[6387]},"id":4623,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3003,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4623,"sourceUnit":1564,"src":"129:35:12","symbolAliases":[{"foreign":{"id":3004,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"137:5:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3007,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4623,"sourceUnit":6388,"src":"165:40:12","symbolAliases":[{"foreign":{"id":3006,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"173:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"207:73:12","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4622,"linearizedBaseContracts":[4622],"name":"Math","nameLocation":"289:4:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3013,"members":[{"id":3009,"name":"Floor","nameLocation":"324:5:12","nodeType":"EnumValue","src":"324:5:12"},{"id":3010,"name":"Ceil","nameLocation":"367:4:12","nodeType":"EnumValue","src":"367:4:12"},{"id":3011,"name":"Trunc","nameLocation":"409:5:12","nodeType":"EnumValue","src":"409:5:12"},{"id":3012,"name":"Expand","nameLocation":"439:6:12","nodeType":"EnumValue","src":"439:6:12"}],"name":"Rounding","nameLocation":"305:8:12","nodeType":"EnumDefinition","src":"300:169:12"},{"body":{"id":3026,"nodeType":"Block","src":"731:112:12","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:12","statements":[{"nodeType":"YulAssignment","src":"780:16:12","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:12"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:12"},"nodeType":"YulFunctionCall","src":"787:9:12"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:12"}]},{"nodeType":"YulAssignment","src":"809:18:12","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:12"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:12"},"nodeType":"YulFunctionCall","src":"817:10:12"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3016,"isOffset":false,"isSlot":false,"src":"791:1:12","valueSize":1},{"declaration":3016,"isOffset":false,"isSlot":false,"src":"825:1:12","valueSize":1},{"declaration":3018,"isOffset":false,"isSlot":false,"src":"794:1:12","valueSize":1},{"declaration":3021,"isOffset":false,"isSlot":false,"src":"809:4:12","valueSize":1},{"declaration":3023,"isOffset":false,"isSlot":false,"src":"780:3:12","valueSize":1},{"declaration":3023,"isOffset":false,"isSlot":false,"src":"820:3:12","valueSize":1}],"flags":["memory-safe"],"id":3025,"nodeType":"InlineAssembly","src":"741:96:12"}]},"documentation":{"id":3014,"nodeType":"StructuredDocumentation","src":"475:163:12","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:12","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"a","nameLocation":"667:1:12","nodeType":"VariableDeclaration","scope":3027,"src":"659:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3015,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"b","nameLocation":"678:1:12","nodeType":"VariableDeclaration","scope":3027,"src":"670:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3017,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:12"},"returnParameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"high","nameLocation":"712:4:12","nodeType":"VariableDeclaration","scope":3027,"src":"704:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3020,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3023,"mutability":"mutable","name":"low","nameLocation":"726:3:12","nodeType":"VariableDeclaration","scope":3027,"src":"718:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:12"},"scope":4622,"src":"643:200:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3040,"nodeType":"Block","src":"1115:462:12","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:12","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:12","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:12"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:12","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:12"},"nodeType":"YulFunctionCall","src":"1474:6:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:12"},"nodeType":"YulFunctionCall","src":"1461:20:12"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:12","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:12","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:12"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:12"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:12"},"nodeType":"YulFunctionCall","src":"1501:9:12"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:12"}]},{"nodeType":"YulAssignment","src":"1523:38:12","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:12"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:12"},"nodeType":"YulFunctionCall","src":"1535:12:12"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:12"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:12"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:12"},"nodeType":"YulFunctionCall","src":"1549:11:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:12"},"nodeType":"YulFunctionCall","src":"1531:30:12"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3030,"isOffset":false,"isSlot":false,"src":"1468:1:12","valueSize":1},{"declaration":3030,"isOffset":false,"isSlot":false,"src":"1505:1:12","valueSize":1},{"declaration":3032,"isOffset":false,"isSlot":false,"src":"1471:1:12","valueSize":1},{"declaration":3032,"isOffset":false,"isSlot":false,"src":"1508:1:12","valueSize":1},{"declaration":3035,"isOffset":false,"isSlot":false,"src":"1523:4:12","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"1494:3:12","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"1543:3:12","valueSize":1},{"declaration":3037,"isOffset":false,"isSlot":false,"src":"1556:3:12","valueSize":1}],"flags":["memory-safe"],"id":3039,"nodeType":"InlineAssembly","src":"1412:159:12"}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"849:173:12","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3041,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:12","nodeType":"FunctionDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"a","nameLocation":"1051:1:12","nodeType":"VariableDeclaration","scope":3041,"src":"1043:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"b","nameLocation":"1062:1:12","nodeType":"VariableDeclaration","scope":3041,"src":"1054:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:12"},"returnParameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"mutability":"mutable","name":"high","nameLocation":"1096:4:12","nodeType":"VariableDeclaration","scope":3041,"src":"1088:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3037,"mutability":"mutable","name":"low","nameLocation":"1110:3:12","nodeType":"VariableDeclaration","scope":3041,"src":"1102:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:12"},"scope":4622,"src":"1027:550:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3075,"nodeType":"Block","src":"1784:149:12","statements":[{"id":3074,"nodeType":"UncheckedBlock","src":"1794:133:12","statements":[{"assignments":[3054],"declarations":[{"constant":false,"id":3054,"mutability":"mutable","name":"c","nameLocation":"1826:1:12","nodeType":"VariableDeclaration","scope":3074,"src":"1818:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3058,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3055,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"1830:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"1834:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:12"},{"expression":{"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3059,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"1849:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3060,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1859:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"1864:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3064,"nodeType":"ExpressionStatement","src":"1849:16:12"},{"expression":{"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3065,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"1879:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3066,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"1888:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3069,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"1908:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3067,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"1892:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"1892:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3073,"nodeType":"ExpressionStatement","src":"1879:37:12"}]}]},"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"1583:105:12","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3076,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:12","nodeType":"FunctionDefinition","parameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"a","nameLocation":"1717:1:12","nodeType":"VariableDeclaration","scope":3076,"src":"1709:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3046,"mutability":"mutable","name":"b","nameLocation":"1728:1:12","nodeType":"VariableDeclaration","scope":3076,"src":"1720:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:12"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"success","nameLocation":"1759:7:12","nodeType":"VariableDeclaration","scope":3076,"src":"1754:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3048,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"result","nameLocation":"1776:6:12","nodeType":"VariableDeclaration","scope":3076,"src":"1768:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:12"},"scope":4622,"src":"1693:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3110,"nodeType":"Block","src":"2143:149:12","statements":[{"id":3109,"nodeType":"UncheckedBlock","src":"2153:133:12","statements":[{"assignments":[3089],"declarations":[{"constant":false,"id":3089,"mutability":"mutable","name":"c","nameLocation":"2185:1:12","nodeType":"VariableDeclaration","scope":3109,"src":"2177:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3088,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3093,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3090,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"2189:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3091,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"2193:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:12"},{"expression":{"id":3098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3094,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"2208:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3095,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2218:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"2223:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3099,"nodeType":"ExpressionStatement","src":"2208:16:12"},{"expression":{"id":3107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"2238:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3101,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"2247:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3104,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"2267:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3102,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"2251:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"2251:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3108,"nodeType":"ExpressionStatement","src":"2238:37:12"}]}]},"documentation":{"id":3077,"nodeType":"StructuredDocumentation","src":"1939:108:12","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3111,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:12","nodeType":"FunctionDefinition","parameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"a","nameLocation":"2076:1:12","nodeType":"VariableDeclaration","scope":3111,"src":"2068:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3078,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"b","nameLocation":"2087:1:12","nodeType":"VariableDeclaration","scope":3111,"src":"2079:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:12"},"returnParameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3084,"mutability":"mutable","name":"success","nameLocation":"2118:7:12","nodeType":"VariableDeclaration","scope":3111,"src":"2113:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3083,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3086,"mutability":"mutable","name":"result","nameLocation":"2135:6:12","nodeType":"VariableDeclaration","scope":3111,"src":"2127:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:12"},"scope":4622,"src":"2052:240:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3140,"nodeType":"Block","src":"2505:391:12","statements":[{"id":3139,"nodeType":"UncheckedBlock","src":"2515:375:12","statements":[{"assignments":[3124],"declarations":[{"constant":false,"id":3124,"mutability":"mutable","name":"c","nameLocation":"2547:1:12","nodeType":"VariableDeclaration","scope":3139,"src":"2539:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3128,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"2551:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"2555:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:12"},{"AST":{"nodeType":"YulBlock","src":"2595:188:12","statements":[{"nodeType":"YulAssignment","src":"2727:42:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:12"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:12"},"nodeType":"YulFunctionCall","src":"2744:9:12"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:12"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:12"},"nodeType":"YulFunctionCall","src":"2741:16:12"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:12"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:12"},"nodeType":"YulFunctionCall","src":"2759:9:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:12"},"nodeType":"YulFunctionCall","src":"2738:31:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3114,"isOffset":false,"isSlot":false,"src":"2751:1:12","valueSize":1},{"declaration":3114,"isOffset":false,"isSlot":false,"src":"2766:1:12","valueSize":1},{"declaration":3116,"isOffset":false,"isSlot":false,"src":"2755:1:12","valueSize":1},{"declaration":3124,"isOffset":false,"isSlot":false,"src":"2748:1:12","valueSize":1},{"declaration":3119,"isOffset":false,"isSlot":false,"src":"2727:7:12","valueSize":1}],"flags":["memory-safe"],"id":3129,"nodeType":"InlineAssembly","src":"2570:213:12"},{"expression":{"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"2842:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3131,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"2851:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3134,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"2871:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3132,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"2855:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"2855:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3138,"nodeType":"ExpressionStatement","src":"2842:37:12"}]}]},"documentation":{"id":3112,"nodeType":"StructuredDocumentation","src":"2298:111:12","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3141,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:12","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3114,"mutability":"mutable","name":"a","nameLocation":"2438:1:12","nodeType":"VariableDeclaration","scope":3141,"src":"2430:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3116,"mutability":"mutable","name":"b","nameLocation":"2449:1:12","nodeType":"VariableDeclaration","scope":3141,"src":"2441:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3115,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:12"},"returnParameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"success","nameLocation":"2480:7:12","nodeType":"VariableDeclaration","scope":3141,"src":"2475:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3118,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"result","nameLocation":"2497:6:12","nodeType":"VariableDeclaration","scope":3141,"src":"2489:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:12"},"scope":4622,"src":"2414:482:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3161,"nodeType":"Block","src":"3111:231:12","statements":[{"id":3160,"nodeType":"UncheckedBlock","src":"3121:215:12","statements":[{"expression":{"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3153,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"3145:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"3155:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3158,"nodeType":"ExpressionStatement","src":"3145:15:12"},{"AST":{"nodeType":"YulBlock","src":"3199:127:12","statements":[{"nodeType":"YulAssignment","src":"3293:19:12","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:12"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:12"},"nodeType":"YulFunctionCall","src":"3303:9:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3144,"isOffset":false,"isSlot":false,"src":"3307:1:12","valueSize":1},{"declaration":3146,"isOffset":false,"isSlot":false,"src":"3310:1:12","valueSize":1},{"declaration":3151,"isOffset":false,"isSlot":false,"src":"3293:6:12","valueSize":1}],"flags":["memory-safe"],"id":3159,"nodeType":"InlineAssembly","src":"3174:152:12"}]}]},"documentation":{"id":3142,"nodeType":"StructuredDocumentation","src":"2902:113:12","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3162,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:12","nodeType":"FunctionDefinition","parameters":{"id":3147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"a","nameLocation":"3044:1:12","nodeType":"VariableDeclaration","scope":3162,"src":"3036:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"b","nameLocation":"3055:1:12","nodeType":"VariableDeclaration","scope":3162,"src":"3047:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:12"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3149,"mutability":"mutable","name":"success","nameLocation":"3086:7:12","nodeType":"VariableDeclaration","scope":3162,"src":"3081:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3148,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3151,"mutability":"mutable","name":"result","nameLocation":"3103:6:12","nodeType":"VariableDeclaration","scope":3162,"src":"3095:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:12"},"scope":4622,"src":"3020:322:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3182,"nodeType":"Block","src":"3567:231:12","statements":[{"id":3181,"nodeType":"UncheckedBlock","src":"3577:215:12","statements":[{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3174,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"3601:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3175,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"3611:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3179,"nodeType":"ExpressionStatement","src":"3601:15:12"},{"AST":{"nodeType":"YulBlock","src":"3655:127:12","statements":[{"nodeType":"YulAssignment","src":"3749:19:12","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:12"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:12"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:12"},"nodeType":"YulFunctionCall","src":"3759:9:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3165,"isOffset":false,"isSlot":false,"src":"3763:1:12","valueSize":1},{"declaration":3167,"isOffset":false,"isSlot":false,"src":"3766:1:12","valueSize":1},{"declaration":3172,"isOffset":false,"isSlot":false,"src":"3749:6:12","valueSize":1}],"flags":["memory-safe"],"id":3180,"nodeType":"InlineAssembly","src":"3630:152:12"}]}]},"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"3348:123:12","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:12","nodeType":"FunctionDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"a","nameLocation":"3500:1:12","nodeType":"VariableDeclaration","scope":3183,"src":"3492:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3167,"mutability":"mutable","name":"b","nameLocation":"3511:1:12","nodeType":"VariableDeclaration","scope":3183,"src":"3503:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:12"},"returnParameters":{"id":3173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3170,"mutability":"mutable","name":"success","nameLocation":"3542:7:12","nodeType":"VariableDeclaration","scope":3183,"src":"3537:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3169,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"result","nameLocation":"3559:6:12","nodeType":"VariableDeclaration","scope":3183,"src":"3551:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:12"},"scope":4622,"src":"3476:322:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3212,"nodeType":"Block","src":"3989:122:12","statements":[{"assignments":[3194,3196],"declarations":[{"constant":false,"id":3194,"mutability":"mutable","name":"success","nameLocation":"4005:7:12","nodeType":"VariableDeclaration","scope":3212,"src":"4000:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3193,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"result","nameLocation":"4022:6:12","nodeType":"VariableDeclaration","scope":3212,"src":"4014:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3201,"initialValue":{"arguments":[{"id":3198,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"4039:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3199,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"4042:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3197,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3076,"src":"4032:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:12"},{"expression":{"arguments":[{"id":3203,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"4069:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3204,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"4078:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3205,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:12","memberName":"max","nodeType":"MemberAccess","src":"4086:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3202,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"4061:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3192,"id":3211,"nodeType":"Return","src":"4054:50:12"}]},"documentation":{"id":3184,"nodeType":"StructuredDocumentation","src":"3804:103:12","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3213,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:12","nodeType":"FunctionDefinition","parameters":{"id":3189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3186,"mutability":"mutable","name":"a","nameLocation":"3943:1:12","nodeType":"VariableDeclaration","scope":3213,"src":"3935:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3185,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3188,"mutability":"mutable","name":"b","nameLocation":"3954:1:12","nodeType":"VariableDeclaration","scope":3213,"src":"3946:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3187,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:12"},"returnParameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3213,"src":"3980:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:12"},"scope":4622,"src":"3912:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3232,"nodeType":"Block","src":"4294:73:12","statements":[{"assignments":[null,3224],"declarations":[null,{"constant":false,"id":3224,"mutability":"mutable","name":"result","nameLocation":"4315:6:12","nodeType":"VariableDeclaration","scope":3232,"src":"4307:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3229,"initialValue":{"arguments":[{"id":3226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"4332:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3227,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"4335:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3225,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4325:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:12"},{"expression":{"id":3230,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"4354:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3222,"id":3231,"nodeType":"Return","src":"4347:13:12"}]},"documentation":{"id":3214,"nodeType":"StructuredDocumentation","src":"4117:95:12","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3233,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:12","nodeType":"FunctionDefinition","parameters":{"id":3219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"a","nameLocation":"4248:1:12","nodeType":"VariableDeclaration","scope":3233,"src":"4240:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"b","nameLocation":"4259:1:12","nodeType":"VariableDeclaration","scope":3233,"src":"4251:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:12"},"returnParameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3233,"src":"4285:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:12"},"scope":4622,"src":"4217:150:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3262,"nodeType":"Block","src":"4564:122:12","statements":[{"assignments":[3244,3246],"declarations":[{"constant":false,"id":3244,"mutability":"mutable","name":"success","nameLocation":"4580:7:12","nodeType":"VariableDeclaration","scope":3262,"src":"4575:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3243,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"result","nameLocation":"4597:6:12","nodeType":"VariableDeclaration","scope":3262,"src":"4589:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3251,"initialValue":{"arguments":[{"id":3248,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"4614:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3249,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3238,"src":"4617:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3247,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"4607:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:12"},{"expression":{"arguments":[{"id":3253,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"4644:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3254,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"4653:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:12","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:12","memberName":"max","nodeType":"MemberAccess","src":"4661:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3252,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"4636:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3242,"id":3261,"nodeType":"Return","src":"4629:50:12"}]},"documentation":{"id":3234,"nodeType":"StructuredDocumentation","src":"4373:109:12","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3263,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:12","nodeType":"FunctionDefinition","parameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"a","nameLocation":"4518:1:12","nodeType":"VariableDeclaration","scope":3263,"src":"4510:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"b","nameLocation":"4529:1:12","nodeType":"VariableDeclaration","scope":3263,"src":"4521:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3237,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:12"},"returnParameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3263,"src":"4555:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3240,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:12"},"scope":4622,"src":"4487:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"5158:207:12","statements":[{"id":3288,"nodeType":"UncheckedBlock","src":"5168:191:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"5306:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"5312:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3270,"src":"5316:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3282,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"5337:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3280,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"5321:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"5321:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3274,"id":3287,"nodeType":"Return","src":"5299:49:12"}]}]},"documentation":{"id":3264,"nodeType":"StructuredDocumentation","src":"4692:374:12","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:12","nodeType":"FunctionDefinition","parameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3266,"mutability":"mutable","name":"condition","nameLocation":"5093:9:12","nodeType":"VariableDeclaration","scope":3290,"src":"5088:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3265,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3268,"mutability":"mutable","name":"a","nameLocation":"5112:1:12","nodeType":"VariableDeclaration","scope":3290,"src":"5104:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3267,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3270,"mutability":"mutable","name":"b","nameLocation":"5123:1:12","nodeType":"VariableDeclaration","scope":3290,"src":"5115:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:12"},"returnParameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"5149:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:12"},"scope":4622,"src":"5071:294:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3308,"nodeType":"Block","src":"5502:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"5527:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"5531:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"5534:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3295,"src":"5537:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3300,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"5519:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3299,"id":3307,"nodeType":"Return","src":"5512:27:12"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"5371:59:12","text":" @dev Returns the largest of two numbers."},"id":3309,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:12","nodeType":"FunctionDefinition","parameters":{"id":3296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"a","nameLocation":"5456:1:12","nodeType":"VariableDeclaration","scope":3309,"src":"5448:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3295,"mutability":"mutable","name":"b","nameLocation":"5467:1:12","nodeType":"VariableDeclaration","scope":3309,"src":"5459:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3294,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:12"},"returnParameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3309,"src":"5493:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:12"},"scope":4622,"src":"5435:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3327,"nodeType":"Block","src":"5684:44:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"5709:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"5713:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3323,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"5716:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"5719:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3319,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"5701:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3318,"id":3326,"nodeType":"Return","src":"5694:27:12"}]},"documentation":{"id":3310,"nodeType":"StructuredDocumentation","src":"5552:60:12","text":" @dev Returns the smallest of two numbers."},"id":3328,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:12","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"a","nameLocation":"5638:1:12","nodeType":"VariableDeclaration","scope":3328,"src":"5630:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"b","nameLocation":"5649:1:12","nodeType":"VariableDeclaration","scope":3328,"src":"5641:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:12"},"returnParameters":{"id":3318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3328,"src":"5675:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:12"},"scope":4622,"src":"5617:111:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3350,"nodeType":"Block","src":"5912:82:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"5967:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"5971:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3342,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"5977:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3343,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"5981:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3345,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3337,"id":3349,"nodeType":"Return","src":"5959:28:12"}]},"documentation":{"id":3329,"nodeType":"StructuredDocumentation","src":"5734:102:12","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3351,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:12","nodeType":"FunctionDefinition","parameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3331,"mutability":"mutable","name":"a","nameLocation":"5866:1:12","nodeType":"VariableDeclaration","scope":3351,"src":"5858:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3333,"mutability":"mutable","name":"b","nameLocation":"5877:1:12","nodeType":"VariableDeclaration","scope":3351,"src":"5869:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3332,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:12"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3351,"src":"5903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:12"},"scope":4622,"src":"5841:153:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3391,"nodeType":"Block","src":"6286:633:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"6300:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3372,"nodeType":"IfStatement","src":"6296:150:12","trueBody":{"id":3371,"nodeType":"Block","src":"6308:138:12","statements":[{"expression":{"arguments":[{"expression":{"id":3367,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6412:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"6412:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3364,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"6400:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"6400:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3370,"nodeType":"ExpressionStatement","src":"6400:35:12"}]}},{"id":3390,"nodeType":"UncheckedBlock","src":"6829:84:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"6876:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3373,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"6860:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"6860:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3354,"src":"6887:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3383,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"6896:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3360,"id":3389,"nodeType":"Return","src":"6853:49:12"}]}]},"documentation":{"id":3352,"nodeType":"StructuredDocumentation","src":"6000:210:12","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3392,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:12","nodeType":"FunctionDefinition","parameters":{"id":3357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"a","nameLocation":"6240:1:12","nodeType":"VariableDeclaration","scope":3392,"src":"6232:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3356,"mutability":"mutable","name":"b","nameLocation":"6251:1:12","nodeType":"VariableDeclaration","scope":3392,"src":"6243:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:12"},"returnParameters":{"id":3360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3392,"src":"6277:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3358,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:12"},"scope":4622,"src":"6215:704:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3527,"nodeType":"Block","src":"7340:3585:12","statements":[{"id":3526,"nodeType":"UncheckedBlock","src":"7350:3569:12","statements":[{"assignments":[3405,3407],"declarations":[{"constant":false,"id":3405,"mutability":"mutable","name":"high","nameLocation":"7383:4:12","nodeType":"VariableDeclaration","scope":3526,"src":"7375:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"low","nameLocation":"7397:3:12","nodeType":"VariableDeclaration","scope":3526,"src":"7389:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3412,"initialValue":{"arguments":[{"id":3409,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"7411:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3410,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"7414:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3408,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"7404:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3413,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"7498:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3421,"nodeType":"IfStatement","src":"7494:365:12","trueBody":{"id":3420,"nodeType":"Block","src":"7509:350:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"7827:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3417,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"7833:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3403,"id":3419,"nodeType":"Return","src":"7820:24:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3422,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"7969:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3423,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"7984:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3440,"nodeType":"IfStatement","src":"7965:142:12","trueBody":{"id":3439,"nodeType":"Block","src":"7990:117:12","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3429,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"8028:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3432,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"8046:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"8046:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3434,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"8070:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1526,"src":"8070:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3428,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"8020:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3425,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"8008:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"8008:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3438,"nodeType":"ExpressionStatement","src":"8008:84:12"}]}},{"assignments":[3442],"declarations":[{"constant":false,"id":3442,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:12","nodeType":"VariableDeclaration","scope":3526,"src":"8359:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3441,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3443,"nodeType":"VariableDeclarationStatement","src":"8359:17:12"},{"AST":{"nodeType":"YulBlock","src":"8415:283:12","statements":[{"nodeType":"YulAssignment","src":"8484:38:12","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:12"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:12"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:12"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:12"},"nodeType":"YulFunctionCall","src":"8497:25:12"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:12"}]},{"nodeType":"YulAssignment","src":"8604:37:12","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:12"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:12"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:12"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:12"},"nodeType":"YulFunctionCall","src":"8622:18:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:12"},"nodeType":"YulFunctionCall","src":"8612:29:12"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:12"}]},{"nodeType":"YulAssignment","src":"8658:26:12","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:12"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:12"},"nodeType":"YulFunctionCall","src":"8665:19:12"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3399,"isOffset":false,"isSlot":false,"src":"8510:11:12","valueSize":1},{"declaration":3405,"isOffset":false,"isSlot":false,"src":"8604:4:12","valueSize":1},{"declaration":3405,"isOffset":false,"isSlot":false,"src":"8616:4:12","valueSize":1},{"declaration":3407,"isOffset":false,"isSlot":false,"src":"8636:3:12","valueSize":1},{"declaration":3407,"isOffset":false,"isSlot":false,"src":"8658:3:12","valueSize":1},{"declaration":3407,"isOffset":false,"isSlot":false,"src":"8669:3:12","valueSize":1},{"declaration":3442,"isOffset":false,"isSlot":false,"src":"8484:9:12","valueSize":1},{"declaration":3442,"isOffset":false,"isSlot":false,"src":"8625:9:12","valueSize":1},{"declaration":3442,"isOffset":false,"isSlot":false,"src":"8674:9:12","valueSize":1},{"declaration":3395,"isOffset":false,"isSlot":false,"src":"8504:1:12","valueSize":1},{"declaration":3397,"isOffset":false,"isSlot":false,"src":"8507:1:12","valueSize":1}],"flags":["memory-safe"],"id":3444,"nodeType":"InlineAssembly","src":"8390:308:12"},{"assignments":[3446],"declarations":[{"constant":false,"id":3446,"mutability":"mutable","name":"twos","nameLocation":"8910:4:12","nodeType":"VariableDeclaration","scope":3526,"src":"8902:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3445,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3453,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"8917:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3449,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"8936:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:12"},{"AST":{"nodeType":"YulBlock","src":"8987:359:12","statements":[{"nodeType":"YulAssignment","src":"9052:37:12","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:12"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:12"},"nodeType":"YulFunctionCall","src":"9067:22:12"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:12"}]},{"nodeType":"YulAssignment","src":"9153:21:12","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:12"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:12"},"nodeType":"YulFunctionCall","src":"9160:14:12"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:12"}]},{"nodeType":"YulAssignment","src":"9293:39:12","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:12","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:12"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:12"},"nodeType":"YulFunctionCall","src":"9309:12:12"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:12"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:12"},"nodeType":"YulFunctionCall","src":"9305:23:12"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:12","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:12"},"nodeType":"YulFunctionCall","src":"9301:31:12"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3399,"isOffset":false,"isSlot":false,"src":"9052:11:12","valueSize":1},{"declaration":3399,"isOffset":false,"isSlot":false,"src":"9071:11:12","valueSize":1},{"declaration":3407,"isOffset":false,"isSlot":false,"src":"9153:3:12","valueSize":1},{"declaration":3407,"isOffset":false,"isSlot":false,"src":"9164:3:12","valueSize":1},{"declaration":3446,"isOffset":false,"isSlot":false,"src":"9084:4:12","valueSize":1},{"declaration":3446,"isOffset":false,"isSlot":false,"src":"9169:4:12","valueSize":1},{"declaration":3446,"isOffset":false,"isSlot":false,"src":"9293:4:12","valueSize":1},{"declaration":3446,"isOffset":false,"isSlot":false,"src":"9316:4:12","valueSize":1},{"declaration":3446,"isOffset":false,"isSlot":false,"src":"9323:4:12","valueSize":1}],"flags":["memory-safe"],"id":3454,"nodeType":"InlineAssembly","src":"8962:384:12"},{"expression":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3455,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"9409:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"9416:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3457,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3446,"src":"9423:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3460,"nodeType":"ExpressionStatement","src":"9409:18:12"},{"assignments":[3462],"declarations":[{"constant":false,"id":3462,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:12","nodeType":"VariableDeclaration","scope":3526,"src":"9762:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3469,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3464,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"9785:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:12"},{"expression":{"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3470,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10018:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"10033:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3473,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10047:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3477,"nodeType":"ExpressionStatement","src":"10018:36:12"},{"expression":{"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3478,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10088:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3480,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"10103:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3481,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10117:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"nodeType":"ExpressionStatement","src":"10088:36:12"},{"expression":{"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3486,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10160:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3488,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"10175:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3489,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10189:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3493,"nodeType":"ExpressionStatement","src":"10160:36:12"},{"expression":{"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3494,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10231:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"10246:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3497,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10260:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3501,"nodeType":"ExpressionStatement","src":"10231:36:12"},{"expression":{"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3502,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10304:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3504,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"10319:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3505,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10333:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3509,"nodeType":"ExpressionStatement","src":"10304:36:12"},{"expression":{"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3510,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3512,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"10393:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3513,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10407:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3517,"nodeType":"ExpressionStatement","src":"10378:36:12"},{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"10859:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3519,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"10868:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3520,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10874:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"nodeType":"ExpressionStatement","src":"10859:22:12"},{"expression":{"id":3524,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"10902:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3403,"id":3525,"nodeType":"Return","src":"10895:13:12"}]}]},"documentation":{"id":3393,"nodeType":"StructuredDocumentation","src":"6925:312:12","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3528,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:12","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"x","nameLocation":"7266:1:12","nodeType":"VariableDeclaration","scope":3528,"src":"7258:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3397,"mutability":"mutable","name":"y","nameLocation":"7277:1:12","nodeType":"VariableDeclaration","scope":3528,"src":"7269:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:12","nodeType":"VariableDeclaration","scope":3528,"src":"7280:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:12"},"returnParameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"result","nameLocation":"7332:6:12","nodeType":"VariableDeclaration","scope":3528,"src":"7324:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:12"},"scope":4622,"src":"7242:3683:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3564,"nodeType":"Block","src":"11164:128:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3544,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"11188:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3545,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"11191:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3546,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"11194:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3543,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3528,3565],"referencedDeclaration":3528,"src":"11181:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3551,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"11242:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}],"id":3550,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"11225:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3013_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3554,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"11262:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3555,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"11265:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3556,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"11268:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3553,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3548,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"11209:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"11209:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3542,"id":3563,"nodeType":"Return","src":"11174:111:12"}]},"documentation":{"id":3529,"nodeType":"StructuredDocumentation","src":"10931:118:12","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3565,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:12","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3531,"mutability":"mutable","name":"x","nameLocation":"11078:1:12","nodeType":"VariableDeclaration","scope":3565,"src":"11070:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3533,"mutability":"mutable","name":"y","nameLocation":"11089:1:12","nodeType":"VariableDeclaration","scope":3565,"src":"11081:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3535,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:12","nodeType":"VariableDeclaration","scope":3565,"src":"11092:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3534,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3538,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:12","nodeType":"VariableDeclaration","scope":3565,"src":"11113:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"},"typeName":{"id":3537,"nodeType":"UserDefinedTypeName","pathNode":{"id":3536,"name":"Rounding","nameLocations":["11113:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"11113:8:12"},"referencedDeclaration":3013,"src":"11113:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:12"},"returnParameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3565,"src":"11155:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:12"},"scope":4622,"src":"11054:238:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3614,"nodeType":"Block","src":"11500:245:12","statements":[{"id":3613,"nodeType":"UncheckedBlock","src":"11510:229:12","statements":[{"assignments":[3578,3580],"declarations":[{"constant":false,"id":3578,"mutability":"mutable","name":"high","nameLocation":"11543:4:12","nodeType":"VariableDeclaration","scope":3613,"src":"11535:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3577,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3580,"mutability":"mutable","name":"low","nameLocation":"11557:3:12","nodeType":"VariableDeclaration","scope":3613,"src":"11549:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3579,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3585,"initialValue":{"arguments":[{"id":3582,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"11571:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3583,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3570,"src":"11574:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3581,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"11564:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"11594:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3588,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"11607:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3599,"nodeType":"IfStatement","src":"11590:86:12","trueBody":{"id":3598,"nodeType":"Block","src":"11610:66:12","statements":[{"expression":{"arguments":[{"expression":{"id":3594,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11640:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:12","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1526,"src":"11640:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3591,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11628:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"11628:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3597,"nodeType":"ExpressionStatement","src":"11628:33:12"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3600,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"11697:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3602,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"11712:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:12","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3606,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"11719:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3608,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3572,"src":"11726:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3576,"id":3612,"nodeType":"Return","src":"11689:39:12"}]}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"11298:111:12","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3615,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:12","nodeType":"FunctionDefinition","parameters":{"id":3573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"x","nameLocation":"11438:1:12","nodeType":"VariableDeclaration","scope":3615,"src":"11430:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"y","nameLocation":"11449:1:12","nodeType":"VariableDeclaration","scope":3615,"src":"11441:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3572,"mutability":"mutable","name":"n","nameLocation":"11458:1:12","nodeType":"VariableDeclaration","scope":3615,"src":"11452:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3571,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:12"},"returnParameters":{"id":3576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"result","nameLocation":"11492:6:12","nodeType":"VariableDeclaration","scope":3615,"src":"11484:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3574,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:12"},"scope":4622,"src":"11414:331:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3653,"nodeType":"Block","src":"11963:113:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3631,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"11987:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3632,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"11990:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3633,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"11993:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3630,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3615,3654],"referencedDeclaration":3615,"src":"11980:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3638,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3625,"src":"12031:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}],"id":3637,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"12014:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3013_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3641,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"12051:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3642,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3620,"src":"12054:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3644,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3622,"src":"12062:1:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3640,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:12","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3635,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"11998:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"11998:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3629,"id":3652,"nodeType":"Return","src":"11973:96:12"}]},"documentation":{"id":3616,"nodeType":"StructuredDocumentation","src":"11751:109:12","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3654,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:12","nodeType":"FunctionDefinition","parameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"x","nameLocation":"11889:1:12","nodeType":"VariableDeclaration","scope":3654,"src":"11881:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3620,"mutability":"mutable","name":"y","nameLocation":"11900:1:12","nodeType":"VariableDeclaration","scope":3654,"src":"11892:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3619,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3622,"mutability":"mutable","name":"n","nameLocation":"11909:1:12","nodeType":"VariableDeclaration","scope":3654,"src":"11903:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3621,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3625,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:12","nodeType":"VariableDeclaration","scope":3654,"src":"11912:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"},"typeName":{"id":3624,"nodeType":"UserDefinedTypeName","pathNode":{"id":3623,"name":"Rounding","nameLocations":["11912:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"11912:8:12"},"referencedDeclaration":3013,"src":"11912:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:12"},"returnParameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3628,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3654,"src":"11954:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3627,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:12"},"scope":4622,"src":"11865:211:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3750,"nodeType":"Block","src":"12710:1849:12","statements":[{"id":3749,"nodeType":"UncheckedBlock","src":"12720:1833:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"12748:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3669,"nodeType":"IfStatement","src":"12744:20:12","trueBody":{"expression":{"hexValue":"30","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3663,"id":3668,"nodeType":"Return","src":"12756:8:12"}},{"assignments":[3671],"declarations":[{"constant":false,"id":3671,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:12","nodeType":"VariableDeclaration","scope":3749,"src":"13235:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3675,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3672,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3657,"src":"13255:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3673,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"13259:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:12"},{"assignments":[3677],"declarations":[{"constant":false,"id":3677,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:12","nodeType":"VariableDeclaration","scope":3749,"src":"13274:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3679,"initialValue":{"id":3678,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"13288:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:12"},{"assignments":[3681],"declarations":[{"constant":false,"id":3681,"mutability":"mutable","name":"x","nameLocation":"13432:1:12","nodeType":"VariableDeclaration","scope":3749,"src":"13425:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3680,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3683,"initialValue":{"hexValue":"30","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:12"},{"assignments":[3685],"declarations":[{"constant":false,"id":3685,"mutability":"mutable","name":"y","nameLocation":"13458:1:12","nodeType":"VariableDeclaration","scope":3749,"src":"13451:8:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3684,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3687,"initialValue":{"hexValue":"31","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:12"},{"body":{"id":3724,"nodeType":"Block","src":"13501:882:12","statements":[{"assignments":[3692],"declarations":[{"constant":false,"id":3692,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:12","nodeType":"VariableDeclaration","scope":3724,"src":"13519:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3696,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3693,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"13538:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3694,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"13544:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:12"},{"expression":{"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3697,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"13573:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3698,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"13578:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3699,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3700,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"13678:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3701,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"13923:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3702,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"13929:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3703,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"13941:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3708,"nodeType":"ExpressionStatement","src":"13572:395:12"},{"expression":{"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3709,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"13987:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3710,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"13990:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3711,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3712,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"14072:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3713,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"14326:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3714,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3685,"src":"14330:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3717,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"14341:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3715,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:12","typeDescriptions":{}}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3721,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:12","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3723,"nodeType":"ExpressionStatement","src":"13986:382:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"13485:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3725,"nodeType":"WhileStatement","src":"13478:905:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3726,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"14401:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3731,"nodeType":"IfStatement","src":"14397:22:12","trueBody":{"expression":{"hexValue":"30","id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3663,"id":3730,"nodeType":"Return","src":"14411:8:12"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3733,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"14470:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3659,"src":"14477:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:12","subExpression":{"id":3739,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"14490:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:12","typeDescriptions":{}}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3745,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"14502:1:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:12","typeDescriptions":{}}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3732,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"14462:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3663,"id":3748,"nodeType":"Return","src":"14455:50:12"}]}]},"documentation":{"id":3655,"nodeType":"StructuredDocumentation","src":"12082:553:12","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3751,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:12","nodeType":"FunctionDefinition","parameters":{"id":3660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3657,"mutability":"mutable","name":"a","nameLocation":"12664:1:12","nodeType":"VariableDeclaration","scope":3751,"src":"12656:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3659,"mutability":"mutable","name":"n","nameLocation":"12675:1:12","nodeType":"VariableDeclaration","scope":3751,"src":"12667:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3658,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:12"},"returnParameters":{"id":3663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3751,"src":"12701:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3661,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:12"},"scope":4622,"src":"12640:1919:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3771,"nodeType":"Block","src":"15159:82:12","statements":[{"id":3770,"nodeType":"UncheckedBlock","src":"15169:66:12","statements":[{"expression":{"arguments":[{"id":3763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3754,"src":"15212:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"15215:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3767,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3756,"src":"15222:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3761,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4622,"src":"15200:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4622_$","typeString":"type(library Math)"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:12","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3808,"src":"15200:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3760,"id":3769,"nodeType":"Return","src":"15193:31:12"}]}]},"documentation":{"id":3752,"nodeType":"StructuredDocumentation","src":"14565:514:12","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3772,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:12","nodeType":"FunctionDefinition","parameters":{"id":3757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"a","nameLocation":"15113:1:12","nodeType":"VariableDeclaration","scope":3772,"src":"15105:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3753,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3756,"mutability":"mutable","name":"p","nameLocation":"15124:1:12","nodeType":"VariableDeclaration","scope":3772,"src":"15116:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3755,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:12"},"returnParameters":{"id":3760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3772,"src":"15150:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:12"},"scope":4622,"src":"15084:157:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3807,"nodeType":"Block","src":"16011:174:12","statements":[{"assignments":[3785,3787],"declarations":[{"constant":false,"id":3785,"mutability":"mutable","name":"success","nameLocation":"16027:7:12","nodeType":"VariableDeclaration","scope":3807,"src":"16022:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3784,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"result","nameLocation":"16044:6:12","nodeType":"VariableDeclaration","scope":3807,"src":"16036:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3793,"initialValue":{"arguments":[{"id":3789,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"16064:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3790,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3777,"src":"16067:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3791,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3779,"src":"16070:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3788,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3832,3914],"referencedDeclaration":3832,"src":"16054:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:12"},{"condition":{"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:12","subExpression":{"id":3794,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3785,"src":"16087:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3804,"nodeType":"IfStatement","src":"16082:74:12","trueBody":{"id":3803,"nodeType":"Block","src":"16096:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3799,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"16122:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"16122:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3796,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"16110:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"16110:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3802,"nodeType":"ExpressionStatement","src":"16110:35:12"}]}},{"expression":{"id":3805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3787,"src":"16172:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3783,"id":3806,"nodeType":"Return","src":"16165:13:12"}]},"documentation":{"id":3773,"nodeType":"StructuredDocumentation","src":"15247:678:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3808,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:12","nodeType":"FunctionDefinition","parameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"b","nameLocation":"15954:1:12","nodeType":"VariableDeclaration","scope":3808,"src":"15946:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3777,"mutability":"mutable","name":"e","nameLocation":"15965:1:12","nodeType":"VariableDeclaration","scope":3808,"src":"15957:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3776,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3779,"mutability":"mutable","name":"m","nameLocation":"15976:1:12","nodeType":"VariableDeclaration","scope":3808,"src":"15968:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:12"},"returnParameters":{"id":3783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3808,"src":"16002:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:12"},"scope":4622,"src":"15930:255:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3831,"nodeType":"Block","src":"17039:1493:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3822,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"17053:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3829,"nodeType":"IfStatement","src":"17049:29:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3827,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3821,"id":3828,"nodeType":"Return","src":"17061:17:12"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:12","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:12"},"nodeType":"YulFunctionCall","src":"17138:11:12"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:12"},"nodeType":"YulFunctionCall","src":"18050:17:12"},"nodeType":"YulExpressionStatement","src":"18050:17:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:12"},"nodeType":"YulFunctionCall","src":"18087:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:12"},"nodeType":"YulFunctionCall","src":"18080:28:12"},"nodeType":"YulExpressionStatement","src":"18080:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:12","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:12"},"nodeType":"YulFunctionCall","src":"18128:14:12"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:12","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:12"},"nodeType":"YulFunctionCall","src":"18121:28:12"},"nodeType":"YulExpressionStatement","src":"18121:28:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:12","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:12"},"nodeType":"YulFunctionCall","src":"18169:14:12"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:12"},"nodeType":"YulFunctionCall","src":"18162:25:12"},"nodeType":"YulExpressionStatement","src":"18162:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:12","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:12"},"nodeType":"YulFunctionCall","src":"18207:14:12"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:12"},"nodeType":"YulFunctionCall","src":"18200:25:12"},"nodeType":"YulExpressionStatement","src":"18200:25:12"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:12","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:12"},"nodeType":"YulFunctionCall","src":"18245:14:12"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:12"},"nodeType":"YulFunctionCall","src":"18238:25:12"},"nodeType":"YulExpressionStatement","src":"18238:25:12"},{"nodeType":"YulAssignment","src":"18425:57:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:12"},"nodeType":"YulFunctionCall","src":"18447:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:12","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:12","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:12","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:12","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:12"},"nodeType":"YulFunctionCall","src":"18436:46:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:12"}]},{"nodeType":"YulAssignment","src":"18495:21:12","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:12","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:12"},"nodeType":"YulFunctionCall","src":"18505:11:12"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3811,"isOffset":false,"isSlot":false,"src":"18185:1:12","valueSize":1},{"declaration":3813,"isOffset":false,"isSlot":false,"src":"18223:1:12","valueSize":1},{"declaration":3815,"isOffset":false,"isSlot":false,"src":"18261:1:12","valueSize":1},{"declaration":3820,"isOffset":false,"isSlot":false,"src":"18495:6:12","valueSize":1},{"declaration":3818,"isOffset":false,"isSlot":false,"src":"18425:7:12","valueSize":1}],"flags":["memory-safe"],"id":3830,"nodeType":"InlineAssembly","src":"17088:1438:12"}]},"documentation":{"id":3809,"nodeType":"StructuredDocumentation","src":"16191:738:12","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3832,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:12","nodeType":"FunctionDefinition","parameters":{"id":3816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"b","nameLocation":"16961:1:12","nodeType":"VariableDeclaration","scope":3832,"src":"16953:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"e","nameLocation":"16972:1:12","nodeType":"VariableDeclaration","scope":3832,"src":"16964:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3812,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3815,"mutability":"mutable","name":"m","nameLocation":"16983:1:12","nodeType":"VariableDeclaration","scope":3832,"src":"16975:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:12"},"returnParameters":{"id":3821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3818,"mutability":"mutable","name":"success","nameLocation":"17014:7:12","nodeType":"VariableDeclaration","scope":3832,"src":"17009:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3817,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3820,"mutability":"mutable","name":"result","nameLocation":"17031:6:12","nodeType":"VariableDeclaration","scope":3832,"src":"17023:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3819,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:12"},"scope":4622,"src":"16934:1598:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3867,"nodeType":"Block","src":"18729:179:12","statements":[{"assignments":[3845,3847],"declarations":[{"constant":false,"id":3845,"mutability":"mutable","name":"success","nameLocation":"18745:7:12","nodeType":"VariableDeclaration","scope":3867,"src":"18740:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3844,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"result","nameLocation":"18767:6:12","nodeType":"VariableDeclaration","scope":3867,"src":"18754:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3846,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3853,"initialValue":{"arguments":[{"id":3849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"18787:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3850,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3837,"src":"18790:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3851,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3839,"src":"18793:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3848,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3832,3914],"referencedDeclaration":3914,"src":"18777:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:12"},{"condition":{"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:12","subExpression":{"id":3854,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"18810:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3864,"nodeType":"IfStatement","src":"18805:74:12","trueBody":{"id":3863,"nodeType":"Block","src":"18819:60:12","statements":[{"expression":{"arguments":[{"expression":{"id":3859,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"18845:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:12","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1530,"src":"18845:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3856,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"18833:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1563_$","typeString":"type(library Panic)"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:12","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"18833:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3862,"nodeType":"ExpressionStatement","src":"18833:35:12"}]}},{"expression":{"id":3865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"18895:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3843,"id":3866,"nodeType":"Return","src":"18888:13:12"}]},"documentation":{"id":3833,"nodeType":"StructuredDocumentation","src":"18538:85:12","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3868,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:12","nodeType":"FunctionDefinition","parameters":{"id":3840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"b","nameLocation":"18657:1:12","nodeType":"VariableDeclaration","scope":3868,"src":"18644:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3834,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3837,"mutability":"mutable","name":"e","nameLocation":"18673:1:12","nodeType":"VariableDeclaration","scope":3868,"src":"18660:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3836,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"m","nameLocation":"18689:1:12","nodeType":"VariableDeclaration","scope":3868,"src":"18676:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3838,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:12"},"returnParameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3868,"src":"18715:12:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3841,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:12"},"scope":4622,"src":"18628:280:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3913,"nodeType":"Block","src":"19162:771:12","statements":[{"condition":{"arguments":[{"id":3883,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"19187:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3882,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"19176:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3892,"nodeType":"IfStatement","src":"19172:47:12","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3886,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3881,"id":3891,"nodeType":"Return","src":"19191:28:12"}},{"assignments":[3894],"declarations":[{"constant":false,"id":3894,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:12","nodeType":"VariableDeclaration","scope":3913,"src":"19230:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3897,"initialValue":{"expression":{"id":3895,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"19245:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:12","memberName":"length","nodeType":"MemberAccess","src":"19245:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:12"},{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"19335:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3901,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"19361:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:12","memberName":"length","nodeType":"MemberAccess","src":"19361:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3903,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"19371:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:12","memberName":"length","nodeType":"MemberAccess","src":"19371:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3905,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3894,"src":"19381:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3906,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"19387:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3907,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"19390:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3908,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3875,"src":"19393:1:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3899,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3911,"nodeType":"ExpressionStatement","src":"19335:60:12"},{"AST":{"nodeType":"YulBlock","src":"19431:496:12","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:12","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:12"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:12"},"nodeType":"YulFunctionCall","src":"19460:17:12"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:12","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:12"},"nodeType":"YulFunctionCall","src":"19589:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:12","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:12"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:12"},"nodeType":"YulFunctionCall","src":"19611:13:12"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:12"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:12"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:12"},"nodeType":"YulFunctionCall","src":"19578:62:12"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:12"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:12"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:12"},"nodeType":"YulFunctionCall","src":"19789:20:12"},"nodeType":"YulExpressionStatement","src":"19789:20:12"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:12","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:12"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:12"},"nodeType":"YulFunctionCall","src":"19898:18:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:12"},"nodeType":"YulFunctionCall","src":"19885:32:12"},"nodeType":"YulExpressionStatement","src":"19885:32:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3894,"isOffset":false,"isSlot":false,"src":"19635:4:12","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"19804:4:12","valueSize":1},{"declaration":3894,"isOffset":false,"isSlot":false,"src":"19911:4:12","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"19464:6:12","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"19617:6:12","valueSize":1},{"declaration":3880,"isOffset":false,"isSlot":false,"src":"19796:6:12","valueSize":1},{"declaration":3878,"isOffset":false,"isSlot":false,"src":"19567:7:12","valueSize":1}],"flags":["memory-safe"],"id":3912,"nodeType":"InlineAssembly","src":"19406:521:12"}]},"documentation":{"id":3869,"nodeType":"StructuredDocumentation","src":"18914:88:12","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3914,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:12","nodeType":"FunctionDefinition","parameters":{"id":3876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"b","nameLocation":"19048:1:12","nodeType":"VariableDeclaration","scope":3914,"src":"19035:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3870,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"e","nameLocation":"19072:1:12","nodeType":"VariableDeclaration","scope":3914,"src":"19059:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3872,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3875,"mutability":"mutable","name":"m","nameLocation":"19096:1:12","nodeType":"VariableDeclaration","scope":3914,"src":"19083:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3874,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:12"},"returnParameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"success","nameLocation":"19132:7:12","nodeType":"VariableDeclaration","scope":3914,"src":"19127:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3877,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"result","nameLocation":"19154:6:12","nodeType":"VariableDeclaration","scope":3914,"src":"19141:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3879,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:12"},"scope":4622,"src":"19007:926:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3946,"nodeType":"Block","src":"20088:176:12","statements":[{"body":{"id":3942,"nodeType":"Block","src":"20145:92:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3933,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"20163:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3935,"indexExpression":{"id":3934,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"20173:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3941,"nodeType":"IfStatement","src":"20159:68:12","trueBody":{"id":3940,"nodeType":"Block","src":"20182:45:12","statements":[{"expression":{"hexValue":"66616c7365","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3921,"id":3939,"nodeType":"Return","src":"20200:12:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3926,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"20118:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3927,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"20122:9:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:12","memberName":"length","nodeType":"MemberAccess","src":"20122:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3943,"initializationExpression":{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"i","nameLocation":"20111:1:12","nodeType":"VariableDeclaration","scope":3943,"src":"20103:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3925,"initialValue":{"hexValue":"30","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:12"},"loopExpression":{"expression":{"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:12","subExpression":{"id":3930,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"20142:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3932,"nodeType":"ExpressionStatement","src":"20140:3:12"},"nodeType":"ForStatement","src":"20098:139:12"},{"expression":{"hexValue":"74727565","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3921,"id":3945,"nodeType":"Return","src":"20246:11:12"}]},"documentation":{"id":3915,"nodeType":"StructuredDocumentation","src":"19939:72:12","text":" @dev Returns whether the provided byte array is zero."},"id":3947,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:12","nodeType":"FunctionDefinition","parameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:12","nodeType":"VariableDeclaration","scope":3947,"src":"20036:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3916,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:12"},"returnParameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3947,"src":"20082:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3919,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:12"},"scope":4622,"src":"20016:248:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4165,"nodeType":"Block","src":"20624:5124:12","statements":[{"id":4164,"nodeType":"UncheckedBlock","src":"20634:5108:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"20728:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3961,"nodeType":"IfStatement","src":"20724:53:12","trueBody":{"id":3960,"nodeType":"Block","src":"20736:41:12","statements":[{"expression":{"id":3958,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"20761:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3954,"id":3959,"nodeType":"Return","src":"20754:8:12"}]}},{"assignments":[3963],"declarations":[{"constant":false,"id":3963,"mutability":"mutable","name":"aa","nameLocation":"21712:2:12","nodeType":"VariableDeclaration","scope":4164,"src":"21704:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3965,"initialValue":{"id":3964,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"21717:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:12"},{"assignments":[3967],"declarations":[{"constant":false,"id":3967,"mutability":"mutable","name":"xn","nameLocation":"21740:2:12","nodeType":"VariableDeclaration","scope":4164,"src":"21732:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3969,"initialValue":{"hexValue":"31","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"21765:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3985,"nodeType":"IfStatement","src":"21761:92:12","trueBody":{"id":3984,"nodeType":"Block","src":"21783:70:12","statements":[{"expression":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3976,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"21801:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:12","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3979,"nodeType":"ExpressionStatement","src":"21801:10:12"},{"expression":{"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3980,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"21829:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3983,"nodeType":"ExpressionStatement","src":"21829:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"21870:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3990,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4001,"nodeType":"IfStatement","src":"21866:90:12","trueBody":{"id":4000,"nodeType":"Block","src":"21887:69:12","statements":[{"expression":{"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3992,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"21905:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3995,"nodeType":"ExpressionStatement","src":"21905:9:12"},{"expression":{"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3996,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"21932:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3999,"nodeType":"ExpressionStatement","src":"21932:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"21973:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4017,"nodeType":"IfStatement","src":"21969:90:12","trueBody":{"id":4016,"nodeType":"Block","src":"21990:69:12","statements":[{"expression":{"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4008,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"22008:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4011,"nodeType":"ExpressionStatement","src":"22008:9:12"},{"expression":{"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4012,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"22035:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4015,"nodeType":"ExpressionStatement","src":"22035:9:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4018,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"22076:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:12","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4033,"nodeType":"IfStatement","src":"22072:89:12","trueBody":{"id":4032,"nodeType":"Block","src":"22093:68:12","statements":[{"expression":{"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4024,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"22111:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4027,"nodeType":"ExpressionStatement","src":"22111:9:12"},{"expression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4028,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"22138:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4031,"nodeType":"ExpressionStatement","src":"22138:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4034,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"22178:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:12","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4049,"nodeType":"IfStatement","src":"22174:87:12","trueBody":{"id":4048,"nodeType":"Block","src":"22194:67:12","statements":[{"expression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4040,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"22212:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4043,"nodeType":"ExpressionStatement","src":"22212:8:12"},{"expression":{"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4044,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"22238:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4047,"nodeType":"ExpressionStatement","src":"22238:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4050,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"22278:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4065,"nodeType":"IfStatement","src":"22274:87:12","trueBody":{"id":4064,"nodeType":"Block","src":"22294:67:12","statements":[{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4056,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"22312:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4059,"nodeType":"ExpressionStatement","src":"22312:8:12"},{"expression":{"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4060,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"22338:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4063,"nodeType":"ExpressionStatement","src":"22338:8:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4066,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"22378:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4077,"nodeType":"IfStatement","src":"22374:61:12","trueBody":{"id":4076,"nodeType":"Block","src":"22394:41:12","statements":[{"expression":{"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4072,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"22412:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4075,"nodeType":"ExpressionStatement","src":"22412:8:12"}]}},{"expression":{"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4078,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"22855:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4080,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"22865:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4082,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4086,"nodeType":"ExpressionStatement","src":"22855:18:12"},{"expression":{"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4087,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24760:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4088,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24766:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4089,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"24771:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4090,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24775:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4097,"nodeType":"ExpressionStatement","src":"24760:23:12"},{"expression":{"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4098,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24869:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24875:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"24880:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4101,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24884:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"nodeType":"ExpressionStatement","src":"24869:23:12"},{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4109,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24980:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24986:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"24991:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4112,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"24995:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4119,"nodeType":"ExpressionStatement","src":"24980:23:12"},{"expression":{"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4120,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25089:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4121,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25095:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"25100:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4123,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25104:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4130,"nodeType":"ExpressionStatement","src":"25089:23:12"},{"expression":{"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4131,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25199:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4132,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25205:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"25210:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4134,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25214:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4141,"nodeType":"ExpressionStatement","src":"25199:23:12"},{"expression":{"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4142,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25309:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4143,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25315:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4144,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"25320:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4145,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25324:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4148,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4152,"nodeType":"ExpressionStatement","src":"25309:23:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4153,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25698:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4156,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25719:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4157,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"25724:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4158,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3967,"src":"25728:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4154,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"25703:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"25703:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3954,"id":4163,"nodeType":"Return","src":"25691:40:12"}]}]},"documentation":{"id":3948,"nodeType":"StructuredDocumentation","src":"20270:292:12","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4166,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:12","nodeType":"FunctionDefinition","parameters":{"id":3951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3950,"mutability":"mutable","name":"a","nameLocation":"20589:1:12","nodeType":"VariableDeclaration","scope":4166,"src":"20581:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3949,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:12"},"returnParameters":{"id":3954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4166,"src":"20615:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3952,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:12"},"scope":4622,"src":"20567:5181:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4199,"nodeType":"Block","src":"25921:171:12","statements":[{"id":4198,"nodeType":"UncheckedBlock","src":"25931:155:12","statements":[{"assignments":[4178],"declarations":[{"constant":false,"id":4178,"mutability":"mutable","name":"result","nameLocation":"25963:6:12","nodeType":"VariableDeclaration","scope":4198,"src":"25955:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4182,"initialValue":{"arguments":[{"id":4180,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"25977:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4179,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4166,4200],"referencedDeclaration":4166,"src":"25972:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"26000:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4187,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"26042:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}],"id":4186,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"26025:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3013_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4189,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"26055:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4178,"src":"26064:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"26073:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4184,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"26009:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"26009:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4176,"id":4197,"nodeType":"Return","src":"25993:82:12"}]}]},"documentation":{"id":4167,"nodeType":"StructuredDocumentation","src":"25754:86:12","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4200,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:12","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"a","nameLocation":"25867:1:12","nodeType":"VariableDeclaration","scope":4200,"src":"25859:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4172,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:12","nodeType":"VariableDeclaration","scope":4200,"src":"25870:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"},"typeName":{"id":4171,"nodeType":"UserDefinedTypeName","pathNode":{"id":4170,"name":"Rounding","nameLocations":["25870:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"25870:8:12"},"referencedDeclaration":3013,"src":"25870:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:12"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4200,"src":"25912:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4174,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:12"},"scope":4622,"src":"25845:247:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4290,"nodeType":"Block","src":"26281:2334:12","statements":[{"expression":{"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26363:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"26383:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4209,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"26367:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"26367:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4218,"nodeType":"ExpressionStatement","src":"26363:64:12"},{"expression":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4219,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26503:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4222,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"26525:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4223,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26530:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4220,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"26508:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"26508:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4232,"nodeType":"ExpressionStatement","src":"26503:56:12"},{"expression":{"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4233,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26634:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"26656:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4237,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26661:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4239,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4234,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"26639:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"26639:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4246,"nodeType":"ExpressionStatement","src":"26634:48:12"},{"expression":{"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4247,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26757:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"26779:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4251,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26784:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4253,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4248,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"26762:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"26762:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4260,"nodeType":"ExpressionStatement","src":"26757:44:12"},{"expression":{"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4261,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26874:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4264,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"26896:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4265,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26901:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4262,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"26879:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"26879:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4274,"nodeType":"ExpressionStatement","src":"26874:42:12"},{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4275,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"26988:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"27010:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4279,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"27015:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4281,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4276,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"26993:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"26993:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4288,"nodeType":"ExpressionStatement","src":"26988:41:12"},{"AST":{"nodeType":"YulBlock","src":"28490:119:12","statements":[{"nodeType":"YulAssignment","src":"28504:95:12","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:12"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:12"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:12"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:12"},"nodeType":"YulFunctionCall","src":"28520:9:12"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:12","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:12"},"nodeType":"YulFunctionCall","src":"28515:83:12"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:12"},"nodeType":"YulFunctionCall","src":"28509:90:12"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4206,"isOffset":false,"isSlot":false,"src":"28504:1:12","valueSize":1},{"declaration":4206,"isOffset":false,"isSlot":false,"src":"28512:1:12","valueSize":1},{"declaration":4206,"isOffset":false,"isSlot":false,"src":"28524:1:12","valueSize":1},{"declaration":4203,"isOffset":false,"isSlot":false,"src":"28527:1:12","valueSize":1}],"flags":["memory-safe"],"id":4289,"nodeType":"InlineAssembly","src":"28465:144:12"}]},"documentation":{"id":4201,"nodeType":"StructuredDocumentation","src":"26098:119:12","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4291,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:12","nodeType":"FunctionDefinition","parameters":{"id":4204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"mutability":"mutable","name":"x","nameLocation":"26244:1:12","nodeType":"VariableDeclaration","scope":4291,"src":"26236:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4202,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:12"},"returnParameters":{"id":4207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"r","nameLocation":"26278:1:12","nodeType":"VariableDeclaration","scope":4291,"src":"26270:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:12"},"scope":4622,"src":"26222:2393:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4324,"nodeType":"Block","src":"28848:175:12","statements":[{"id":4323,"nodeType":"UncheckedBlock","src":"28858:159:12","statements":[{"assignments":[4303],"declarations":[{"constant":false,"id":4303,"mutability":"mutable","name":"result","nameLocation":"28890:6:12","nodeType":"VariableDeclaration","scope":4323,"src":"28882:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4307,"initialValue":{"arguments":[{"id":4305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"28904:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4304,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4291,4325],"referencedDeclaration":4291,"src":"28899:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"28931:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4312,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"28973:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}],"id":4311,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"28956:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3013_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4315,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"28991:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"29000:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4309,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"28940:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"28940:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4301,"id":4322,"nodeType":"Return","src":"28924:82:12"}]}]},"documentation":{"id":4292,"nodeType":"StructuredDocumentation","src":"28621:142:12","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4325,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:12","nodeType":"FunctionDefinition","parameters":{"id":4298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4294,"mutability":"mutable","name":"value","nameLocation":"28790:5:12","nodeType":"VariableDeclaration","scope":4325,"src":"28782:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4297,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:12","nodeType":"VariableDeclaration","scope":4325,"src":"28797:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"},"typeName":{"id":4296,"nodeType":"UserDefinedTypeName","pathNode":{"id":4295,"name":"Rounding","nameLocations":["28797:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"28797:8:12"},"referencedDeclaration":3013,"src":"28797:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:12"},"returnParameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4325,"src":"28839:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:12"},"scope":4622,"src":"28768:255:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4453,"nodeType":"Block","src":"29216:854:12","statements":[{"assignments":[4334],"declarations":[{"constant":false,"id":4334,"mutability":"mutable","name":"result","nameLocation":"29234:6:12","nodeType":"VariableDeclaration","scope":4453,"src":"29226:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4336,"initialValue":{"hexValue":"30","id":4335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:12"},{"id":4450,"nodeType":"UncheckedBlock","src":"29254:787:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29282:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4353,"nodeType":"IfStatement","src":"29278:103:12","trueBody":{"id":4352,"nodeType":"Block","src":"29301:80:12","statements":[{"expression":{"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29319:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4347,"nodeType":"ExpressionStatement","src":"29319:17:12"},{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4348,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"29354:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4351,"nodeType":"ExpressionStatement","src":"29354:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29398:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4370,"nodeType":"IfStatement","src":"29394:103:12","trueBody":{"id":4369,"nodeType":"Block","src":"29417:80:12","statements":[{"expression":{"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29435:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4364,"nodeType":"ExpressionStatement","src":"29435:17:12"},{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4365,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"29470:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"29470:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29514:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4387,"nodeType":"IfStatement","src":"29510:103:12","trueBody":{"id":4386,"nodeType":"Block","src":"29533:80:12","statements":[{"expression":{"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29551:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:12","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4381,"nodeType":"ExpressionStatement","src":"29551:17:12"},{"expression":{"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4382,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"29586:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:12","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4385,"nodeType":"ExpressionStatement","src":"29586:12:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29630:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4404,"nodeType":"IfStatement","src":"29626:100:12","trueBody":{"id":4403,"nodeType":"Block","src":"29648:78:12","statements":[{"expression":{"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29666:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4398,"nodeType":"ExpressionStatement","src":"29666:16:12"},{"expression":{"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4399,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"29700:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:12","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4402,"nodeType":"ExpressionStatement","src":"29700:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4405,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29743:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4421,"nodeType":"IfStatement","src":"29739:100:12","trueBody":{"id":4420,"nodeType":"Block","src":"29761:78:12","statements":[{"expression":{"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29779:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4415,"nodeType":"ExpressionStatement","src":"29779:16:12"},{"expression":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4416,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"29813:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4419,"nodeType":"ExpressionStatement","src":"29813:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29856:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4438,"nodeType":"IfStatement","src":"29852:100:12","trueBody":{"id":4437,"nodeType":"Block","src":"29874:78:12","statements":[{"expression":{"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29892:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4432,"nodeType":"ExpressionStatement","src":"29892:16:12"},{"expression":{"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4433,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"29926:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4436,"nodeType":"ExpressionStatement","src":"29926:11:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"29969:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4449,"nodeType":"IfStatement","src":"29965:66:12","trueBody":{"id":4448,"nodeType":"Block","src":"29987:44:12","statements":[{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"30005:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4447,"nodeType":"ExpressionStatement","src":"30005:11:12"}]}}]},{"expression":{"id":4451,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4334,"src":"30057:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4332,"id":4452,"nodeType":"Return","src":"30050:13:12"}]},"documentation":{"id":4326,"nodeType":"StructuredDocumentation","src":"29029:120:12","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4454,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:12","nodeType":"FunctionDefinition","parameters":{"id":4329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"value","nameLocation":"29177:5:12","nodeType":"VariableDeclaration","scope":4454,"src":"29169:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:12"},"returnParameters":{"id":4332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4454,"src":"29207:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4330,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:12"},"scope":4622,"src":"29154:916:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4487,"nodeType":"Block","src":"30305:177:12","statements":[{"id":4486,"nodeType":"UncheckedBlock","src":"30315:161:12","statements":[{"assignments":[4466],"declarations":[{"constant":false,"id":4466,"mutability":"mutable","name":"result","nameLocation":"30347:6:12","nodeType":"VariableDeclaration","scope":4486,"src":"30339:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4470,"initialValue":{"arguments":[{"id":4468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"30362:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4467,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4454,4488],"referencedDeclaration":4454,"src":"30356:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"30389:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4475,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"30431:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}],"id":4474,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"30414:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3013_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4478,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"30450:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"30459:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4472,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"30398:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"30398:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4464,"id":4485,"nodeType":"Return","src":"30382:83:12"}]}]},"documentation":{"id":4455,"nodeType":"StructuredDocumentation","src":"30076:143:12","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4488,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:12","nodeType":"FunctionDefinition","parameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"mutability":"mutable","name":"value","nameLocation":"30247:5:12","nodeType":"VariableDeclaration","scope":4488,"src":"30239:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4460,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:12","nodeType":"VariableDeclaration","scope":4488,"src":"30254:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"},"typeName":{"id":4459,"nodeType":"UserDefinedTypeName","pathNode":{"id":4458,"name":"Rounding","nameLocations":["30254:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"30254:8:12"},"referencedDeclaration":3013,"src":"30254:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:12"},"returnParameters":{"id":4464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4488,"src":"30296:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:12"},"scope":4622,"src":"30224:258:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4564,"nodeType":"Block","src":"30800:675:12","statements":[{"expression":{"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"30882:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"30902:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:12","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4497,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"30886:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"30886:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:12","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4506,"nodeType":"ExpressionStatement","src":"30882:64:12"},{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4507,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"31022:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"31044:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4511,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"31049:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:12","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4508,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"31027:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"31027:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:12","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4520,"nodeType":"ExpressionStatement","src":"31022:56:12"},{"expression":{"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4521,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"31153:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"31175:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4525,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"31180:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4527,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:12","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4522,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"31158:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"31158:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4534,"nodeType":"ExpressionStatement","src":"31153:48:12"},{"expression":{"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4535,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"31276:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4538,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"31298:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4539,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"31303:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4541,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:12","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4536,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"31281:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"31281:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4548,"nodeType":"ExpressionStatement","src":"31276:44:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4549,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"31426:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4552,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4555,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4491,"src":"31453:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4556,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"31458:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4558,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:12","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4553,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"31436:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"31436:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4495,"id":4563,"nodeType":"Return","src":"31418:50:12"}]},"documentation":{"id":4489,"nodeType":"StructuredDocumentation","src":"30488:246:12","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4565,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:12","nodeType":"FunctionDefinition","parameters":{"id":4492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4491,"mutability":"mutable","name":"x","nameLocation":"30763:1:12","nodeType":"VariableDeclaration","scope":4565,"src":"30755:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4490,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:12"},"returnParameters":{"id":4495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4494,"mutability":"mutable","name":"r","nameLocation":"30797:1:12","nodeType":"VariableDeclaration","scope":4565,"src":"30789:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:12"},"scope":4622,"src":"30739:736:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4601,"nodeType":"Block","src":"31712:184:12","statements":[{"id":4600,"nodeType":"UncheckedBlock","src":"31722:168:12","statements":[{"assignments":[4577],"declarations":[{"constant":false,"id":4577,"mutability":"mutable","name":"result","nameLocation":"31754:6:12","nodeType":"VariableDeclaration","scope":4600,"src":"31746:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4581,"initialValue":{"arguments":[{"id":4579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"31770:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4578,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4565,4602],"referencedDeclaration":4565,"src":"31763:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"31797:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4586,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4571,"src":"31839:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}],"id":4585,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"31822:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3013_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4589,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"31858:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:12","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"31873:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4583,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"31806:8:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:12","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"31806:15:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4575,"id":4599,"nodeType":"Return","src":"31790:89:12"}]}]},"documentation":{"id":4566,"nodeType":"StructuredDocumentation","src":"31481:144:12","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4602,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:12","nodeType":"FunctionDefinition","parameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"value","nameLocation":"31654:5:12","nodeType":"VariableDeclaration","scope":4602,"src":"31646:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4571,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:12","nodeType":"VariableDeclaration","scope":4602,"src":"31661:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"},"typeName":{"id":4570,"nodeType":"UserDefinedTypeName","pathNode":{"id":4569,"name":"Rounding","nameLocations":["31661:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"31661:8:12"},"referencedDeclaration":3013,"src":"31661:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:12"},"returnParameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4602,"src":"31703:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:12"},"scope":4622,"src":"31630:266:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4620,"nodeType":"Block","src":"32094:48:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4613,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4606,"src":"32117:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}],"id":4612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4611,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:12","typeDescriptions":{}}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4610,"id":4619,"nodeType":"Return","src":"32104:31:12"}]},"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"31902:113:12","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4621,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:12","nodeType":"FunctionDefinition","parameters":{"id":4607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4606,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:12","nodeType":"VariableDeclaration","scope":4621,"src":"32046:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"},"typeName":{"id":4605,"nodeType":"UserDefinedTypeName","pathNode":{"id":4604,"name":"Rounding","nameLocations":["32046:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":3013,"src":"32046:8:12"},"referencedDeclaration":3013,"src":"32046:8:12","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3013","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:12"},"returnParameters":{"id":4610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4621,"src":"32088:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4608,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:12"},"scope":4622,"src":"32020:122:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4623,"src":"281:31863:12","usedErrors":[],"usedEvents":[]}],"src":"103:32042:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6387]},"id":6388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4624,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4625,"nodeType":"StructuredDocumentation","src":"218:550:13","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6387,"linearizedBaseContracts":[6387],"name":"SafeCast","nameLocation":"777:8:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4626,"nodeType":"StructuredDocumentation","src":"792:68:13","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4632,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:13","nodeType":"ErrorDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"bits","nameLocation":"908:4:13","nodeType":"VariableDeclaration","scope":4632,"src":"902:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4627,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"value","nameLocation":"922:5:13","nodeType":"VariableDeclaration","scope":4632,"src":"914:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:13"},"src":"865:64:13"},{"documentation":{"id":4633,"nodeType":"StructuredDocumentation","src":"935:75:13","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4637,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:13","nodeType":"ErrorDefinition","parameters":{"id":4636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4635,"mutability":"mutable","name":"value","nameLocation":"1056:5:13","nodeType":"VariableDeclaration","scope":4637,"src":"1049:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4634,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:13"},"src":"1015:48:13"},{"documentation":{"id":4638,"nodeType":"StructuredDocumentation","src":"1069:67:13","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4644,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:13","nodeType":"ErrorDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4640,"mutability":"mutable","name":"bits","nameLocation":"1183:4:13","nodeType":"VariableDeclaration","scope":4644,"src":"1177:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4639,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"value","nameLocation":"1196:5:13","nodeType":"VariableDeclaration","scope":4644,"src":"1189:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4641,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:13"},"src":"1141:62:13"},{"documentation":{"id":4645,"nodeType":"StructuredDocumentation","src":"1209:75:13","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4649,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:13","nodeType":"ErrorDefinition","parameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4647,"mutability":"mutable","name":"value","nameLocation":"1331:5:13","nodeType":"VariableDeclaration","scope":4649,"src":"1323:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:13"},"src":"1289:49:13"},{"body":{"id":4676,"nodeType":"Block","src":"1695:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"1709:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4659,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4658,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:13","memberName":"max","nodeType":"MemberAccess","src":"1717:17:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4670,"nodeType":"IfStatement","src":"1705:105:13","trueBody":{"id":4669,"nodeType":"Block","src":"1736:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"1793:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4664,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"1757:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4668,"nodeType":"RevertStatement","src":"1750:49:13"}]}},{"expression":{"arguments":[{"id":4673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"1834:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4671,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:13","typeDescriptions":{}}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4656,"id":4675,"nodeType":"Return","src":"1819:21:13"}]},"documentation":{"id":4650,"nodeType":"StructuredDocumentation","src":"1344:280:13","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4677,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:13","nodeType":"FunctionDefinition","parameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"mutability":"mutable","name":"value","nameLocation":"1656:5:13","nodeType":"VariableDeclaration","scope":4677,"src":"1648:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:13"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4677,"src":"1686:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4654,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:13","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:13"},"scope":6387,"src":"1629:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4704,"nodeType":"Block","src":"2204:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"2218:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4687,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4686,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:13","memberName":"max","nodeType":"MemberAccess","src":"2226:17:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4698,"nodeType":"IfStatement","src":"2214:105:13","trueBody":{"id":4697,"nodeType":"Block","src":"2245:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"2302:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4692,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"2266:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4696,"nodeType":"RevertStatement","src":"2259:49:13"}]}},{"expression":{"arguments":[{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4680,"src":"2343:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4699,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:13","typeDescriptions":{}}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4684,"id":4703,"nodeType":"Return","src":"2328:21:13"}]},"documentation":{"id":4678,"nodeType":"StructuredDocumentation","src":"1853:280:13","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4705,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:13","nodeType":"FunctionDefinition","parameters":{"id":4681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4680,"mutability":"mutable","name":"value","nameLocation":"2165:5:13","nodeType":"VariableDeclaration","scope":4705,"src":"2157:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:13"},"returnParameters":{"id":4684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4705,"src":"2195:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4682,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:13","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:13"},"scope":6387,"src":"2138:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4732,"nodeType":"Block","src":"2713:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"2727:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4715,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4714,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:13","memberName":"max","nodeType":"MemberAccess","src":"2735:17:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4726,"nodeType":"IfStatement","src":"2723:105:13","trueBody":{"id":4725,"nodeType":"Block","src":"2754:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"2811:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4720,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"2775:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4724,"nodeType":"RevertStatement","src":"2768:49:13"}]}},{"expression":{"arguments":[{"id":4729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"2852:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4727,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:13","typeDescriptions":{}}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4712,"id":4731,"nodeType":"Return","src":"2837:21:13"}]},"documentation":{"id":4706,"nodeType":"StructuredDocumentation","src":"2362:280:13","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4733,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:13","nodeType":"FunctionDefinition","parameters":{"id":4709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4708,"mutability":"mutable","name":"value","nameLocation":"2674:5:13","nodeType":"VariableDeclaration","scope":4733,"src":"2666:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:13"},"returnParameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4733,"src":"2704:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4710,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:13","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:13"},"scope":6387,"src":"2647:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4760,"nodeType":"Block","src":"3222:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"3236:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4743,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4742,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:13","memberName":"max","nodeType":"MemberAccess","src":"3244:17:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4754,"nodeType":"IfStatement","src":"3232:105:13","trueBody":{"id":4753,"nodeType":"Block","src":"3263:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"3320:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4748,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"3284:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4752,"nodeType":"RevertStatement","src":"3277:49:13"}]}},{"expression":{"arguments":[{"id":4757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4736,"src":"3361:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4755,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:13","typeDescriptions":{}}},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4740,"id":4759,"nodeType":"Return","src":"3346:21:13"}]},"documentation":{"id":4734,"nodeType":"StructuredDocumentation","src":"2871:280:13","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4761,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:13","nodeType":"FunctionDefinition","parameters":{"id":4737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4736,"mutability":"mutable","name":"value","nameLocation":"3183:5:13","nodeType":"VariableDeclaration","scope":4761,"src":"3175:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4735,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:13"},"returnParameters":{"id":4740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4761,"src":"3213:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4738,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:13","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:13"},"scope":6387,"src":"3156:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4788,"nodeType":"Block","src":"3731:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"3745:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4771,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4770,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:13","memberName":"max","nodeType":"MemberAccess","src":"3753:17:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4782,"nodeType":"IfStatement","src":"3741:105:13","trueBody":{"id":4781,"nodeType":"Block","src":"3772:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"3829:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4776,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"3793:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4780,"nodeType":"RevertStatement","src":"3786:49:13"}]}},{"expression":{"arguments":[{"id":4785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"3870:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4783,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:13","typeDescriptions":{}}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4768,"id":4787,"nodeType":"Return","src":"3855:21:13"}]},"documentation":{"id":4762,"nodeType":"StructuredDocumentation","src":"3380:280:13","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4789,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:13","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"value","nameLocation":"3692:5:13","nodeType":"VariableDeclaration","scope":4789,"src":"3684:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4763,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:13"},"returnParameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4789,"src":"3722:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4766,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:13","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:13"},"scope":6387,"src":"3665:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4816,"nodeType":"Block","src":"4240:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"4254:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4799,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4798,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:13","memberName":"max","nodeType":"MemberAccess","src":"4262:17:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4810,"nodeType":"IfStatement","src":"4250:105:13","trueBody":{"id":4809,"nodeType":"Block","src":"4281:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"4338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4804,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"4302:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4808,"nodeType":"RevertStatement","src":"4295:49:13"}]}},{"expression":{"arguments":[{"id":4813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4792,"src":"4379:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4811,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:13","typeDescriptions":{}}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4796,"id":4815,"nodeType":"Return","src":"4364:21:13"}]},"documentation":{"id":4790,"nodeType":"StructuredDocumentation","src":"3889:280:13","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4817,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:13","nodeType":"FunctionDefinition","parameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"value","nameLocation":"4201:5:13","nodeType":"VariableDeclaration","scope":4817,"src":"4193:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:13"},"returnParameters":{"id":4796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4817,"src":"4231:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4794,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:13","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:13"},"scope":6387,"src":"4174:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4844,"nodeType":"Block","src":"4749:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"4763:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4827,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4826,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:13","memberName":"max","nodeType":"MemberAccess","src":"4771:17:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4838,"nodeType":"IfStatement","src":"4759:105:13","trueBody":{"id":4837,"nodeType":"Block","src":"4790:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"4847:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4832,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"4811:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4836,"nodeType":"RevertStatement","src":"4804:49:13"}]}},{"expression":{"arguments":[{"id":4841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"4888:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4839,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:13","typeDescriptions":{}}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4824,"id":4843,"nodeType":"Return","src":"4873:21:13"}]},"documentation":{"id":4818,"nodeType":"StructuredDocumentation","src":"4398:280:13","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4845,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:13","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"value","nameLocation":"4710:5:13","nodeType":"VariableDeclaration","scope":4845,"src":"4702:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:13"},"returnParameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4845,"src":"4740:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4822,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:13","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:13"},"scope":6387,"src":"4683:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4872,"nodeType":"Block","src":"5258:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"5272:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4855,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4854,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:13","memberName":"max","nodeType":"MemberAccess","src":"5280:17:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4866,"nodeType":"IfStatement","src":"5268:105:13","trueBody":{"id":4865,"nodeType":"Block","src":"5299:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"5356:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4860,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"5320:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4864,"nodeType":"RevertStatement","src":"5313:49:13"}]}},{"expression":{"arguments":[{"id":4869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4848,"src":"5397:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4867,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:13","typeDescriptions":{}}},"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4852,"id":4871,"nodeType":"Return","src":"5382:21:13"}]},"documentation":{"id":4846,"nodeType":"StructuredDocumentation","src":"4907:280:13","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4873,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:13","nodeType":"FunctionDefinition","parameters":{"id":4849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4848,"mutability":"mutable","name":"value","nameLocation":"5219:5:13","nodeType":"VariableDeclaration","scope":4873,"src":"5211:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4847,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:13"},"returnParameters":{"id":4852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4873,"src":"5249:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4850,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:13","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:13"},"scope":6387,"src":"5192:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4900,"nodeType":"Block","src":"5767:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"5781:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4883,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4882,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:13","memberName":"max","nodeType":"MemberAccess","src":"5789:17:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4894,"nodeType":"IfStatement","src":"5777:105:13","trueBody":{"id":4893,"nodeType":"Block","src":"5808:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"5865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4888,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"5829:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4892,"nodeType":"RevertStatement","src":"5822:49:13"}]}},{"expression":{"arguments":[{"id":4897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"5906:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4895,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:13","typeDescriptions":{}}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4880,"id":4899,"nodeType":"Return","src":"5891:21:13"}]},"documentation":{"id":4874,"nodeType":"StructuredDocumentation","src":"5416:280:13","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4901,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:13","nodeType":"FunctionDefinition","parameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"value","nameLocation":"5728:5:13","nodeType":"VariableDeclaration","scope":4901,"src":"5720:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4875,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:13"},"returnParameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4901,"src":"5758:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4878,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:13","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:13"},"scope":6387,"src":"5701:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4928,"nodeType":"Block","src":"6276:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"6290:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4911,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4910,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:13","memberName":"max","nodeType":"MemberAccess","src":"6298:17:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4922,"nodeType":"IfStatement","src":"6286:105:13","trueBody":{"id":4921,"nodeType":"Block","src":"6317:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"6374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4916,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"6338:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4920,"nodeType":"RevertStatement","src":"6331:49:13"}]}},{"expression":{"arguments":[{"id":4925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"6415:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4923,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:13","typeDescriptions":{}}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4908,"id":4927,"nodeType":"Return","src":"6400:21:13"}]},"documentation":{"id":4902,"nodeType":"StructuredDocumentation","src":"5925:280:13","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4929,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:13","nodeType":"FunctionDefinition","parameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"value","nameLocation":"6237:5:13","nodeType":"VariableDeclaration","scope":4929,"src":"6229:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:13"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4929,"src":"6267:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4906,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:13","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:13"},"scope":6387,"src":"6210:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4956,"nodeType":"Block","src":"6785:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"6799:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4939,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4938,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:13","memberName":"max","nodeType":"MemberAccess","src":"6807:17:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4950,"nodeType":"IfStatement","src":"6795:105:13","trueBody":{"id":4949,"nodeType":"Block","src":"6826:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"6883:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4944,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"6847:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4948,"nodeType":"RevertStatement","src":"6840:49:13"}]}},{"expression":{"arguments":[{"id":4953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"6924:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4951,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:13","typeDescriptions":{}}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4936,"id":4955,"nodeType":"Return","src":"6909:21:13"}]},"documentation":{"id":4930,"nodeType":"StructuredDocumentation","src":"6434:280:13","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4957,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:13","nodeType":"FunctionDefinition","parameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4932,"mutability":"mutable","name":"value","nameLocation":"6746:5:13","nodeType":"VariableDeclaration","scope":4957,"src":"6738:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4931,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:13"},"returnParameters":{"id":4936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4957,"src":"6776:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4934,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:13","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:13"},"scope":6387,"src":"6719:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4984,"nodeType":"Block","src":"7294:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"7308:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4967,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4966,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:13","memberName":"max","nodeType":"MemberAccess","src":"7316:17:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4978,"nodeType":"IfStatement","src":"7304:105:13","trueBody":{"id":4977,"nodeType":"Block","src":"7335:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"7392:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4972,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"7356:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4976,"nodeType":"RevertStatement","src":"7349:49:13"}]}},{"expression":{"arguments":[{"id":4981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4960,"src":"7433:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4979,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:13","typeDescriptions":{}}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4964,"id":4983,"nodeType":"Return","src":"7418:21:13"}]},"documentation":{"id":4958,"nodeType":"StructuredDocumentation","src":"6943:280:13","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4985,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:13","nodeType":"FunctionDefinition","parameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"value","nameLocation":"7255:5:13","nodeType":"VariableDeclaration","scope":4985,"src":"7247:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:13"},"returnParameters":{"id":4964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4985,"src":"7285:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4962,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:13","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:13"},"scope":6387,"src":"7228:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5012,"nodeType":"Block","src":"7803:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"7817:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4995,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4994,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:13","memberName":"max","nodeType":"MemberAccess","src":"7825:17:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5006,"nodeType":"IfStatement","src":"7813:105:13","trueBody":{"id":5005,"nodeType":"Block","src":"7844:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"7901:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5000,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"7865:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5004,"nodeType":"RevertStatement","src":"7858:49:13"}]}},{"expression":{"arguments":[{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4988,"src":"7942:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5007,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:13","typeDescriptions":{}}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4992,"id":5011,"nodeType":"Return","src":"7927:21:13"}]},"documentation":{"id":4986,"nodeType":"StructuredDocumentation","src":"7452:280:13","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5013,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:13","nodeType":"FunctionDefinition","parameters":{"id":4989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4988,"mutability":"mutable","name":"value","nameLocation":"7764:5:13","nodeType":"VariableDeclaration","scope":5013,"src":"7756:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:13"},"returnParameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5013,"src":"7794:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4990,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:13","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:13"},"scope":6387,"src":"7737:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5040,"nodeType":"Block","src":"8312:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"8326:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5023,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5022,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:13","memberName":"max","nodeType":"MemberAccess","src":"8334:17:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5034,"nodeType":"IfStatement","src":"8322:105:13","trueBody":{"id":5033,"nodeType":"Block","src":"8353:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"8410:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5028,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"8374:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5032,"nodeType":"RevertStatement","src":"8367:49:13"}]}},{"expression":{"arguments":[{"id":5037,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5016,"src":"8451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5035,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:13","typeDescriptions":{}}},"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5020,"id":5039,"nodeType":"Return","src":"8436:21:13"}]},"documentation":{"id":5014,"nodeType":"StructuredDocumentation","src":"7961:280:13","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5041,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:13","nodeType":"FunctionDefinition","parameters":{"id":5017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5016,"mutability":"mutable","name":"value","nameLocation":"8273:5:13","nodeType":"VariableDeclaration","scope":5041,"src":"8265:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5015,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:13"},"returnParameters":{"id":5020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5041,"src":"8303:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5018,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:13","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:13"},"scope":6387,"src":"8246:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5068,"nodeType":"Block","src":"8821:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"8835:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5051,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5050,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:13","memberName":"max","nodeType":"MemberAccess","src":"8843:17:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5062,"nodeType":"IfStatement","src":"8831:105:13","trueBody":{"id":5061,"nodeType":"Block","src":"8862:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"8919:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5056,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"8883:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5060,"nodeType":"RevertStatement","src":"8876:49:13"}]}},{"expression":{"arguments":[{"id":5065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"8960:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5063,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:13","typeDescriptions":{}}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5048,"id":5067,"nodeType":"Return","src":"8945:21:13"}]},"documentation":{"id":5042,"nodeType":"StructuredDocumentation","src":"8470:280:13","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5069,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:13","nodeType":"FunctionDefinition","parameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5044,"mutability":"mutable","name":"value","nameLocation":"8782:5:13","nodeType":"VariableDeclaration","scope":5069,"src":"8774:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5043,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:13"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5069,"src":"8812:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5046,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:13","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:13"},"scope":6387,"src":"8755:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5096,"nodeType":"Block","src":"9330:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"9344:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5079,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5078,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:13","memberName":"max","nodeType":"MemberAccess","src":"9352:17:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5090,"nodeType":"IfStatement","src":"9340:105:13","trueBody":{"id":5089,"nodeType":"Block","src":"9371:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"9428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5084,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"9392:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5088,"nodeType":"RevertStatement","src":"9385:49:13"}]}},{"expression":{"arguments":[{"id":5093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"9469:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5091,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:13","typeDescriptions":{}}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5076,"id":5095,"nodeType":"Return","src":"9454:21:13"}]},"documentation":{"id":5070,"nodeType":"StructuredDocumentation","src":"8979:280:13","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5097,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:13","nodeType":"FunctionDefinition","parameters":{"id":5073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5072,"mutability":"mutable","name":"value","nameLocation":"9291:5:13","nodeType":"VariableDeclaration","scope":5097,"src":"9283:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5071,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:13"},"returnParameters":{"id":5076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5097,"src":"9321:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5074,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:13"},"scope":6387,"src":"9264:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5124,"nodeType":"Block","src":"9839:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"9853:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5107,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5106,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:13","memberName":"max","nodeType":"MemberAccess","src":"9861:17:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5118,"nodeType":"IfStatement","src":"9849:105:13","trueBody":{"id":5117,"nodeType":"Block","src":"9880:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"9937:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5112,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"9901:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5116,"nodeType":"RevertStatement","src":"9894:49:13"}]}},{"expression":{"arguments":[{"id":5121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5100,"src":"9978:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5119,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:13","typeDescriptions":{}}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5104,"id":5123,"nodeType":"Return","src":"9963:21:13"}]},"documentation":{"id":5098,"nodeType":"StructuredDocumentation","src":"9488:280:13","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5125,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:13","nodeType":"FunctionDefinition","parameters":{"id":5101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5100,"mutability":"mutable","name":"value","nameLocation":"9800:5:13","nodeType":"VariableDeclaration","scope":5125,"src":"9792:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5099,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:13"},"returnParameters":{"id":5104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5125,"src":"9830:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5102,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:13","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:13"},"scope":6387,"src":"9773:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5152,"nodeType":"Block","src":"10348:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"10362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5135,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5134,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:13","memberName":"max","nodeType":"MemberAccess","src":"10370:17:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5146,"nodeType":"IfStatement","src":"10358:105:13","trueBody":{"id":5145,"nodeType":"Block","src":"10389:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"10446:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5140,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"10410:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5144,"nodeType":"RevertStatement","src":"10403:49:13"}]}},{"expression":{"arguments":[{"id":5149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5128,"src":"10487:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5147,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:13","typeDescriptions":{}}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5132,"id":5151,"nodeType":"Return","src":"10472:21:13"}]},"documentation":{"id":5126,"nodeType":"StructuredDocumentation","src":"9997:280:13","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5153,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:13","nodeType":"FunctionDefinition","parameters":{"id":5129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5128,"mutability":"mutable","name":"value","nameLocation":"10309:5:13","nodeType":"VariableDeclaration","scope":5153,"src":"10301:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5127,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:13"},"returnParameters":{"id":5132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5153,"src":"10339:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5130,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:13","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:13"},"scope":6387,"src":"10282:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5180,"nodeType":"Block","src":"10857:152:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"10871:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5163,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5162,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:13","memberName":"max","nodeType":"MemberAccess","src":"10879:17:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5174,"nodeType":"IfStatement","src":"10867:105:13","trueBody":{"id":5173,"nodeType":"Block","src":"10898:74:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"10955:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5168,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"10919:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5172,"nodeType":"RevertStatement","src":"10912:49:13"}]}},{"expression":{"arguments":[{"id":5177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5156,"src":"10996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5175,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:13","typeDescriptions":{}}},"id":5178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5160,"id":5179,"nodeType":"Return","src":"10981:21:13"}]},"documentation":{"id":5154,"nodeType":"StructuredDocumentation","src":"10506:280:13","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5181,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:13","nodeType":"FunctionDefinition","parameters":{"id":5157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5156,"mutability":"mutable","name":"value","nameLocation":"10818:5:13","nodeType":"VariableDeclaration","scope":5181,"src":"10810:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5155,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:13"},"returnParameters":{"id":5160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5181,"src":"10848:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5158,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:13","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:13"},"scope":6387,"src":"10791:218:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5208,"nodeType":"Block","src":"11360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"11374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5191,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5190,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:13","memberName":"max","nodeType":"MemberAccess","src":"11382:16:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5202,"nodeType":"IfStatement","src":"11370:103:13","trueBody":{"id":5201,"nodeType":"Block","src":"11400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"11456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5196,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"11421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5200,"nodeType":"RevertStatement","src":"11414:48:13"}]}},{"expression":{"arguments":[{"id":5205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5184,"src":"11496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5203,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:13","typeDescriptions":{}}},"id":5206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5188,"id":5207,"nodeType":"Return","src":"11482:20:13"}]},"documentation":{"id":5182,"nodeType":"StructuredDocumentation","src":"11015:276:13","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5209,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5184,"mutability":"mutable","name":"value","nameLocation":"11322:5:13","nodeType":"VariableDeclaration","scope":5209,"src":"11314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5183,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:13"},"returnParameters":{"id":5188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5209,"src":"11352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5186,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:13","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:13"},"scope":6387,"src":"11296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5236,"nodeType":"Block","src":"11860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"11874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5219,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5218,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:13","memberName":"max","nodeType":"MemberAccess","src":"11882:16:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5230,"nodeType":"IfStatement","src":"11870:103:13","trueBody":{"id":5229,"nodeType":"Block","src":"11900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"11956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5224,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"11921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5228,"nodeType":"RevertStatement","src":"11914:48:13"}]}},{"expression":{"arguments":[{"id":5233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5212,"src":"11996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5231,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:13","typeDescriptions":{}}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5216,"id":5235,"nodeType":"Return","src":"11982:20:13"}]},"documentation":{"id":5210,"nodeType":"StructuredDocumentation","src":"11515:276:13","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5237,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5212,"mutability":"mutable","name":"value","nameLocation":"11822:5:13","nodeType":"VariableDeclaration","scope":5237,"src":"11814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5211,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:13"},"returnParameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5237,"src":"11852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5214,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:13","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:13"},"scope":6387,"src":"11796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5264,"nodeType":"Block","src":"12360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5245,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"12374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5247,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5246,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:13","memberName":"max","nodeType":"MemberAccess","src":"12382:16:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5258,"nodeType":"IfStatement","src":"12370:103:13","trueBody":{"id":5257,"nodeType":"Block","src":"12400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"12456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5252,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"12421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5256,"nodeType":"RevertStatement","src":"12414:48:13"}]}},{"expression":{"arguments":[{"id":5261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5240,"src":"12496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5259,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:13","typeDescriptions":{}}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5244,"id":5263,"nodeType":"Return","src":"12482:20:13"}]},"documentation":{"id":5238,"nodeType":"StructuredDocumentation","src":"12015:276:13","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5265,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5240,"mutability":"mutable","name":"value","nameLocation":"12322:5:13","nodeType":"VariableDeclaration","scope":5265,"src":"12314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5239,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:13"},"returnParameters":{"id":5244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5265,"src":"12352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5242,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:13","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:13"},"scope":6387,"src":"12296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5292,"nodeType":"Block","src":"12860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5273,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"12874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5275,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5274,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:13","memberName":"max","nodeType":"MemberAccess","src":"12882:16:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5286,"nodeType":"IfStatement","src":"12870:103:13","trueBody":{"id":5285,"nodeType":"Block","src":"12900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"12956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5280,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"12921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5284,"nodeType":"RevertStatement","src":"12914:48:13"}]}},{"expression":{"arguments":[{"id":5289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5268,"src":"12996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5287,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:13","typeDescriptions":{}}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5272,"id":5291,"nodeType":"Return","src":"12982:20:13"}]},"documentation":{"id":5266,"nodeType":"StructuredDocumentation","src":"12515:276:13","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5293,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5268,"mutability":"mutable","name":"value","nameLocation":"12822:5:13","nodeType":"VariableDeclaration","scope":5293,"src":"12814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5267,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:13"},"returnParameters":{"id":5272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5271,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5293,"src":"12852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5270,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:13","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:13"},"scope":6387,"src":"12796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5320,"nodeType":"Block","src":"13360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"13374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5303,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5302,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:13","memberName":"max","nodeType":"MemberAccess","src":"13382:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5314,"nodeType":"IfStatement","src":"13370:103:13","trueBody":{"id":5313,"nodeType":"Block","src":"13400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"13456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5308,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"13421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5312,"nodeType":"RevertStatement","src":"13414:48:13"}]}},{"expression":{"arguments":[{"id":5317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5296,"src":"13496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5315,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:13","typeDescriptions":{}}},"id":5318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5300,"id":5319,"nodeType":"Return","src":"13482:20:13"}]},"documentation":{"id":5294,"nodeType":"StructuredDocumentation","src":"13015:276:13","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5321,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5296,"mutability":"mutable","name":"value","nameLocation":"13322:5:13","nodeType":"VariableDeclaration","scope":5321,"src":"13314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5295,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:13"},"returnParameters":{"id":5300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5321,"src":"13352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5298,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:13"},"scope":6387,"src":"13296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5348,"nodeType":"Block","src":"13860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"13874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5331,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5330,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:13","memberName":"max","nodeType":"MemberAccess","src":"13882:16:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5342,"nodeType":"IfStatement","src":"13870:103:13","trueBody":{"id":5341,"nodeType":"Block","src":"13900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"13956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5336,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"13921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5340,"nodeType":"RevertStatement","src":"13914:48:13"}]}},{"expression":{"arguments":[{"id":5345,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5324,"src":"13996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5343,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:13","typeDescriptions":{}}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5328,"id":5347,"nodeType":"Return","src":"13982:20:13"}]},"documentation":{"id":5322,"nodeType":"StructuredDocumentation","src":"13515:276:13","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5349,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5324,"mutability":"mutable","name":"value","nameLocation":"13822:5:13","nodeType":"VariableDeclaration","scope":5349,"src":"13814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5323,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:13"},"returnParameters":{"id":5328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5349,"src":"13852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5326,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:13","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:13"},"scope":6387,"src":"13796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5376,"nodeType":"Block","src":"14360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"14374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5359,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5358,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:13","memberName":"max","nodeType":"MemberAccess","src":"14382:16:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5370,"nodeType":"IfStatement","src":"14370:103:13","trueBody":{"id":5369,"nodeType":"Block","src":"14400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"14456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5364,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"14421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5368,"nodeType":"RevertStatement","src":"14414:48:13"}]}},{"expression":{"arguments":[{"id":5373,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5352,"src":"14496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5371,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:13","typeDescriptions":{}}},"id":5374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5356,"id":5375,"nodeType":"Return","src":"14482:20:13"}]},"documentation":{"id":5350,"nodeType":"StructuredDocumentation","src":"14015:276:13","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5377,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5352,"mutability":"mutable","name":"value","nameLocation":"14322:5:13","nodeType":"VariableDeclaration","scope":5377,"src":"14314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5351,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:13"},"returnParameters":{"id":5356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5377,"src":"14352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5354,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:13","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:13"},"scope":6387,"src":"14296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5404,"nodeType":"Block","src":"14860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5387,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:13","memberName":"max","nodeType":"MemberAccess","src":"14882:16:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"14870:103:13","trueBody":{"id":5397,"nodeType":"Block","src":"14900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5392,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"14921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5396,"nodeType":"RevertStatement","src":"14914:48:13"}]}},{"expression":{"arguments":[{"id":5401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5399,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:13","typeDescriptions":{}}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5384,"id":5403,"nodeType":"Return","src":"14982:20:13"}]},"documentation":{"id":5378,"nodeType":"StructuredDocumentation","src":"14515:276:13","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5405,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"value","nameLocation":"14822:5:13","nodeType":"VariableDeclaration","scope":5405,"src":"14814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5379,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:13"},"returnParameters":{"id":5384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5405,"src":"14852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5382,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:13","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:13"},"scope":6387,"src":"14796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5432,"nodeType":"Block","src":"15360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"15374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5415,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5414,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:13","memberName":"max","nodeType":"MemberAccess","src":"15382:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5426,"nodeType":"IfStatement","src":"15370:103:13","trueBody":{"id":5425,"nodeType":"Block","src":"15400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"15456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5420,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"15421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5424,"nodeType":"RevertStatement","src":"15414:48:13"}]}},{"expression":{"arguments":[{"id":5429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5408,"src":"15496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5427,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:13","typeDescriptions":{}}},"id":5430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5412,"id":5431,"nodeType":"Return","src":"15482:20:13"}]},"documentation":{"id":5406,"nodeType":"StructuredDocumentation","src":"15015:276:13","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5433,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5408,"mutability":"mutable","name":"value","nameLocation":"15322:5:13","nodeType":"VariableDeclaration","scope":5433,"src":"15314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5407,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:13"},"returnParameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5433,"src":"15352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5410,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:13"},"scope":6387,"src":"15296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5460,"nodeType":"Block","src":"15860:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"15874:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5443,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5442,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:13","memberName":"max","nodeType":"MemberAccess","src":"15882:16:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5454,"nodeType":"IfStatement","src":"15870:103:13","trueBody":{"id":5453,"nodeType":"Block","src":"15900:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"15956:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5448,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"15921:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5452,"nodeType":"RevertStatement","src":"15914:48:13"}]}},{"expression":{"arguments":[{"id":5457,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"15996:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5456,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5455,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:13","typeDescriptions":{}}},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5440,"id":5459,"nodeType":"Return","src":"15982:20:13"}]},"documentation":{"id":5434,"nodeType":"StructuredDocumentation","src":"15515:276:13","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5461,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:13","nodeType":"FunctionDefinition","parameters":{"id":5437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5436,"mutability":"mutable","name":"value","nameLocation":"15822:5:13","nodeType":"VariableDeclaration","scope":5461,"src":"15814:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:13"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5461,"src":"15852:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5438,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:13"},"scope":6387,"src":"15796:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5488,"nodeType":"Block","src":"16360:149:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"16374:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5471,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5470,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:13","memberName":"max","nodeType":"MemberAccess","src":"16382:16:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5482,"nodeType":"IfStatement","src":"16370:103:13","trueBody":{"id":5481,"nodeType":"Block","src":"16400:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"16456:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5476,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"16421:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5480,"nodeType":"RevertStatement","src":"16414:48:13"}]}},{"expression":{"arguments":[{"id":5485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"16496:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5483,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:13","typeDescriptions":{}}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5468,"id":5487,"nodeType":"Return","src":"16482:20:13"}]},"documentation":{"id":5462,"nodeType":"StructuredDocumentation","src":"16015:276:13","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5489,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:13","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"value","nameLocation":"16322:5:13","nodeType":"VariableDeclaration","scope":5489,"src":"16314:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:13"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5489,"src":"16352:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5466,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:13"},"scope":6387,"src":"16296:213:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5516,"nodeType":"Block","src":"16854:146:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"16868:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5499,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5498,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:13","memberName":"max","nodeType":"MemberAccess","src":"16876:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5510,"nodeType":"IfStatement","src":"16864:101:13","trueBody":{"id":5509,"nodeType":"Block","src":"16893:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"16948:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5504,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4632,"src":"16914:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5508,"nodeType":"RevertStatement","src":"16907:47:13"}]}},{"expression":{"arguments":[{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"16987:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5511,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:13","typeDescriptions":{}}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5496,"id":5515,"nodeType":"Return","src":"16974:19:13"}]},"documentation":{"id":5490,"nodeType":"StructuredDocumentation","src":"16515:272:13","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5517,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:13","nodeType":"FunctionDefinition","parameters":{"id":5493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5492,"mutability":"mutable","name":"value","nameLocation":"16817:5:13","nodeType":"VariableDeclaration","scope":5517,"src":"16809:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5491,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:13"},"returnParameters":{"id":5496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5517,"src":"16847:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5494,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:13"},"scope":6387,"src":"16792:208:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5539,"nodeType":"Block","src":"17236:128:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"17250:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5533,"nodeType":"IfStatement","src":"17246:81:13","trueBody":{"id":5532,"nodeType":"Block","src":"17261:66:13","statements":[{"errorCall":{"arguments":[{"id":5529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"17310:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5528,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4637,"src":"17282:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5531,"nodeType":"RevertStatement","src":"17275:41:13"}]}},{"expression":{"arguments":[{"id":5536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5520,"src":"17351:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5534,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:13","typeDescriptions":{}}},"id":5537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5524,"id":5538,"nodeType":"Return","src":"17336:21:13"}]},"documentation":{"id":5518,"nodeType":"StructuredDocumentation","src":"17006:160:13","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5540,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:13","nodeType":"FunctionDefinition","parameters":{"id":5521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5520,"mutability":"mutable","name":"value","nameLocation":"17197:5:13","nodeType":"VariableDeclaration","scope":5540,"src":"17190:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5519,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:13"},"returnParameters":{"id":5524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5540,"src":"17227:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5522,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:13"},"scope":6387,"src":"17171:193:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5565,"nodeType":"Block","src":"17761:150:13","statements":[{"expression":{"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"17771:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"17791:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5549,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:13","typeDescriptions":{}}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5554,"nodeType":"ExpressionStatement","src":"17771:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5546,"src":"17811:10:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"17825:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5564,"nodeType":"IfStatement","src":"17807:98:13","trueBody":{"id":5563,"nodeType":"Block","src":"17832:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:13","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5543,"src":"17888:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5558,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"17853:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5562,"nodeType":"RevertStatement","src":"17846:48:13"}]}}]},"documentation":{"id":5541,"nodeType":"StructuredDocumentation","src":"17370:312:13","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:13","nodeType":"FunctionDefinition","parameters":{"id":5544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5543,"mutability":"mutable","name":"value","nameLocation":"17712:5:13","nodeType":"VariableDeclaration","scope":5566,"src":"17705:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5542,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:13"},"returnParameters":{"id":5547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5546,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:13","nodeType":"VariableDeclaration","scope":5566,"src":"17742:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5545,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:13","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:13"},"scope":6387,"src":"17687:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5591,"nodeType":"Block","src":"18308:150:13","statements":[{"expression":{"id":5579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"18318:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"18338:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5575,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:13","typeDescriptions":{}}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5580,"nodeType":"ExpressionStatement","src":"18318:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"18358:10:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"18372:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5590,"nodeType":"IfStatement","src":"18354:98:13","trueBody":{"id":5589,"nodeType":"Block","src":"18379:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:13","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"18435:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5584,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"18400:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5588,"nodeType":"RevertStatement","src":"18393:48:13"}]}}]},"documentation":{"id":5567,"nodeType":"StructuredDocumentation","src":"17917:312:13","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5592,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:13","nodeType":"FunctionDefinition","parameters":{"id":5570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5569,"mutability":"mutable","name":"value","nameLocation":"18259:5:13","nodeType":"VariableDeclaration","scope":5592,"src":"18252:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5568,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:13"},"returnParameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:13","nodeType":"VariableDeclaration","scope":5592,"src":"18289:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5571,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:13","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:13"},"scope":6387,"src":"18234:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5617,"nodeType":"Block","src":"18855:150:13","statements":[{"expression":{"id":5605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"18865:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"18885:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5601,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:13","typeDescriptions":{}}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5606,"nodeType":"ExpressionStatement","src":"18865:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"18905:10:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"18919:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5616,"nodeType":"IfStatement","src":"18901:98:13","trueBody":{"id":5615,"nodeType":"Block","src":"18926:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:13","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"18982:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5610,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"18947:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5614,"nodeType":"RevertStatement","src":"18940:48:13"}]}}]},"documentation":{"id":5593,"nodeType":"StructuredDocumentation","src":"18464:312:13","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:13","nodeType":"FunctionDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5595,"mutability":"mutable","name":"value","nameLocation":"18806:5:13","nodeType":"VariableDeclaration","scope":5618,"src":"18799:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5594,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:13"},"returnParameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:13","nodeType":"VariableDeclaration","scope":5618,"src":"18836:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5597,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:13","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:13"},"scope":6387,"src":"18781:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5643,"nodeType":"Block","src":"19402:150:13","statements":[{"expression":{"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5626,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"19412:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"19432:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5627,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:13","typeDescriptions":{}}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5632,"nodeType":"ExpressionStatement","src":"19412:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"19452:10:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"19466:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5642,"nodeType":"IfStatement","src":"19448:98:13","trueBody":{"id":5641,"nodeType":"Block","src":"19473:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:13","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"19529:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5636,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"19494:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5640,"nodeType":"RevertStatement","src":"19487:48:13"}]}}]},"documentation":{"id":5619,"nodeType":"StructuredDocumentation","src":"19011:312:13","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5644,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:13","nodeType":"FunctionDefinition","parameters":{"id":5622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"value","nameLocation":"19353:5:13","nodeType":"VariableDeclaration","scope":5644,"src":"19346:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5620,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:13"},"returnParameters":{"id":5625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5624,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:13","nodeType":"VariableDeclaration","scope":5644,"src":"19383:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5623,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:13","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:13"},"scope":6387,"src":"19328:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5669,"nodeType":"Block","src":"19949:150:13","statements":[{"expression":{"id":5657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5652,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"19959:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"19979:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5653,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:13","typeDescriptions":{}}},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5658,"nodeType":"ExpressionStatement","src":"19959:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5659,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"19999:10:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"20013:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5668,"nodeType":"IfStatement","src":"19995:98:13","trueBody":{"id":5667,"nodeType":"Block","src":"20020:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:13","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"20076:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5662,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"20041:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5666,"nodeType":"RevertStatement","src":"20034:48:13"}]}}]},"documentation":{"id":5645,"nodeType":"StructuredDocumentation","src":"19558:312:13","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5670,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:13","nodeType":"FunctionDefinition","parameters":{"id":5648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5647,"mutability":"mutable","name":"value","nameLocation":"19900:5:13","nodeType":"VariableDeclaration","scope":5670,"src":"19893:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5646,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:13"},"returnParameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:13","nodeType":"VariableDeclaration","scope":5670,"src":"19930:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5649,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:13","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:13"},"scope":6387,"src":"19875:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5695,"nodeType":"Block","src":"20496:150:13","statements":[{"expression":{"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"20506:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"20526:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5679,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:13","typeDescriptions":{}}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5684,"nodeType":"ExpressionStatement","src":"20506:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5685,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"20546:10:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"20560:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5694,"nodeType":"IfStatement","src":"20542:98:13","trueBody":{"id":5693,"nodeType":"Block","src":"20567:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:13","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"20623:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5688,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"20588:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5692,"nodeType":"RevertStatement","src":"20581:48:13"}]}}]},"documentation":{"id":5671,"nodeType":"StructuredDocumentation","src":"20105:312:13","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5696,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:13","nodeType":"FunctionDefinition","parameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"value","nameLocation":"20447:5:13","nodeType":"VariableDeclaration","scope":5696,"src":"20440:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5672,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:13"},"returnParameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:13","nodeType":"VariableDeclaration","scope":5696,"src":"20477:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5675,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:13","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:13"},"scope":6387,"src":"20422:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5721,"nodeType":"Block","src":"21043:150:13","statements":[{"expression":{"id":5709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"21053:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"21073:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5705,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:13","typeDescriptions":{}}},"id":5708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5710,"nodeType":"ExpressionStatement","src":"21053:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5711,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"21093:10:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"21107:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5720,"nodeType":"IfStatement","src":"21089:98:13","trueBody":{"id":5719,"nodeType":"Block","src":"21114:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:13","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5699,"src":"21170:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5714,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"21135:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5718,"nodeType":"RevertStatement","src":"21128:48:13"}]}}]},"documentation":{"id":5697,"nodeType":"StructuredDocumentation","src":"20652:312:13","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5722,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:13","nodeType":"FunctionDefinition","parameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"value","nameLocation":"20994:5:13","nodeType":"VariableDeclaration","scope":5722,"src":"20987:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5698,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:13"},"returnParameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5702,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:13","nodeType":"VariableDeclaration","scope":5722,"src":"21024:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5701,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:13","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:13"},"scope":6387,"src":"20969:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5747,"nodeType":"Block","src":"21590:150:13","statements":[{"expression":{"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"21600:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"21620:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5731,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:13","typeDescriptions":{}}},"id":5734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5736,"nodeType":"ExpressionStatement","src":"21600:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5737,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"21640:10:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"21654:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5746,"nodeType":"IfStatement","src":"21636:98:13","trueBody":{"id":5745,"nodeType":"Block","src":"21661:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:13","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"21717:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5740,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"21682:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5744,"nodeType":"RevertStatement","src":"21675:48:13"}]}}]},"documentation":{"id":5723,"nodeType":"StructuredDocumentation","src":"21199:312:13","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5748,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:13","nodeType":"FunctionDefinition","parameters":{"id":5726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5725,"mutability":"mutable","name":"value","nameLocation":"21541:5:13","nodeType":"VariableDeclaration","scope":5748,"src":"21534:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5724,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:13"},"returnParameters":{"id":5729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:13","nodeType":"VariableDeclaration","scope":5748,"src":"21571:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5727,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:13","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:13"},"scope":6387,"src":"21516:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5773,"nodeType":"Block","src":"22137:150:13","statements":[{"expression":{"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"22147:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22167:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5758,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5757,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:13","typeDescriptions":{}}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5762,"nodeType":"ExpressionStatement","src":"22147:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"22187:10:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22201:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5772,"nodeType":"IfStatement","src":"22183:98:13","trueBody":{"id":5771,"nodeType":"Block","src":"22208:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:13","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5751,"src":"22264:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5766,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"22229:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5770,"nodeType":"RevertStatement","src":"22222:48:13"}]}}]},"documentation":{"id":5749,"nodeType":"StructuredDocumentation","src":"21746:312:13","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5774,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:13","nodeType":"FunctionDefinition","parameters":{"id":5752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5751,"mutability":"mutable","name":"value","nameLocation":"22088:5:13","nodeType":"VariableDeclaration","scope":5774,"src":"22081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5750,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:13"},"returnParameters":{"id":5755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5754,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:13","nodeType":"VariableDeclaration","scope":5774,"src":"22118:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5753,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:13","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:13"},"scope":6387,"src":"22063:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5799,"nodeType":"Block","src":"22684:150:13","statements":[{"expression":{"id":5787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"22694:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"22714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5783,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:13","typeDescriptions":{}}},"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5788,"nodeType":"ExpressionStatement","src":"22694:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5789,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5780,"src":"22734:10:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"22748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5798,"nodeType":"IfStatement","src":"22730:98:13","trueBody":{"id":5797,"nodeType":"Block","src":"22755:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:13","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5777,"src":"22811:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5792,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"22776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5796,"nodeType":"RevertStatement","src":"22769:48:13"}]}}]},"documentation":{"id":5775,"nodeType":"StructuredDocumentation","src":"22293:312:13","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5800,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:13","nodeType":"FunctionDefinition","parameters":{"id":5778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5777,"mutability":"mutable","name":"value","nameLocation":"22635:5:13","nodeType":"VariableDeclaration","scope":5800,"src":"22628:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5776,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:13"},"returnParameters":{"id":5781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5780,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:13","nodeType":"VariableDeclaration","scope":5800,"src":"22665:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5779,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:13","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:13"},"scope":6387,"src":"22610:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5825,"nodeType":"Block","src":"23231:150:13","statements":[{"expression":{"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5808,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"23241:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"23261:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5809,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:13","typeDescriptions":{}}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5814,"nodeType":"ExpressionStatement","src":"23241:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5815,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"23281:10:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"23295:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5824,"nodeType":"IfStatement","src":"23277:98:13","trueBody":{"id":5823,"nodeType":"Block","src":"23302:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:13","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5803,"src":"23358:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5818,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"23323:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5822,"nodeType":"RevertStatement","src":"23316:48:13"}]}}]},"documentation":{"id":5801,"nodeType":"StructuredDocumentation","src":"22840:312:13","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5826,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:13","nodeType":"FunctionDefinition","parameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"value","nameLocation":"23182:5:13","nodeType":"VariableDeclaration","scope":5826,"src":"23175:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5802,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:13"},"returnParameters":{"id":5807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5806,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:13","nodeType":"VariableDeclaration","scope":5826,"src":"23212:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5805,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:13","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:13"},"scope":6387,"src":"23157:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5851,"nodeType":"Block","src":"23778:150:13","statements":[{"expression":{"id":5839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"23788:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"23808:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5835,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:13","typeDescriptions":{}}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5840,"nodeType":"ExpressionStatement","src":"23788:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5841,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"23828:10:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"23842:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5850,"nodeType":"IfStatement","src":"23824:98:13","trueBody":{"id":5849,"nodeType":"Block","src":"23849:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:13","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5829,"src":"23905:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5844,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"23870:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5848,"nodeType":"RevertStatement","src":"23863:48:13"}]}}]},"documentation":{"id":5827,"nodeType":"StructuredDocumentation","src":"23387:312:13","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5852,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:13","nodeType":"FunctionDefinition","parameters":{"id":5830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5829,"mutability":"mutable","name":"value","nameLocation":"23729:5:13","nodeType":"VariableDeclaration","scope":5852,"src":"23722:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5828,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:13"},"returnParameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5832,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:13","nodeType":"VariableDeclaration","scope":5852,"src":"23759:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5831,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:13","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:13"},"scope":6387,"src":"23704:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5877,"nodeType":"Block","src":"24325:150:13","statements":[{"expression":{"id":5865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"24335:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"24355:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5861,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:13","typeDescriptions":{}}},"id":5864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5866,"nodeType":"ExpressionStatement","src":"24335:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5867,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5858,"src":"24375:10:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"24389:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5876,"nodeType":"IfStatement","src":"24371:98:13","trueBody":{"id":5875,"nodeType":"Block","src":"24396:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:13","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5872,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5855,"src":"24452:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5870,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"24417:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5874,"nodeType":"RevertStatement","src":"24410:48:13"}]}}]},"documentation":{"id":5853,"nodeType":"StructuredDocumentation","src":"23934:312:13","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5878,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:13","nodeType":"FunctionDefinition","parameters":{"id":5856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5855,"mutability":"mutable","name":"value","nameLocation":"24276:5:13","nodeType":"VariableDeclaration","scope":5878,"src":"24269:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5854,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:13"},"returnParameters":{"id":5859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5858,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:13","nodeType":"VariableDeclaration","scope":5878,"src":"24306:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5857,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:13","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:13"},"scope":6387,"src":"24251:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5903,"nodeType":"Block","src":"24872:150:13","statements":[{"expression":{"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"24882:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"24902:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5887,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:13","typeDescriptions":{}}},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5892,"nodeType":"ExpressionStatement","src":"24882:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5893,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"24922:10:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"24936:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5902,"nodeType":"IfStatement","src":"24918:98:13","trueBody":{"id":5901,"nodeType":"Block","src":"24943:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:13","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5881,"src":"24999:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5896,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"24964:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5900,"nodeType":"RevertStatement","src":"24957:48:13"}]}}]},"documentation":{"id":5879,"nodeType":"StructuredDocumentation","src":"24481:312:13","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5904,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:13","nodeType":"FunctionDefinition","parameters":{"id":5882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5881,"mutability":"mutable","name":"value","nameLocation":"24823:5:13","nodeType":"VariableDeclaration","scope":5904,"src":"24816:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5880,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:13"},"returnParameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5884,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:13","nodeType":"VariableDeclaration","scope":5904,"src":"24853:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5883,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:13","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:13"},"scope":6387,"src":"24798:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5929,"nodeType":"Block","src":"25419:150:13","statements":[{"expression":{"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"25429:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"25449:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5913,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:13","typeDescriptions":{}}},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5918,"nodeType":"ExpressionStatement","src":"25429:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5919,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5910,"src":"25469:10:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"25483:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5928,"nodeType":"IfStatement","src":"25465:98:13","trueBody":{"id":5927,"nodeType":"Block","src":"25490:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:13","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5907,"src":"25546:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5922,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"25511:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5926,"nodeType":"RevertStatement","src":"25504:48:13"}]}}]},"documentation":{"id":5905,"nodeType":"StructuredDocumentation","src":"25028:312:13","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5930,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:13","nodeType":"FunctionDefinition","parameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"value","nameLocation":"25370:5:13","nodeType":"VariableDeclaration","scope":5930,"src":"25363:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5906,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:13"},"returnParameters":{"id":5911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5910,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:13","nodeType":"VariableDeclaration","scope":5930,"src":"25400:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5909,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:13","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:13"},"scope":6387,"src":"25345:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5955,"nodeType":"Block","src":"25966:150:13","statements":[{"expression":{"id":5943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"25976:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"25996:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5939,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:13","typeDescriptions":{}}},"id":5942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5944,"nodeType":"ExpressionStatement","src":"25976:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5945,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"26016:10:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"26030:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5954,"nodeType":"IfStatement","src":"26012:98:13","trueBody":{"id":5953,"nodeType":"Block","src":"26037:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5933,"src":"26093:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5948,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"26058:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5952,"nodeType":"RevertStatement","src":"26051:48:13"}]}}]},"documentation":{"id":5931,"nodeType":"StructuredDocumentation","src":"25575:312:13","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5956,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:13","nodeType":"FunctionDefinition","parameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"value","nameLocation":"25917:5:13","nodeType":"VariableDeclaration","scope":5956,"src":"25910:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5932,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:13"},"returnParameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5936,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:13","nodeType":"VariableDeclaration","scope":5956,"src":"25947:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5935,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:13","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:13"},"scope":6387,"src":"25892:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5981,"nodeType":"Block","src":"26513:150:13","statements":[{"expression":{"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"26523:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"26543:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5965,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:13","typeDescriptions":{}}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5970,"nodeType":"ExpressionStatement","src":"26523:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"26563:10:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"26577:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5980,"nodeType":"IfStatement","src":"26559:98:13","trueBody":{"id":5979,"nodeType":"Block","src":"26584:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:13","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5959,"src":"26640:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5974,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"26605:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5978,"nodeType":"RevertStatement","src":"26598:48:13"}]}}]},"documentation":{"id":5957,"nodeType":"StructuredDocumentation","src":"26122:312:13","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5982,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:13","nodeType":"FunctionDefinition","parameters":{"id":5960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5959,"mutability":"mutable","name":"value","nameLocation":"26464:5:13","nodeType":"VariableDeclaration","scope":5982,"src":"26457:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5958,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:13"},"returnParameters":{"id":5963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5962,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:13","nodeType":"VariableDeclaration","scope":5982,"src":"26494:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5961,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:13","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:13"},"scope":6387,"src":"26439:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6007,"nodeType":"Block","src":"27060:150:13","statements":[{"expression":{"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"27070:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"27090:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5991,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:13","typeDescriptions":{}}},"id":5994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5996,"nodeType":"ExpressionStatement","src":"27070:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"27110:10:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"27124:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6006,"nodeType":"IfStatement","src":"27106:98:13","trueBody":{"id":6005,"nodeType":"Block","src":"27131:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:13","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5985,"src":"27187:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"27152:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6004,"nodeType":"RevertStatement","src":"27145:48:13"}]}}]},"documentation":{"id":5983,"nodeType":"StructuredDocumentation","src":"26669:312:13","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:13","nodeType":"FunctionDefinition","parameters":{"id":5986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5985,"mutability":"mutable","name":"value","nameLocation":"27011:5:13","nodeType":"VariableDeclaration","scope":6008,"src":"27004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5984,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:13"},"returnParameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5988,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:13","nodeType":"VariableDeclaration","scope":6008,"src":"27041:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5987,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:13","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:13"},"scope":6387,"src":"26986:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6033,"nodeType":"Block","src":"27607:150:13","statements":[{"expression":{"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"27617:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"27637:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6017,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:13","typeDescriptions":{}}},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6022,"nodeType":"ExpressionStatement","src":"27617:26:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"27657:10:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"27671:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6032,"nodeType":"IfStatement","src":"27653:98:13","trueBody":{"id":6031,"nodeType":"Block","src":"27678:73:13","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:13","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6011,"src":"27734:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6026,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"27699:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6030,"nodeType":"RevertStatement","src":"27692:48:13"}]}}]},"documentation":{"id":6009,"nodeType":"StructuredDocumentation","src":"27216:312:13","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6034,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:13","nodeType":"FunctionDefinition","parameters":{"id":6012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6011,"mutability":"mutable","name":"value","nameLocation":"27558:5:13","nodeType":"VariableDeclaration","scope":6034,"src":"27551:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6010,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:13"},"returnParameters":{"id":6015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6014,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:13","nodeType":"VariableDeclaration","scope":6034,"src":"27588:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6013,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:13","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:13"},"scope":6387,"src":"27533:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6059,"nodeType":"Block","src":"28147:148:13","statements":[{"expression":{"id":6047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"28157:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"28176:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6043,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:13","typeDescriptions":{}}},"id":6046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6048,"nodeType":"ExpressionStatement","src":"28157:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6040,"src":"28196:10:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"28210:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6058,"nodeType":"IfStatement","src":"28192:97:13","trueBody":{"id":6057,"nodeType":"Block","src":"28217:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"28272:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6052,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"28238:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6056,"nodeType":"RevertStatement","src":"28231:47:13"}]}}]},"documentation":{"id":6035,"nodeType":"StructuredDocumentation","src":"27763:307:13","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6060,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:13","nodeType":"FunctionDefinition","parameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"value","nameLocation":"28099:5:13","nodeType":"VariableDeclaration","scope":6060,"src":"28092:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6036,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:13"},"returnParameters":{"id":6041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6040,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:13","nodeType":"VariableDeclaration","scope":6060,"src":"28129:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6039,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:13","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:13"},"scope":6387,"src":"28075:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6085,"nodeType":"Block","src":"28685:148:13","statements":[{"expression":{"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"28695:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"28714:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6069,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:13","typeDescriptions":{}}},"id":6072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6074,"nodeType":"ExpressionStatement","src":"28695:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6066,"src":"28734:10:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"28748:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6084,"nodeType":"IfStatement","src":"28730:97:13","trueBody":{"id":6083,"nodeType":"Block","src":"28755:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:13","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6063,"src":"28810:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6078,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"28776:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6082,"nodeType":"RevertStatement","src":"28769:47:13"}]}}]},"documentation":{"id":6061,"nodeType":"StructuredDocumentation","src":"28301:307:13","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6086,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:13","nodeType":"FunctionDefinition","parameters":{"id":6064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6063,"mutability":"mutable","name":"value","nameLocation":"28637:5:13","nodeType":"VariableDeclaration","scope":6086,"src":"28630:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6062,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:13"},"returnParameters":{"id":6067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6066,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:13","nodeType":"VariableDeclaration","scope":6086,"src":"28667:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6065,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:13","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:13"},"scope":6387,"src":"28613:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6111,"nodeType":"Block","src":"29223:148:13","statements":[{"expression":{"id":6099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"29233:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"29252:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6095,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:13","typeDescriptions":{}}},"id":6098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6100,"nodeType":"ExpressionStatement","src":"29233:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6092,"src":"29272:10:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"29286:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6110,"nodeType":"IfStatement","src":"29268:97:13","trueBody":{"id":6109,"nodeType":"Block","src":"29293:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:13","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6089,"src":"29348:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6104,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"29314:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6108,"nodeType":"RevertStatement","src":"29307:47:13"}]}}]},"documentation":{"id":6087,"nodeType":"StructuredDocumentation","src":"28839:307:13","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6112,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:13","nodeType":"FunctionDefinition","parameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"value","nameLocation":"29175:5:13","nodeType":"VariableDeclaration","scope":6112,"src":"29168:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6088,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:13"},"returnParameters":{"id":6093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6092,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:13","nodeType":"VariableDeclaration","scope":6112,"src":"29205:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6091,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:13","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:13"},"scope":6387,"src":"29151:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6137,"nodeType":"Block","src":"29761:148:13","statements":[{"expression":{"id":6125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"29771:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"29790:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6121,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:13","typeDescriptions":{}}},"id":6124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6126,"nodeType":"ExpressionStatement","src":"29771:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"29810:10:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"29824:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"29806:97:13","trueBody":{"id":6135,"nodeType":"Block","src":"29831:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:13","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6115,"src":"29886:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6130,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"29852:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6134,"nodeType":"RevertStatement","src":"29845:47:13"}]}}]},"documentation":{"id":6113,"nodeType":"StructuredDocumentation","src":"29377:307:13","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6138,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:13","nodeType":"FunctionDefinition","parameters":{"id":6116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6115,"mutability":"mutable","name":"value","nameLocation":"29713:5:13","nodeType":"VariableDeclaration","scope":6138,"src":"29706:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6114,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:13"},"returnParameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:13","nodeType":"VariableDeclaration","scope":6138,"src":"29743:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6117,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:13","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:13"},"scope":6387,"src":"29689:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6163,"nodeType":"Block","src":"30299:148:13","statements":[{"expression":{"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"30309:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"30328:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6147,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:13","typeDescriptions":{}}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6152,"nodeType":"ExpressionStatement","src":"30309:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"30348:10:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"30362:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6162,"nodeType":"IfStatement","src":"30344:97:13","trueBody":{"id":6161,"nodeType":"Block","src":"30369:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6141,"src":"30424:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6156,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"30390:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6160,"nodeType":"RevertStatement","src":"30383:47:13"}]}}]},"documentation":{"id":6139,"nodeType":"StructuredDocumentation","src":"29915:307:13","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6164,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:13","nodeType":"FunctionDefinition","parameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6141,"mutability":"mutable","name":"value","nameLocation":"30251:5:13","nodeType":"VariableDeclaration","scope":6164,"src":"30244:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6140,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:13"},"returnParameters":{"id":6145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:13","nodeType":"VariableDeclaration","scope":6164,"src":"30281:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6143,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:13","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:13"},"scope":6387,"src":"30227:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6189,"nodeType":"Block","src":"30837:148:13","statements":[{"expression":{"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"30847:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"30866:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6173,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:13","typeDescriptions":{}}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6178,"nodeType":"ExpressionStatement","src":"30847:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"30886:10:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"30900:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6188,"nodeType":"IfStatement","src":"30882:97:13","trueBody":{"id":6187,"nodeType":"Block","src":"30907:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:13","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6167,"src":"30962:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6182,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"30928:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6186,"nodeType":"RevertStatement","src":"30921:47:13"}]}}]},"documentation":{"id":6165,"nodeType":"StructuredDocumentation","src":"30453:307:13","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6190,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:13","nodeType":"FunctionDefinition","parameters":{"id":6168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6167,"mutability":"mutable","name":"value","nameLocation":"30789:5:13","nodeType":"VariableDeclaration","scope":6190,"src":"30782:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6166,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:13"},"returnParameters":{"id":6171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:13","nodeType":"VariableDeclaration","scope":6190,"src":"30819:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6169,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:13","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:13"},"scope":6387,"src":"30765:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6215,"nodeType":"Block","src":"31375:148:13","statements":[{"expression":{"id":6203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"31385:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"31404:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6199,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:13","typeDescriptions":{}}},"id":6202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6204,"nodeType":"ExpressionStatement","src":"31385:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"31424:10:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"31438:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6214,"nodeType":"IfStatement","src":"31420:97:13","trueBody":{"id":6213,"nodeType":"Block","src":"31445:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"31500:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6208,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"31466:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6212,"nodeType":"RevertStatement","src":"31459:47:13"}]}}]},"documentation":{"id":6191,"nodeType":"StructuredDocumentation","src":"30991:307:13","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6216,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:13","nodeType":"FunctionDefinition","parameters":{"id":6194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6193,"mutability":"mutable","name":"value","nameLocation":"31327:5:13","nodeType":"VariableDeclaration","scope":6216,"src":"31320:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6192,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:13"},"returnParameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:13","nodeType":"VariableDeclaration","scope":6216,"src":"31357:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6195,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:13","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:13"},"scope":6387,"src":"31303:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6241,"nodeType":"Block","src":"31913:148:13","statements":[{"expression":{"id":6229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"31923:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"31942:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6225,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:13","typeDescriptions":{}}},"id":6228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6230,"nodeType":"ExpressionStatement","src":"31923:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"31962:10:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"31976:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6240,"nodeType":"IfStatement","src":"31958:97:13","trueBody":{"id":6239,"nodeType":"Block","src":"31983:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6219,"src":"32038:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6234,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"32004:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6238,"nodeType":"RevertStatement","src":"31997:47:13"}]}}]},"documentation":{"id":6217,"nodeType":"StructuredDocumentation","src":"31529:307:13","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6242,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:13","nodeType":"FunctionDefinition","parameters":{"id":6220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"mutability":"mutable","name":"value","nameLocation":"31865:5:13","nodeType":"VariableDeclaration","scope":6242,"src":"31858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6218,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:13"},"returnParameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:13","nodeType":"VariableDeclaration","scope":6242,"src":"31895:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6221,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:13","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:13"},"scope":6387,"src":"31841:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6267,"nodeType":"Block","src":"32451:148:13","statements":[{"expression":{"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"32461:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"32480:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6251,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:13","typeDescriptions":{}}},"id":6254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6256,"nodeType":"ExpressionStatement","src":"32461:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"32500:10:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"32514:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6266,"nodeType":"IfStatement","src":"32496:97:13","trueBody":{"id":6265,"nodeType":"Block","src":"32521:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6245,"src":"32576:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6260,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"32542:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6264,"nodeType":"RevertStatement","src":"32535:47:13"}]}}]},"documentation":{"id":6243,"nodeType":"StructuredDocumentation","src":"32067:307:13","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6268,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:13","nodeType":"FunctionDefinition","parameters":{"id":6246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6245,"mutability":"mutable","name":"value","nameLocation":"32403:5:13","nodeType":"VariableDeclaration","scope":6268,"src":"32396:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6244,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:13"},"returnParameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:13","nodeType":"VariableDeclaration","scope":6268,"src":"32433:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6247,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:13","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:13"},"scope":6387,"src":"32379:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6293,"nodeType":"Block","src":"32989:148:13","statements":[{"expression":{"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"32999:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"33018:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6277,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:13","typeDescriptions":{}}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6282,"nodeType":"ExpressionStatement","src":"32999:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"33038:10:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"33052:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6292,"nodeType":"IfStatement","src":"33034:97:13","trueBody":{"id":6291,"nodeType":"Block","src":"33059:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:13","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6271,"src":"33114:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6286,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"33080:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6290,"nodeType":"RevertStatement","src":"33073:47:13"}]}}]},"documentation":{"id":6269,"nodeType":"StructuredDocumentation","src":"32605:307:13","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6294,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:13","nodeType":"FunctionDefinition","parameters":{"id":6272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6271,"mutability":"mutable","name":"value","nameLocation":"32941:5:13","nodeType":"VariableDeclaration","scope":6294,"src":"32934:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6270,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:13"},"returnParameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:13","nodeType":"VariableDeclaration","scope":6294,"src":"32971:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6273,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:13"},"scope":6387,"src":"32917:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6319,"nodeType":"Block","src":"33527:148:13","statements":[{"expression":{"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"33537:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"33556:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6303,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:13","typeDescriptions":{}}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6308,"nodeType":"ExpressionStatement","src":"33537:25:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"33576:10:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"33590:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6318,"nodeType":"IfStatement","src":"33572:97:13","trueBody":{"id":6317,"nodeType":"Block","src":"33597:72:13","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"33652:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6312,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"33618:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6316,"nodeType":"RevertStatement","src":"33611:47:13"}]}}]},"documentation":{"id":6295,"nodeType":"StructuredDocumentation","src":"33143:307:13","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6320,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:13","nodeType":"FunctionDefinition","parameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"value","nameLocation":"33479:5:13","nodeType":"VariableDeclaration","scope":6320,"src":"33472:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6296,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:13"},"returnParameters":{"id":6301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6300,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:13","nodeType":"VariableDeclaration","scope":6320,"src":"33509:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6299,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:13","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:13"},"scope":6387,"src":"33455:220:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6345,"nodeType":"Block","src":"34058:146:13","statements":[{"expression":{"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"34068:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"34086:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6329,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:13","typeDescriptions":{}}},"id":6332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6334,"nodeType":"ExpressionStatement","src":"34068:24:13"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"34106:10:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"34120:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6344,"nodeType":"IfStatement","src":"34102:96:13","trueBody":{"id":6343,"nodeType":"Block","src":"34127:71:13","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6323,"src":"34181:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6338,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"34148:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6342,"nodeType":"RevertStatement","src":"34141:46:13"}]}}]},"documentation":{"id":6321,"nodeType":"StructuredDocumentation","src":"33681:302:13","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6346,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:13","nodeType":"FunctionDefinition","parameters":{"id":6324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6323,"mutability":"mutable","name":"value","nameLocation":"34011:5:13","nodeType":"VariableDeclaration","scope":6346,"src":"34004:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6322,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:13"},"returnParameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:13","nodeType":"VariableDeclaration","scope":6346,"src":"34041:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6325,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:13","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:13"},"scope":6387,"src":"33988:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6375,"nodeType":"Block","src":"34444:250:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"34557:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6358,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:13","memberName":"max","nodeType":"MemberAccess","src":"34573:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6355,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:13","typeDescriptions":{}}},"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6369,"nodeType":"IfStatement","src":"34553:105:13","trueBody":{"id":6368,"nodeType":"Block","src":"34592:66:13","statements":[{"errorCall":{"arguments":[{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"34641:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6364,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"34613:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6367,"nodeType":"RevertStatement","src":"34606:41:13"}]}},{"expression":{"arguments":[{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6349,"src":"34681:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6370,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:13","typeDescriptions":{}}},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6353,"id":6374,"nodeType":"Return","src":"34667:20:13"}]},"documentation":{"id":6347,"nodeType":"StructuredDocumentation","src":"34210:165:13","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6376,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:13","nodeType":"FunctionDefinition","parameters":{"id":6350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6349,"mutability":"mutable","name":"value","nameLocation":"34406:5:13","nodeType":"VariableDeclaration","scope":6376,"src":"34398:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6348,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:13"},"returnParameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6376,"src":"34436:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6351,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:13"},"scope":6387,"src":"34380:314:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6385,"nodeType":"Block","src":"34853:87:13","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:13","statements":[{"nodeType":"YulAssignment","src":"34902:22:13","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:13"},"nodeType":"YulFunctionCall","src":"34914:9:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:13"},"nodeType":"YulFunctionCall","src":"34907:17:13"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6379,"isOffset":false,"isSlot":false,"src":"34921:1:13","valueSize":1},{"declaration":6382,"isOffset":false,"isSlot":false,"src":"34902:1:13","valueSize":1}],"flags":["memory-safe"],"id":6384,"nodeType":"InlineAssembly","src":"34863:71:13"}]},"documentation":{"id":6377,"nodeType":"StructuredDocumentation","src":"34700:90:13","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6386,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:13","nodeType":"FunctionDefinition","parameters":{"id":6380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6379,"mutability":"mutable","name":"b","nameLocation":"34816:1:13","nodeType":"VariableDeclaration","scope":6386,"src":"34811:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6378,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:13"},"returnParameters":{"id":6383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6382,"mutability":"mutable","name":"u","nameLocation":"34850:1:13","nodeType":"VariableDeclaration","scope":6386,"src":"34842:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6381,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:13"},"scope":6387,"src":"34795:145:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6388,"src":"769:34173:13","usedErrors":[4632,4637,4644,4649],"usedEvents":[]}],"src":"192:34751:13"},"id":13},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6387],"SignedMath":[6531]},"id":6532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6389,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6532,"sourceUnit":6388,"src":"135:40:14","symbolAliases":[{"foreign":{"id":6390,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"143:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6392,"nodeType":"StructuredDocumentation","src":"177:80:14","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6531,"linearizedBaseContracts":[6531],"name":"SignedMath","nameLocation":"266:10:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":6421,"nodeType":"Block","src":"746:215:14","statements":[{"id":6420,"nodeType":"UncheckedBlock","src":"756:199:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"894:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"900:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"904:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6413,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6395,"src":"932:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6411,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6387,"src":"916:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6387_$","typeString":"type(library SafeCast)"}},"id":6412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6386,"src":"916:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6409,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:14","typeDescriptions":{}}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6403,"id":6419,"nodeType":"Return","src":"887:57:14"}]}]},"documentation":{"id":6393,"nodeType":"StructuredDocumentation","src":"283:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6422,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:14","nodeType":"FunctionDefinition","parameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"condition","nameLocation":"684:9:14","nodeType":"VariableDeclaration","scope":6422,"src":"679:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6394,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6397,"mutability":"mutable","name":"a","nameLocation":"702:1:14","nodeType":"VariableDeclaration","scope":6422,"src":"695:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6396,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6399,"mutability":"mutable","name":"b","nameLocation":"712:1:14","nodeType":"VariableDeclaration","scope":6422,"src":"705:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6398,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:14"},"returnParameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6422,"src":"738:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6401,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:14"},"scope":6531,"src":"662:299:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6440,"nodeType":"Block","src":"1102:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6433,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"1127:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6434,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"1131:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"1134:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6437,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6427,"src":"1137:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6432,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"1119:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6431,"id":6439,"nodeType":"Return","src":"1112:27:14"}]},"documentation":{"id":6423,"nodeType":"StructuredDocumentation","src":"967:66:14","text":" @dev Returns the largest of two signed numbers."},"id":6441,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:14","nodeType":"FunctionDefinition","parameters":{"id":6428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6425,"mutability":"mutable","name":"a","nameLocation":"1058:1:14","nodeType":"VariableDeclaration","scope":6441,"src":"1051:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6424,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6427,"mutability":"mutable","name":"b","nameLocation":"1068:1:14","nodeType":"VariableDeclaration","scope":6441,"src":"1061:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6426,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:14"},"returnParameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6441,"src":"1094:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6429,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:14"},"scope":6531,"src":"1038:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6459,"nodeType":"Block","src":"1288:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6452,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"1313:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6453,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"1317:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6444,"src":"1320:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6456,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6446,"src":"1323:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6451,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6422,"src":"1305:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6450,"id":6458,"nodeType":"Return","src":"1298:27:14"}]},"documentation":{"id":6442,"nodeType":"StructuredDocumentation","src":"1152:67:14","text":" @dev Returns the smallest of two signed numbers."},"id":6460,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:14","nodeType":"FunctionDefinition","parameters":{"id":6447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6444,"mutability":"mutable","name":"a","nameLocation":"1244:1:14","nodeType":"VariableDeclaration","scope":6460,"src":"1237:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6443,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6446,"mutability":"mutable","name":"b","nameLocation":"1254:1:14","nodeType":"VariableDeclaration","scope":6460,"src":"1247:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6445,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:14"},"returnParameters":{"id":6450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6460,"src":"1280:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6448,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:14"},"scope":6531,"src":"1224:108:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6503,"nodeType":"Block","src":"1537:162:14","statements":[{"assignments":[6471],"declarations":[{"constant":false,"id":6471,"mutability":"mutable","name":"x","nameLocation":"1606:1:14","nodeType":"VariableDeclaration","scope":6503,"src":"1599:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6470,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6484,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6472,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"1611:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"1615:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6475,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"1622:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6477,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"1626:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:14"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6485,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"1651:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6490,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6471,"src":"1671:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6488,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:14","typeDescriptions":{}}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6486,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:14","typeDescriptions":{}}},"id":6494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6495,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"1685:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6496,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6465,"src":"1689:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6469,"id":6502,"nodeType":"Return","src":"1644:48:14"}]},"documentation":{"id":6461,"nodeType":"StructuredDocumentation","src":"1338:126:14","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6504,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:14","nodeType":"FunctionDefinition","parameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6463,"mutability":"mutable","name":"a","nameLocation":"1493:1:14","nodeType":"VariableDeclaration","scope":6504,"src":"1486:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6462,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6465,"mutability":"mutable","name":"b","nameLocation":"1503:1:14","nodeType":"VariableDeclaration","scope":6504,"src":"1496:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6464,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:14"},"returnParameters":{"id":6469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6504,"src":"1529:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6467,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:14"},"scope":6531,"src":"1469:230:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6529,"nodeType":"Block","src":"1843:767:14","statements":[{"id":6528,"nodeType":"UncheckedBlock","src":"1853:751:14","statements":[{"assignments":[6513],"declarations":[{"constant":false,"id":6513,"mutability":"mutable","name":"mask","nameLocation":"2424:4:14","nodeType":"VariableDeclaration","scope":6528,"src":"2417:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6512,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6517,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6514,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"2431:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6520,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"2576:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6521,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"2580:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6524,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"2588:4:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6518,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:14","typeDescriptions":{}}},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6511,"id":6527,"nodeType":"Return","src":"2560:33:14"}]}]},"documentation":{"id":6505,"nodeType":"StructuredDocumentation","src":"1705:78:14","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6530,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:14","nodeType":"FunctionDefinition","parameters":{"id":6508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6507,"mutability":"mutable","name":"n","nameLocation":"1808:1:14","nodeType":"VariableDeclaration","scope":6530,"src":"1801:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6506,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:14"},"returnParameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6530,"src":"1834:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:14"},"scope":6531,"src":"1788:822:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6532,"src":"258:2354:14","usedErrors":[],"usedEvents":[]}],"src":"109:2504:14"},"id":14},"contracts/IssuerRegistry.sol":{"ast":{"absolutePath":"contracts/IssuerRegistry.sol","exportedSymbols":{"Context":[1511],"IIssuerRegistry":[8016],"IssuerRegistry":[6996],"Ownable":[147]},"id":6997,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6533,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:15"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6534,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6997,"sourceUnit":148,"src":"61:52:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IIssuerRegistry.sol","file":"./interfaces/IIssuerRegistry.sol","id":6535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6997,"sourceUnit":8017,"src":"115:42:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6537,"name":"IIssuerRegistry","nameLocations":["305:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":8016,"src":"305:15:15"},"id":6538,"nodeType":"InheritanceSpecifier","src":"305:15:15"},{"baseName":{"id":6539,"name":"Ownable","nameLocations":["322:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"322:7:15"},"id":6540,"nodeType":"InheritanceSpecifier","src":"322:7:15"}],"canonicalName":"IssuerRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":6536,"nodeType":"StructuredDocumentation","src":"161:115:15","text":" @title IssuerRegistry\n @dev Implementation of the issuer registry for verifying certificate issuers"},"fullyImplemented":true,"id":6996,"linearizedBaseContracts":[6996,147,1511,8016],"name":"IssuerRegistry","nameLocation":"287:14:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6545,"mutability":"mutable","name":"_issuers","nameLocation":"427:8:15","nodeType":"VariableDeclaration","scope":6996,"src":"388:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData)"},"typeName":{"id":6544,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6541,"name":"address","nodeType":"ElementaryTypeName","src":"396:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"388:30:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6543,"nodeType":"UserDefinedTypeName","pathNode":{"id":6542,"name":"IssuerData","nameLocations":["407:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":7934,"src":"407:10:15"},"referencedDeclaration":7934,"src":"407:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage_ptr","typeString":"struct IIssuerRegistry.IssuerData"}}},"visibility":"private"},{"constant":false,"id":6549,"mutability":"mutable","name":"_domainToIssuer","nameLocation":"529:15:15","nodeType":"VariableDeclaration","scope":6996,"src":"494:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":6548,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6546,"name":"string","nodeType":"ElementaryTypeName","src":"502:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"494:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6547,"name":"address","nodeType":"ElementaryTypeName","src":"512:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":6553,"mutability":"mutable","name":"_socialMediaToIssuer","nameLocation":"648:20:15","nodeType":"VariableDeclaration","scope":6996,"src":"613:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":6552,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6550,"name":"string","nodeType":"ElementaryTypeName","src":"621:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"613:26:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6551,"name":"address","nodeType":"ElementaryTypeName","src":"631:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":6557,"mutability":"mutable","name":"_admins","nameLocation":"762:7:15","nodeType":"VariableDeclaration","scope":6996,"src":"729:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6556,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6554,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"729:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6555,"name":"bool","nodeType":"ElementaryTypeName","src":"748:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":6572,"nodeType":"Block","src":"878:79:15","statements":[{"expression":{"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6565,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"923:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6568,"indexExpression":{"expression":{"id":6566,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"931:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"935:6:15","memberName":"sender","nodeType":"MemberAccess","src":"931:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"923:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"945:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"923:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6571,"nodeType":"ExpressionStatement","src":"923:26:15"}]},"documentation":{"id":6558,"nodeType":"StructuredDocumentation","src":"782:56:15","text":" @dev Constructor for IssuerRegistry"},"id":6573,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":6561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"866:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"870:6:15","memberName":"sender","nodeType":"MemberAccess","src":"866:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6563,"kind":"baseConstructorSpecifier","modifierName":{"id":6560,"name":"Ownable","nameLocations":["858:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"858:7:15"},"nodeType":"ModifierInvocation","src":"858:19:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6559,"nodeType":"ParameterList","parameters":[],"src":"855:2:15"},"returnParameters":{"id":6564,"nodeType":"ParameterList","parameters":[],"src":"878:0:15"},"scope":6996,"src":"844:113:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6585,"nodeType":"Block","src":"1068:101:15","statements":[{"expression":{"arguments":[{"baseExpression":{"id":6577,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"1087:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6580,"indexExpression":{"expression":{"id":6578,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1095:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1099:6:15","memberName":"sender","nodeType":"MemberAccess","src":"1095:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1087:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49737375657252656769737472793a2043616c6c6572206973206e6f7420616e2061646d696e","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1108:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ae16b7a678f64f31ff81d9de54c4761fbbe0c9d45a0070a756bf01323abdc51","typeString":"literal_string \"IssuerRegistry: Caller is not an admin\""},"value":"IssuerRegistry: Caller is not an admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ae16b7a678f64f31ff81d9de54c4761fbbe0c9d45a0070a756bf01323abdc51","typeString":"literal_string \"IssuerRegistry: Caller is not an admin\""}],"id":6576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1079:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1079:70:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6583,"nodeType":"ExpressionStatement","src":"1079:70:15"},{"id":6584,"nodeType":"PlaceholderStatement","src":"1160:1:15"}]},"documentation":{"id":6574,"nodeType":"StructuredDocumentation","src":"969:72:15","text":" @dev Modifier to restrict function access to admins"},"id":6586,"name":"onlyAdmin","nameLocation":"1056:9:15","nodeType":"ModifierDefinition","parameters":{"id":6575,"nodeType":"ParameterList","parameters":[],"src":"1065:2:15"},"src":"1047:122:15","virtual":false,"visibility":"internal"},{"body":{"id":6600,"nodeType":"Block","src":"1326:40:15","statements":[{"expression":{"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6594,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"1337:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6596,"indexExpression":{"id":6595,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"1345:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1337:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1354:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1337:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6599,"nodeType":"ExpressionStatement","src":"1337:21:15"}]},"documentation":{"id":6587,"nodeType":"StructuredDocumentation","src":"1181:87:15","text":" @dev Add an admin\n @param admin The address to add as admin"},"functionSelector":"70480275","id":6601,"implemented":true,"kind":"function","modifiers":[{"id":6592,"kind":"modifierInvocation","modifierName":{"id":6591,"name":"onlyOwner","nameLocations":["1316:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1316:9:15"},"nodeType":"ModifierInvocation","src":"1316:9:15"}],"name":"addAdmin","nameLocation":"1283:8:15","nodeType":"FunctionDefinition","parameters":{"id":6590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"admin","nameLocation":"1300:5:15","nodeType":"VariableDeclaration","scope":6601,"src":"1292:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6588,"name":"address","nodeType":"ElementaryTypeName","src":"1292:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1291:15:15"},"returnParameters":{"id":6593,"nodeType":"ParameterList","parameters":[],"src":"1326:0:15"},"scope":6996,"src":"1274:92:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6615,"nodeType":"Block","src":"1532:41:15","statements":[{"expression":{"id":6613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6609,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6557,"src":"1543:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":6611,"indexExpression":{"id":6610,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6604,"src":"1551:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1543:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1560:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1543:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6614,"nodeType":"ExpressionStatement","src":"1543:22:15"}]},"documentation":{"id":6602,"nodeType":"StructuredDocumentation","src":"1378:93:15","text":" @dev Remove an admin\n @param admin The address to remove as admin"},"functionSelector":"1785f53c","id":6616,"implemented":true,"kind":"function","modifiers":[{"id":6607,"kind":"modifierInvocation","modifierName":{"id":6606,"name":"onlyOwner","nameLocations":["1522:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1522:9:15"},"nodeType":"ModifierInvocation","src":"1522:9:15"}],"name":"removeAdmin","nameLocation":"1486:11:15","nodeType":"FunctionDefinition","parameters":{"id":6605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6604,"mutability":"mutable","name":"admin","nameLocation":"1506:5:15","nodeType":"VariableDeclaration","scope":6616,"src":"1498:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6603,"name":"address","nodeType":"ElementaryTypeName","src":"1498:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1497:15:15"},"returnParameters":{"id":6608,"nodeType":"ParameterList","parameters":[],"src":"1532:0:15"},"scope":6996,"src":"1477:96:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7944],"body":{"id":6671,"nodeType":"Block","src":"2023:789:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6628,"name":"_domainToIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"2244:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6630,"indexExpression":{"id":6629,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"2260:6:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2244:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2279:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2271:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6631,"name":"address","nodeType":"ElementaryTypeName","src":"2271:7:15","typeDescriptions":{}}},"id":6634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2244:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49737375657252656769737472793a20446f6d61696e20616c72656164792072656769737465726564","id":6636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2283:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6291deb225596c25ca20a0f3313a25b9da7be5d90294e5fc9c4c0ba6f3095c56","typeString":"literal_string \"IssuerRegistry: Domain already registered\""},"value":"IssuerRegistry: Domain already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6291deb225596c25ca20a0f3313a25b9da7be5d90294e5fc9c4c0ba6f3095c56","typeString":"literal_string \"IssuerRegistry: Domain already registered\""}],"id":6627,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2236:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:91:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6638,"nodeType":"ExpressionStatement","src":"2236:91:15"},{"expression":{"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6639,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"2379:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6642,"indexExpression":{"expression":{"id":6640,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2388:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2392:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2388:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2379:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6644,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2443:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2447:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2443:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6646,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"2474:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2485:2:15","memberName":"T1","nodeType":"MemberAccess","referencedDeclaration":7918,"src":"2474:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},{"id":6648,"name":"issuerName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"2508:10:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6649,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"2551:6:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":6650,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2584:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2590:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"2584:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2624:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6643,"name":"IssuerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"2402:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_IssuerData_$7934_storage_ptr_$","typeString":"type(struct IIssuerRegistry.IssuerData storage pointer)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2428:13:15","2468:4:15","2502:4:15","2533:16:15","2572:10:15","2614:8:15"],"names":["issuerAddress","tier","name","verificationData","verifiedAt","isActive"],"nodeType":"FunctionCall","src":"2402:238:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_memory_ptr","typeString":"struct IIssuerRegistry.IssuerData memory"}},"src":"2379:261:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6655,"nodeType":"ExpressionStatement","src":"2379:261:15"},{"expression":{"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6656,"name":"_domainToIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"2689:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6658,"indexExpression":{"id":6657,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6621,"src":"2705:6:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2689:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6659,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2715:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2719:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2715:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2689:36:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6662,"nodeType":"ExpressionStatement","src":"2689:36:15"},{"eventCall":{"arguments":[{"expression":{"id":6664,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2766:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2770:6:15","memberName":"sender","nodeType":"MemberAccess","src":"2766:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6666,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"2778:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2789:2:15","memberName":"T1","nodeType":"MemberAccess","referencedDeclaration":7918,"src":"2778:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},{"id":6668,"name":"issuerName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"2793:10:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6663,"name":"IssuerVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"2751:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_IssuerTier_$7919_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,enum IIssuerRegistry.IssuerTier,string memory)"}},"id":6669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6670,"nodeType":"EmitStatement","src":"2746:58:15"}]},"documentation":{"id":6617,"nodeType":"StructuredDocumentation","src":"1585:270:15","text":" @dev Verifies an issuer with T1 verification (DNS)\n @param issuerName The name of the issuer organization\n @param domain The domain name used for verification\n @param verificationData Additional data used in verification process"},"functionSelector":"4181186f","id":6672,"implemented":true,"kind":"function","modifiers":[],"name":"verifyIssuerT1","nameLocation":"1870:14:15","nodeType":"FunctionDefinition","overrides":{"id":6625,"nodeType":"OverrideSpecifier","overrides":[],"src":"2014:8:15"},"parameters":{"id":6624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"issuerName","nameLocation":"1911:10:15","nodeType":"VariableDeclaration","scope":6672,"src":"1895:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6618,"name":"string","nodeType":"ElementaryTypeName","src":"1895:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6621,"mutability":"mutable","name":"domain","nameLocation":"1948:6:15","nodeType":"VariableDeclaration","scope":6672,"src":"1932:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6620,"name":"string","nodeType":"ElementaryTypeName","src":"1932:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6623,"mutability":"mutable","name":"verificationData","nameLocation":"1981:16:15","nodeType":"VariableDeclaration","scope":6672,"src":"1965:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6622,"name":"string","nodeType":"ElementaryTypeName","src":"1965:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1884:120:15"},"returnParameters":{"id":6626,"nodeType":"ParameterList","parameters":[],"src":"2023:0:15"},"scope":6996,"src":"1861:951:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7952],"body":{"id":6725,"nodeType":"Block","src":"3184:859:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6682,"name":"_socialMediaToIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"3421:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6684,"indexExpression":{"id":6683,"name":"socialMediaUrl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"3442:14:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3421:36:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3469:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3461:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6685,"name":"address","nodeType":"ElementaryTypeName","src":"3461:7:15","typeDescriptions":{}}},"id":6688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3461:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3421:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49737375657252656769737472793a20536f6369616c206d656469612055524c20616c72656164792072656769737465726564","id":6690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3473:53:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_15c2df89cc928a5defa8b99f77d32747c862880d54502d24b029d5f69b5180ea","typeString":"literal_string \"IssuerRegistry: Social media URL already registered\""},"value":"IssuerRegistry: Social media URL already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_15c2df89cc928a5defa8b99f77d32747c862880d54502d24b029d5f69b5180ea","typeString":"literal_string \"IssuerRegistry: Social media URL already registered\""}],"id":6681,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3413:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3413:114:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6692,"nodeType":"ExpressionStatement","src":"3413:114:15"},{"expression":{"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6693,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"3579:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6696,"indexExpression":{"expression":{"id":6694,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3588:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3592:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3588:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3579:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6698,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3643:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3647:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3643:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6700,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"3674:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3685:2:15","memberName":"T2","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"3674:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},{"id":6702,"name":"issuerName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"3708:10:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":6703,"name":"socialMediaUrl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"3751:14:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":6704,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3792:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3798:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"3792:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3832:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6697,"name":"IssuerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"3602:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_IssuerData_$7934_storage_ptr_$","typeString":"type(struct IIssuerRegistry.IssuerData storage pointer)"}},"id":6707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3628:13:15","3668:4:15","3702:4:15","3733:16:15","3780:10:15","3822:8:15"],"names":["issuerAddress","tier","name","verificationData","verifiedAt","isActive"],"nodeType":"FunctionCall","src":"3602:246:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_memory_ptr","typeString":"struct IIssuerRegistry.IssuerData memory"}},"src":"3579:269:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6709,"nodeType":"ExpressionStatement","src":"3579:269:15"},{"expression":{"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6710,"name":"_socialMediaToIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"3907:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6712,"indexExpression":{"id":6711,"name":"socialMediaUrl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"3928:14:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3907:36:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6713,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3946:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3950:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3946:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3907:49:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6716,"nodeType":"ExpressionStatement","src":"3907:49:15"},{"eventCall":{"arguments":[{"expression":{"id":6718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3997:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4001:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3997:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6720,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"4009:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4020:2:15","memberName":"T2","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"4009:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},{"id":6722,"name":"issuerName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6675,"src":"4024:10:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6717,"name":"IssuerVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"3982:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_IssuerTier_$7919_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,enum IIssuerRegistry.IssuerTier,string memory)"}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3982:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6724,"nodeType":"EmitStatement","src":"3977:58:15"}]},"documentation":{"id":6673,"nodeType":"StructuredDocumentation","src":"2824:227:15","text":" @dev Verifies an issuer with T2 verification (social media)\n @param issuerName The name of the issuer organization\n @param socialMediaUrl The URL of the social media post used for verification"},"functionSelector":"62078d2d","id":6726,"implemented":true,"kind":"function","modifiers":[],"name":"verifyIssuerT2","nameLocation":"3066:14:15","nodeType":"FunctionDefinition","overrides":{"id":6679,"nodeType":"OverrideSpecifier","overrides":[],"src":"3175:8:15"},"parameters":{"id":6678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6675,"mutability":"mutable","name":"issuerName","nameLocation":"3107:10:15","nodeType":"VariableDeclaration","scope":6726,"src":"3091:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6674,"name":"string","nodeType":"ElementaryTypeName","src":"3091:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6677,"mutability":"mutable","name":"socialMediaUrl","nameLocation":"3144:14:15","nodeType":"VariableDeclaration","scope":6726,"src":"3128:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6676,"name":"string","nodeType":"ElementaryTypeName","src":"3128:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3080:85:15"},"returnParameters":{"id":6680,"nodeType":"ParameterList","parameters":[],"src":"3184:0:15"},"scope":6996,"src":"3057:986:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7960],"body":{"id":6759,"nodeType":"Block","src":"4377:422:15","statements":[{"expression":{"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6737,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"4419:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6739,"indexExpression":{"id":6738,"name":"issuerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"4428:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4419:23:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6741,"name":"issuerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"4486:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6742,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"4520:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4531:6:15","memberName":"MANUAL","nodeType":"MemberAccess","referencedDeclaration":7916,"src":"4520:17:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},{"id":6744,"name":"issuerName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"4558:10:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"hexValue":"4d616e75616c20766572696669636174696f6e","id":6745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4601:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c8810587b359dce92746de981ea43092d6ed471ce9cb95fd522dac0909d1864","typeString":"literal_string \"Manual verification\""},"value":"Manual verification"},{"expression":{"id":6746,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4649:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4655:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"4649:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":6748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4689:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_stringliteral_4c8810587b359dce92746de981ea43092d6ed471ce9cb95fd522dac0909d1864","typeString":"literal_string \"Manual verification\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6740,"name":"IssuerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"4445:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_IssuerData_$7934_storage_ptr_$","typeString":"type(struct IIssuerRegistry.IssuerData storage pointer)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4471:13:15","4514:4:15","4552:4:15","4583:16:15","4637:10:15","4679:8:15"],"names":["issuerAddress","tier","name","verificationData","verifiedAt","isActive"],"nodeType":"FunctionCall","src":"4445:260:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_memory_ptr","typeString":"struct IIssuerRegistry.IssuerData memory"}},"src":"4419:286:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6751,"nodeType":"ExpressionStatement","src":"4419:286:15"},{"eventCall":{"arguments":[{"id":6753,"name":"issuerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6729,"src":"4746:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6754,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"4761:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4772:6:15","memberName":"MANUAL","nodeType":"MemberAccess","referencedDeclaration":7916,"src":"4761:17:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},{"id":6756,"name":"issuerName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"4780:10:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":6752,"name":"IssuerVerified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8004,"src":"4731:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_IssuerTier_$7919_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,enum IIssuerRegistry.IssuerTier,string memory)"}},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4731:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6758,"nodeType":"EmitStatement","src":"4726:65:15"}]},"documentation":{"id":6727,"nodeType":"StructuredDocumentation","src":"4055:184:15","text":" @dev Manually verifies an issuer (only admin)\n @param issuerAddress The address to be verified\n @param issuerName The name of the issuer organization"},"functionSelector":"96ae3709","id":6760,"implemented":true,"kind":"function","modifiers":[{"id":6735,"kind":"modifierInvocation","modifierName":{"id":6734,"name":"onlyAdmin","nameLocations":["4367:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":6586,"src":"4367:9:15"},"nodeType":"ModifierInvocation","src":"4367:9:15"}],"name":"manualVerifyIssuer","nameLocation":"4254:18:15","nodeType":"FunctionDefinition","overrides":{"id":6733,"nodeType":"OverrideSpecifier","overrides":[],"src":"4358:8:15"},"parameters":{"id":6732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6729,"mutability":"mutable","name":"issuerAddress","nameLocation":"4291:13:15","nodeType":"VariableDeclaration","scope":6760,"src":"4283:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6728,"name":"address","nodeType":"ElementaryTypeName","src":"4283:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6731,"mutability":"mutable","name":"issuerName","nameLocation":"4331:10:15","nodeType":"VariableDeclaration","scope":6760,"src":"4315:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6730,"name":"string","nodeType":"ElementaryTypeName","src":"4315:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4272:76:15"},"returnParameters":{"id":6736,"nodeType":"ParameterList","parameters":[],"src":"4377:0:15"},"scope":6996,"src":"4245:554:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7968],"body":{"id":6860,"nodeType":"Block","src":"5134:993:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6770,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"5194:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6773,"indexExpression":{"expression":{"id":6771,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5203:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5207:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5203:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5194:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5215:4:15","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":7925,"src":"5194:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6775,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"5223:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5234:2:15","memberName":"T2","nodeType":"MemberAccess","referencedDeclaration":7917,"src":"5223:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"src":"5194:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49737375657252656769737472793a2043616c6c6572206973206e6f74206120543220697373756572","id":6778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5238:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b25f10b81ebcff67eaeeddecc76e99eafb2276643d5aa3a26186ba20962164fa","typeString":"literal_string \"IssuerRegistry: Caller is not a T2 issuer\""},"value":"IssuerRegistry: Caller is not a T2 issuer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b25f10b81ebcff67eaeeddecc76e99eafb2276643d5aa3a26186ba20962164fa","typeString":"literal_string \"IssuerRegistry: Caller is not a T2 issuer\""}],"id":6769,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5186:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5186:96:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6780,"nodeType":"ExpressionStatement","src":"5186:96:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6782,"name":"_domainToIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"5362:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6784,"indexExpression":{"id":6783,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"5378:6:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5362:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5397:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6785,"name":"address","nodeType":"ElementaryTypeName","src":"5389:7:15","typeDescriptions":{}}},"id":6788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5362:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49737375657252656769737472793a20446f6d61696e20616c72656164792072656769737465726564","id":6790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5401:43:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6291deb225596c25ca20a0f3313a25b9da7be5d90294e5fc9c4c0ba6f3095c56","typeString":"literal_string \"IssuerRegistry: Domain already registered\""},"value":"IssuerRegistry: Domain already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6291deb225596c25ca20a0f3313a25b9da7be5d90294e5fc9c4c0ba6f3095c56","typeString":"literal_string \"IssuerRegistry: Domain already registered\""}],"id":6781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:91:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6792,"nodeType":"ExpressionStatement","src":"5354:91:15"},{"assignments":[6795],"declarations":[{"constant":false,"id":6795,"mutability":"mutable","name":"oldTier","nameLocation":"5514:7:15","nodeType":"VariableDeclaration","scope":6860,"src":"5503:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"typeName":{"id":6794,"nodeType":"UserDefinedTypeName","pathNode":{"id":6793,"name":"IssuerTier","nameLocations":["5503:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":7919,"src":"5503:10:15"},"referencedDeclaration":7919,"src":"5503:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"visibility":"internal"}],"id":6801,"initialValue":{"expression":{"baseExpression":{"id":6796,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"5524:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6799,"indexExpression":{"expression":{"id":6797,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5533:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5537:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5533:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5524:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6800,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5545:4:15","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":7925,"src":"5524:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"nodeType":"VariableDeclarationStatement","src":"5503:46:15"},{"assignments":[6803],"declarations":[{"constant":false,"id":6803,"mutability":"mutable","name":"oldVerificationData","nameLocation":"5574:19:15","nodeType":"VariableDeclaration","scope":6860,"src":"5560:33:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6802,"name":"string","nodeType":"ElementaryTypeName","src":"5560:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6809,"initialValue":{"expression":{"baseExpression":{"id":6804,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"5596:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6807,"indexExpression":{"expression":{"id":6805,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5605:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5609:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5605:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5596:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5617:16:15","memberName":"verificationData","nodeType":"MemberAccess","referencedDeclaration":7929,"src":"5596:37:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5560:73:15"},{"expression":{"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6810,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"5685:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6813,"indexExpression":{"expression":{"id":6811,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5694:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5698:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5694:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5685:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5706:4:15","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":7925,"src":"5685:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6815,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"5713:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5724:2:15","memberName":"T1","nodeType":"MemberAccess","referencedDeclaration":7918,"src":"5713:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"src":"5685:41:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"id":6818,"nodeType":"ExpressionStatement","src":"5685:41:15"},{"expression":{"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6819,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"5737:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6822,"indexExpression":{"expression":{"id":6820,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5746:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5750:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5746:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5737:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5758:16:15","memberName":"verificationData","nodeType":"MemberAccess","referencedDeclaration":7929,"src":"5737:37:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6824,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"5777:6:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"src":"5737:46:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6826,"nodeType":"ExpressionStatement","src":"5737:46:15"},{"expression":{"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6827,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"5794:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6830,"indexExpression":{"expression":{"id":6828,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5803:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5807:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5803:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5794:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5815:10:15","memberName":"verifiedAt","nodeType":"MemberAccess","referencedDeclaration":7931,"src":"5794:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6832,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5828:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5834:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"5828:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5794:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6835,"nodeType":"ExpressionStatement","src":"5794:49:15"},{"expression":{"id":6841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6836,"name":"_domainToIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"5892:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6838,"indexExpression":{"id":6837,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"5908:6:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5892:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6839,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5918:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5922:6:15","memberName":"sender","nodeType":"MemberAccess","src":"5918:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5892:36:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6842,"nodeType":"ExpressionStatement","src":"5892:36:15"},{"expression":{"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6843,"name":"_socialMediaToIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"5989:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6845,"indexExpression":{"id":6844,"name":"oldVerificationData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6803,"src":"6010:19:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5989:41:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":6848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6041:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6033:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6846,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:15","typeDescriptions":{}}},"id":6849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6033:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5989:54:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6851,"nodeType":"ExpressionStatement","src":"5989:54:15"},{"eventCall":{"arguments":[{"expression":{"id":6853,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6084:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6088:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6084:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6855,"name":"oldTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"6096:7:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},{"expression":{"id":6856,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"6105:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6116:2:15","memberName":"T1","nodeType":"MemberAccess","referencedDeclaration":7918,"src":"6105:13:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}],"id":6852,"name":"IssuerUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8015,"src":"6069:14:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_IssuerTier_$7919_$_t_enum$_IssuerTier_$7919_$returns$__$","typeString":"function (address,enum IIssuerRegistry.IssuerTier,enum IIssuerRegistry.IssuerTier)"}},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6069:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6859,"nodeType":"EmitStatement","src":"6064:55:15"}]},"documentation":{"id":6761,"nodeType":"StructuredDocumentation","src":"4811:195:15","text":" @dev Upgrades an issuer from T2 to T1\n @param domain The domain name used for verification\n @param verificationData Additional data used in verification process"},"functionSelector":"f52fa8e3","id":6861,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToT1","nameLocation":"5021:11:15","nodeType":"FunctionDefinition","overrides":{"id":6767,"nodeType":"OverrideSpecifier","overrides":[],"src":"5125:8:15"},"parameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6763,"mutability":"mutable","name":"domain","nameLocation":"5059:6:15","nodeType":"VariableDeclaration","scope":6861,"src":"5043:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6762,"name":"string","nodeType":"ElementaryTypeName","src":"5043:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6765,"mutability":"mutable","name":"verificationData","nameLocation":"5092:16:15","nodeType":"VariableDeclaration","scope":6861,"src":"5076:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6764,"name":"string","nodeType":"ElementaryTypeName","src":"5076:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5032:83:15"},"returnParameters":{"id":6768,"nodeType":"ParameterList","parameters":[],"src":"5134:0:15"},"scope":6996,"src":"5012:1115:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7976],"body":{"id":6883,"nodeType":"Block","src":"6409:95:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6870,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"6427:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6872,"indexExpression":{"id":6871,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"6436:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6427:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6444:4:15","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":7925,"src":"6427:21:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6874,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"6452:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6463:4:15","memberName":"NONE","nodeType":"MemberAccess","referencedDeclaration":7915,"src":"6452:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"src":"6427:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"expression":{"baseExpression":{"id":6877,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"6471:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6879,"indexExpression":{"id":6878,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"6480:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6471:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6488:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":7933,"src":"6471:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6427:69:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6869,"id":6882,"nodeType":"Return","src":"6420:76:15"}]},"documentation":{"id":6862,"nodeType":"StructuredDocumentation","src":"6139:184:15","text":" @dev Checks if an address is a verified issuer\n @param issuer The address to check\n @return True if the address is a verified issuer, false otherwise"},"functionSelector":"ce21e1cb","id":6884,"implemented":true,"kind":"function","modifiers":[],"name":"isVerifiedIssuer","nameLocation":"6338:16:15","nodeType":"FunctionDefinition","overrides":{"id":6866,"nodeType":"OverrideSpecifier","overrides":[],"src":"6385:8:15"},"parameters":{"id":6865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6864,"mutability":"mutable","name":"issuer","nameLocation":"6363:6:15","nodeType":"VariableDeclaration","scope":6884,"src":"6355:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6863,"name":"address","nodeType":"ElementaryTypeName","src":"6355:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6354:16:15"},"returnParameters":{"id":6869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6884,"src":"6403:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6867,"name":"bool","nodeType":"ElementaryTypeName","src":"6403:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6402:6:15"},"scope":6996,"src":"6329:175:15","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7985],"body":{"id":6899,"nodeType":"Block","src":"6751:47:15","statements":[{"expression":{"expression":{"baseExpression":{"id":6894,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"6769:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6896,"indexExpression":{"id":6895,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"6778:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6769:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6897,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6786:4:15","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":7925,"src":"6769:21:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"functionReturnParameters":6893,"id":6898,"nodeType":"Return","src":"6762:28:15"}]},"documentation":{"id":6885,"nodeType":"StructuredDocumentation","src":"6516:146:15","text":" @dev Gets the tier level of an issuer\n @param issuer The address to check\n @return The tier level of the issuer"},"functionSelector":"3dbf1db3","id":6900,"implemented":true,"kind":"function","modifiers":[],"name":"getIssuerTier","nameLocation":"6677:13:15","nodeType":"FunctionDefinition","overrides":{"id":6889,"nodeType":"OverrideSpecifier","overrides":[],"src":"6721:8:15"},"parameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6887,"mutability":"mutable","name":"issuer","nameLocation":"6699:6:15","nodeType":"VariableDeclaration","scope":6900,"src":"6691:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6886,"name":"address","nodeType":"ElementaryTypeName","src":"6691:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6690:16:15"},"returnParameters":{"id":6893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6900,"src":"6739:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"typeName":{"id":6891,"nodeType":"UserDefinedTypeName","pathNode":{"id":6890,"name":"IssuerTier","nameLocations":["6739:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":7919,"src":"6739:10:15"},"referencedDeclaration":7919,"src":"6739:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"visibility":"internal"}],"src":"6738:12:15"},"scope":6996,"src":"6668:130:15","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7994],"body":{"id":6914,"nodeType":"Block","src":"7041:42:15","statements":[{"expression":{"baseExpression":{"id":6910,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"7059:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6912,"indexExpression":{"id":6911,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"7068:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7059:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"functionReturnParameters":6909,"id":6913,"nodeType":"Return","src":"7052:23:15"}]},"documentation":{"id":6901,"nodeType":"StructuredDocumentation","src":"6810:135:15","text":" @dev Gets the data for an issuer\n @param issuer The address to get data for\n @return The issuer data"},"functionSelector":"88fd4a03","id":6915,"implemented":true,"kind":"function","modifiers":[],"name":"getIssuerData","nameLocation":"6960:13:15","nodeType":"FunctionDefinition","overrides":{"id":6905,"nodeType":"OverrideSpecifier","overrides":[],"src":"7004:8:15"},"parameters":{"id":6904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6903,"mutability":"mutable","name":"issuer","nameLocation":"6982:6:15","nodeType":"VariableDeclaration","scope":6915,"src":"6974:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6902,"name":"address","nodeType":"ElementaryTypeName","src":"6974:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6973:16:15"},"returnParameters":{"id":6909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6908,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6915,"src":"7022:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_memory_ptr","typeString":"struct IIssuerRegistry.IssuerData"},"typeName":{"id":6907,"nodeType":"UserDefinedTypeName","pathNode":{"id":6906,"name":"IssuerData","nameLocations":["7022:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":7934,"src":"7022:10:15"},"referencedDeclaration":7934,"src":"7022:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage_ptr","typeString":"struct IIssuerRegistry.IssuerData"}},"visibility":"internal"}],"src":"7021:19:15"},"scope":6996,"src":"6951:132:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6927,"nodeType":"Block","src":"7370:49:15","statements":[{"expression":{"baseExpression":{"id":6923,"name":"_domainToIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6549,"src":"7388:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6925,"indexExpression":{"id":6924,"name":"domain","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6918,"src":"7404:6:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7388:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6922,"id":6926,"nodeType":"Return","src":"7381:30:15"}]},"documentation":{"id":6916,"nodeType":"StructuredDocumentation","src":"7095:188:15","text":" @dev Checks if a domain is registered\n @param domain The domain to check\n @return The address associated with the domain, or address(0) if not registered"},"functionSelector":"af221c59","id":6928,"implemented":true,"kind":"function","modifiers":[],"name":"getDomainIssuer","nameLocation":"7298:15:15","nodeType":"FunctionDefinition","parameters":{"id":6919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6918,"mutability":"mutable","name":"domain","nameLocation":"7330:6:15","nodeType":"VariableDeclaration","scope":6928,"src":"7314:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6917,"name":"string","nodeType":"ElementaryTypeName","src":"7314:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7313:24:15"},"returnParameters":{"id":6922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6928,"src":"7361:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6920,"name":"address","nodeType":"ElementaryTypeName","src":"7361:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7360:9:15"},"scope":6996,"src":"7289:130:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6940,"nodeType":"Block","src":"7757:62:15","statements":[{"expression":{"baseExpression":{"id":6936,"name":"_socialMediaToIssuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"7775:20:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":6938,"indexExpression":{"id":6937,"name":"socialMediaUrl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6931,"src":"7796:14:15","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7775:36:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6935,"id":6939,"nodeType":"Return","src":"7768:43:15"}]},"documentation":{"id":6929,"nodeType":"StructuredDocumentation","src":"7431:226:15","text":" @dev Checks if a social media URL is registered\n @param socialMediaUrl The social media URL to check\n @return The address associated with the social media URL, or address(0) if not registered"},"functionSelector":"de222a9f","id":6941,"implemented":true,"kind":"function","modifiers":[],"name":"getSocialMediaIssuer","nameLocation":"7672:20:15","nodeType":"FunctionDefinition","parameters":{"id":6932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6931,"mutability":"mutable","name":"socialMediaUrl","nameLocation":"7709:14:15","nodeType":"VariableDeclaration","scope":6941,"src":"7693:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":6930,"name":"string","nodeType":"ElementaryTypeName","src":"7693:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7692:32:15"},"returnParameters":{"id":6935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6941,"src":"7748:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6933,"name":"address","nodeType":"ElementaryTypeName","src":"7748:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7747:9:15"},"scope":6996,"src":"7663:156:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6967,"nodeType":"Block","src":"7993:155:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6950,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"8012:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6952,"indexExpression":{"id":6951,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"8021:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8012:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6953,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8029:4:15","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":7925,"src":"8012:21:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6954,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"8037:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8048:4:15","memberName":"NONE","nodeType":"MemberAccess","referencedDeclaration":7915,"src":"8037:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"src":"8012:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49737375657252656769737472793a204e6f742061207265676973746572656420697373756572","id":6957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8054:41:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d167a22411753196fb802f79a8ee1894b1ed2196cbac251acaf1a6dbfdb92e1","typeString":"literal_string \"IssuerRegistry: Not a registered issuer\""},"value":"IssuerRegistry: Not a registered issuer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d167a22411753196fb802f79a8ee1894b1ed2196cbac251acaf1a6dbfdb92e1","typeString":"literal_string \"IssuerRegistry: Not a registered issuer\""}],"id":6949,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8004:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8004:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6959,"nodeType":"ExpressionStatement","src":"8004:92:15"},{"expression":{"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6960,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"8107:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6962,"indexExpression":{"id":6961,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6944,"src":"8116:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8107:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8124:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":7933,"src":"8107:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8135:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8107:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6966,"nodeType":"ExpressionStatement","src":"8107:33:15"}]},"documentation":{"id":6942,"nodeType":"StructuredDocumentation","src":"7831:95:15","text":" @dev Deactivates an issuer\n @param issuer The address to deactivate"},"functionSelector":"7a009135","id":6968,"implemented":true,"kind":"function","modifiers":[{"id":6947,"kind":"modifierInvocation","modifierName":{"id":6946,"name":"onlyAdmin","nameLocations":["7983:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":6586,"src":"7983:9:15"},"nodeType":"ModifierInvocation","src":"7983:9:15"}],"name":"deactivateIssuer","nameLocation":"7941:16:15","nodeType":"FunctionDefinition","parameters":{"id":6945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6944,"mutability":"mutable","name":"issuer","nameLocation":"7966:6:15","nodeType":"VariableDeclaration","scope":6968,"src":"7958:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6943,"name":"address","nodeType":"ElementaryTypeName","src":"7958:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7957:16:15"},"returnParameters":{"id":6948,"nodeType":"ParameterList","parameters":[],"src":"7993:0:15"},"scope":6996,"src":"7932:216:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6994,"nodeType":"Block","src":"8322:154:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"id":6983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6977,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"8341:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6979,"indexExpression":{"id":6978,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"8350:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8341:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8358:4:15","memberName":"tier","nodeType":"MemberAccess","referencedDeclaration":7925,"src":"8341:21:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":6981,"name":"IssuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7919,"src":"8366:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_IssuerTier_$7919_$","typeString":"type(enum IIssuerRegistry.IssuerTier)"}},"id":6982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8377:4:15","memberName":"NONE","nodeType":"MemberAccess","referencedDeclaration":7915,"src":"8366:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"src":"8341:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49737375657252656769737472793a204e6f742061207265676973746572656420697373756572","id":6984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8383:41:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d167a22411753196fb802f79a8ee1894b1ed2196cbac251acaf1a6dbfdb92e1","typeString":"literal_string \"IssuerRegistry: Not a registered issuer\""},"value":"IssuerRegistry: Not a registered issuer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3d167a22411753196fb802f79a8ee1894b1ed2196cbac251acaf1a6dbfdb92e1","typeString":"literal_string \"IssuerRegistry: Not a registered issuer\""}],"id":6976,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8333:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8333:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6986,"nodeType":"ExpressionStatement","src":"8333:92:15"},{"expression":{"id":6992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6987,"name":"_issuers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"8436:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_IssuerData_$7934_storage_$","typeString":"mapping(address => struct IIssuerRegistry.IssuerData storage ref)"}},"id":6989,"indexExpression":{"id":6988,"name":"issuer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"8445:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8436:16:15","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage","typeString":"struct IIssuerRegistry.IssuerData storage ref"}},"id":6990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8453:8:15","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":7933,"src":"8436:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8464:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8436:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6993,"nodeType":"ExpressionStatement","src":"8436:32:15"}]},"documentation":{"id":6969,"nodeType":"StructuredDocumentation","src":"8160:95:15","text":" @dev Reactivates an issuer\n @param issuer The address to reactivate"},"functionSelector":"1b76637e","id":6995,"implemented":true,"kind":"function","modifiers":[{"id":6974,"kind":"modifierInvocation","modifierName":{"id":6973,"name":"onlyAdmin","nameLocations":["8312:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":6586,"src":"8312:9:15"},"nodeType":"ModifierInvocation","src":"8312:9:15"}],"name":"reactivateIssuer","nameLocation":"8270:16:15","nodeType":"FunctionDefinition","parameters":{"id":6972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6971,"mutability":"mutable","name":"issuer","nameLocation":"8295:6:15","nodeType":"VariableDeclaration","scope":6995,"src":"8287:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6970,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8286:16:15"},"returnParameters":{"id":6975,"nodeType":"ParameterList","parameters":[],"src":"8322:0:15"},"scope":6996,"src":"8261:215:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":6997,"src":"278:8201:15","usedErrors":[13,18],"usedEvents":[24,8004,8015]}],"src":"33:8447:15"},"id":15},"contracts/SoulboundNFT.sol":{"ast":{"absolutePath":"contracts/SoulboundNFT.sol","exportedSymbols":{"Context":[1511],"ERC165":[2989],"ERC721":[1241],"ERC721Utils":[1481],"IERC165":[3001],"IERC721":[1358],"IERC721Errors":[237],"IERC721Metadata":[1404],"IIssuerRegistry":[8016],"ISoulboundNFT":[8065],"Math":[4622],"MerkleProof":[8269],"Ownable":[147],"SafeCast":[6387],"SignedMath":[6531],"SoulboundNFT":[7422],"Strings":[2965]},"id":7423,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6998,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":6999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7423,"sourceUnit":1242,"src":"61:57:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7423,"sourceUnit":148,"src":"120:52:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7423,"sourceUnit":2966,"src":"174:51:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISoulboundNFT.sol","file":"./interfaces/ISoulboundNFT.sol","id":7002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7423,"sourceUnit":8066,"src":"227:40:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IIssuerRegistry.sol","file":"./interfaces/IIssuerRegistry.sol","id":7003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7423,"sourceUnit":8017,"src":"269:42:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/utils/MerkleProof.sol","file":"./utils/MerkleProof.sol","id":7004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7423,"sourceUnit":8270,"src":"313:33:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7006,"name":"ERC721","nameLocations":["487:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"487:6:16"},"id":7007,"nodeType":"InheritanceSpecifier","src":"487:6:16"},{"baseName":{"id":7008,"name":"Ownable","nameLocations":["495:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"495:7:16"},"id":7009,"nodeType":"InheritanceSpecifier","src":"495:7:16"},{"baseName":{"id":7010,"name":"ISoulboundNFT","nameLocations":["504:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":8065,"src":"504:13:16"},"id":7011,"nodeType":"InheritanceSpecifier","src":"504:13:16"}],"canonicalName":"SoulboundNFT","contractDependencies":[],"contractKind":"contract","documentation":{"id":7005,"nodeType":"StructuredDocumentation","src":"350:110:16","text":" @title SoulboundNFT\n @dev Implementation of non-transferable (soulbound) NFTs for certificates"},"fullyImplemented":true,"id":7422,"linearizedBaseContracts":[7422,8065,147,1241,237,1404,1358,2989,3001,1511],"name":"SoulboundNFT","nameLocation":"471:12:16","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7014,"libraryName":{"id":7012,"name":"Strings","nameLocations":["531:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":2965,"src":"531:7:16"},"nodeType":"UsingForDirective","src":"525:26:16","typeName":{"id":7013,"name":"uint256","nodeType":"ElementaryTypeName","src":"543:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":7016,"mutability":"mutable","name":"_tokenIdCounter","nameLocation":"613:15:16","nodeType":"VariableDeclaration","scope":7422,"src":"597:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7015,"name":"uint256","nodeType":"ElementaryTypeName","src":"597:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"SoulboundNFT.Certificate","id":7027,"members":[{"constant":false,"id":7018,"mutability":"mutable","name":"issuer","nameLocation":"704:6:16","nodeType":"VariableDeclaration","scope":7027,"src":"696:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7017,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7020,"mutability":"mutable","name":"issuerLevel","nameLocation":"727:11:16","nodeType":"VariableDeclaration","scope":7027,"src":"721:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7019,"name":"uint8","nodeType":"ElementaryTypeName","src":"721:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7022,"mutability":"mutable","name":"metadataURI","nameLocation":"756:11:16","nodeType":"VariableDeclaration","scope":7027,"src":"749:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7021,"name":"string","nodeType":"ElementaryTypeName","src":"749:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7024,"mutability":"mutable","name":"issuedAt","nameLocation":"786:8:16","nodeType":"VariableDeclaration","scope":7027,"src":"778:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7023,"name":"uint256","nodeType":"ElementaryTypeName","src":"778:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7026,"mutability":"mutable","name":"recipient","nameLocation":"813:9:16","nodeType":"VariableDeclaration","scope":7027,"src":"805:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7025,"name":"address","nodeType":"ElementaryTypeName","src":"805:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Certificate","nameLocation":"673:11:16","nodeType":"StructDefinition","scope":7422,"src":"666:164:16","visibility":"public"},{"constant":false,"id":7032,"mutability":"mutable","name":"_certificates","nameLocation":"932:13:16","nodeType":"VariableDeclaration","scope":7422,"src":"892:53:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certificate_$7027_storage_$","typeString":"mapping(uint256 => struct SoulboundNFT.Certificate)"},"typeName":{"id":7031,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7028,"name":"uint256","nodeType":"ElementaryTypeName","src":"900:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"892:31:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certificate_$7027_storage_$","typeString":"mapping(uint256 => struct SoulboundNFT.Certificate)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7030,"nodeType":"UserDefinedTypeName","pathNode":{"id":7029,"name":"Certificate","nameLocations":["911:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":7027,"src":"911:11:16"},"referencedDeclaration":7027,"src":"911:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_storage_ptr","typeString":"struct SoulboundNFT.Certificate"}}},"visibility":"private"},{"constant":false,"id":7034,"mutability":"mutable","name":"_merkleRoot","nameLocation":"1022:11:16","nodeType":"VariableDeclaration","scope":7422,"src":"1006:27:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1006:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":7036,"mutability":"mutable","name":"_issuerRegistry","nameLocation":"1110:15:16","nodeType":"VariableDeclaration","scope":7422,"src":"1094:31:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7035,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":7038,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"1183:13:16","nodeType":"VariableDeclaration","scope":7422,"src":"1168:28:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7037,"name":"string","nodeType":"ElementaryTypeName","src":"1168:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"errorSelector":"6e105749","id":7040,"name":"SoulboundToken","nameLocation":"1253:14:16","nodeType":"ErrorDefinition","parameters":{"id":7039,"nodeType":"ParameterList","parameters":[],"src":"1267:2:16"},"src":"1247:23:16"},{"body":{"id":7074,"nodeType":"Block","src":"1858:125:16","statements":[{"expression":{"id":7064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7062,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"1869:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7063,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"1883:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1869:24:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7065,"nodeType":"ExpressionStatement","src":"1869:24:16"},{"expression":{"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7066,"name":"_issuerRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"1904:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7067,"name":"issuerRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"1922:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1904:32:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7069,"nodeType":"ExpressionStatement","src":"1904:32:16"},{"expression":{"id":7072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7070,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"1947:13:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7071,"name":"baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"1963:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1947:28:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7073,"nodeType":"ExpressionStatement","src":"1947:28:16"}]},"documentation":{"id":7041,"nodeType":"StructuredDocumentation","src":"1282:351:16","text":" @dev Constructor for the SoulboundNFT contract\n @param name Name of the NFT collection\n @param symbol Symbol of the NFT collection\n @param merkleRoot Merkle root for whitelisting recipients\n @param issuerRegistry Address of the issuer registry contract\n @param baseTokenURI Base URI for metadata"},"id":7075,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7054,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7043,"src":"1824:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7055,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"1830:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7056,"kind":"baseConstructorSpecifier","modifierName":{"id":7053,"name":"ERC721","nameLocations":["1817:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"1817:6:16"},"nodeType":"ModifierInvocation","src":"1817:20:16"},{"arguments":[{"expression":{"id":7058,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1846:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1850:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1846:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7060,"kind":"baseConstructorSpecifier","modifierName":{"id":7057,"name":"Ownable","nameLocations":["1838:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1838:7:16"},"nodeType":"ModifierInvocation","src":"1838:19:16"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7043,"mutability":"mutable","name":"name","nameLocation":"1675:4:16","nodeType":"VariableDeclaration","scope":7075,"src":"1661:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7042,"name":"string","nodeType":"ElementaryTypeName","src":"1661:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7045,"mutability":"mutable","name":"symbol","nameLocation":"1704:6:16","nodeType":"VariableDeclaration","scope":7075,"src":"1690:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7044,"name":"string","nodeType":"ElementaryTypeName","src":"1690:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7047,"mutability":"mutable","name":"merkleRoot","nameLocation":"1729:10:16","nodeType":"VariableDeclaration","scope":7075,"src":"1721:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1721:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7049,"mutability":"mutable","name":"issuerRegistry","nameLocation":"1758:14:16","nodeType":"VariableDeclaration","scope":7075,"src":"1750:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7048,"name":"address","nodeType":"ElementaryTypeName","src":"1750:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7051,"mutability":"mutable","name":"baseTokenURI","nameLocation":"1797:12:16","nodeType":"VariableDeclaration","scope":7075,"src":"1783:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7050,"name":"string","nodeType":"ElementaryTypeName","src":"1783:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1650:166:16"},"returnParameters":{"id":7061,"nodeType":"ParameterList","parameters":[],"src":"1858:0:16"},"scope":7422,"src":"1639:344:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[854],"body":{"id":7119,"nodeType":"Block","src":"2189:378:16","statements":[{"assignments":[7089],"declarations":[{"constant":false,"id":7089,"mutability":"mutable","name":"from","nameLocation":"2208:4:16","nodeType":"VariableDeclaration","scope":7119,"src":"2200:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7088,"name":"address","nodeType":"ElementaryTypeName","src":"2200:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7093,"initialValue":{"arguments":[{"id":7091,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"2224:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7090,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"2215:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2215:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2200:32:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7094,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7089,"src":"2410:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2426:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2418:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7095,"name":"address","nodeType":"ElementaryTypeName","src":"2418:7:16","typeDescriptions":{}}},"id":7098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2418:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2410:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7100,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"2432:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2446:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2438:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7101,"name":"address","nodeType":"ElementaryTypeName","src":"2438:7:16","typeDescriptions":{}}},"id":7104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2438:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2432:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2410:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7111,"nodeType":"IfStatement","src":"2406:94:16","trueBody":{"id":7110,"nodeType":"Block","src":"2450:50:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7107,"name":"SoulboundToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"2472:14:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2472:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7109,"nodeType":"RevertStatement","src":"2465:23:16"}]}},{"expression":{"arguments":[{"id":7114,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"2541:2:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7115,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"2545:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7116,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"2554:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7112,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2527:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_SoulboundNFT_$7422_$","typeString":"type(contract super SoulboundNFT)"}},"id":7113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2533:7:16","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":854,"src":"2527:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7087,"id":7118,"nodeType":"Return","src":"2520:39:16"}]},"documentation":{"id":7076,"nodeType":"StructuredDocumentation","src":"1995:92:16","text":" @dev Override _update to prevent transfers (except minting and burning)"},"id":7120,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"2102:7:16","nodeType":"FunctionDefinition","overrides":{"id":7084,"nodeType":"OverrideSpecifier","overrides":[],"src":"2162:8:16"},"parameters":{"id":7083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"mutability":"mutable","name":"to","nameLocation":"2118:2:16","nodeType":"VariableDeclaration","scope":7120,"src":"2110:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7077,"name":"address","nodeType":"ElementaryTypeName","src":"2110:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7080,"mutability":"mutable","name":"tokenId","nameLocation":"2130:7:16","nodeType":"VariableDeclaration","scope":7120,"src":"2122:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7079,"name":"uint256","nodeType":"ElementaryTypeName","src":"2122:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7082,"mutability":"mutable","name":"auth","nameLocation":"2147:4:16","nodeType":"VariableDeclaration","scope":7120,"src":"2139:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7081,"name":"address","nodeType":"ElementaryTypeName","src":"2139:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2109:43:16"},"returnParameters":{"id":7087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7120,"src":"2180:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7085,"name":"address","nodeType":"ElementaryTypeName","src":"2180:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2179:9:16"},"scope":7422,"src":"2093:474:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7136,"nodeType":"Block","src":"2978:65:16","statements":[{"expression":{"arguments":[{"id":7132,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"3012:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7133,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7126,"src":"3023:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":7131,"name":"mintCertificate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"2996:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_uint256_$","typeString":"function (address,bytes32[] calldata) returns (uint256)"}},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2996:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7130,"id":7135,"nodeType":"Return","src":"2989:46:16"}]},"documentation":{"id":7121,"nodeType":"StructuredDocumentation","src":"2579:301:16","text":" @dev Alias for mintCertificate to maintain compatibility with frontend\n @param recipient The address that will receive the certificate\n @param merkleProof The Merkle proof that verifies the recipient is eligible\n @return The token ID of the minted certificate"},"functionSelector":"7bf32270","id":7137,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"2895:4:16","nodeType":"FunctionDefinition","parameters":{"id":7127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7123,"mutability":"mutable","name":"recipient","nameLocation":"2908:9:16","nodeType":"VariableDeclaration","scope":7137,"src":"2900:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7122,"name":"address","nodeType":"ElementaryTypeName","src":"2900:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7126,"mutability":"mutable","name":"merkleProof","nameLocation":"2938:11:16","nodeType":"VariableDeclaration","scope":7137,"src":"2919:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2919:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7125,"nodeType":"ArrayTypeName","src":"2919:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"2899:51:16"},"returnParameters":{"id":7130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7137,"src":"2969:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2969:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2968:9:16"},"scope":7422,"src":"2886:157:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8030],"body":{"id":7228,"nodeType":"Block","src":"3445:1191:16","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":7154,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3568:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3572:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3568:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7151,"name":"_issuerRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"3534:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7150,"name":"IIssuerRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"3518:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IIssuerRegistry_$8016_$","typeString":"type(contract IIssuerRegistry)"}},"id":7152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3518:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IIssuerRegistry_$8016","typeString":"contract IIssuerRegistry"}},"id":7153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3551:16:16","memberName":"isVerifiedIssuer","nodeType":"MemberAccess","referencedDeclaration":7976,"src":"3518:49:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3518:61:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f756c626f756e644e46543a2043616c6c6572206973206e6f74206120766572696669656420697373756572","id":7157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3594:47:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d3f96f548042c9595ab469641935100bddfeff4ab1cebebda7ce0b95f6428f4","typeString":"literal_string \"SoulboundNFT: Caller is not a verified issuer\""},"value":"SoulboundNFT: Caller is not a verified issuer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d3f96f548042c9595ab469641935100bddfeff4ab1cebebda7ce0b95f6428f4","typeString":"literal_string \"SoulboundNFT: Caller is not a verified issuer\""}],"id":7149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3496:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:156:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7159,"nodeType":"ExpressionStatement","src":"3496:156:16"},{"expression":{"arguments":[{"arguments":[{"id":7162,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"3755:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7163,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"3766:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":7161,"name":"isEligible","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7256,"src":"3744:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32[] calldata) view returns (bool)"}},"id":7164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f756c626f756e644e46543a20526563697069656e74206973206e6f7420656c696769626c65","id":7165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3793:41:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a9b695377a749f7cd285668aa31af220b788a29aa468bc36431ca063f552c39","typeString":"literal_string \"SoulboundNFT: Recipient is not eligible\""},"value":"SoulboundNFT: Recipient is not eligible"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a9b695377a749f7cd285668aa31af220b788a29aa468bc36431ca063f552c39","typeString":"literal_string \"SoulboundNFT: Recipient is not eligible\""}],"id":7160,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3722:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3722:123:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7167,"nodeType":"ExpressionStatement","src":"3722:123:16"},{"assignments":[7172],"declarations":[{"constant":false,"id":7172,"mutability":"mutable","name":"issuerTier","nameLocation":"3922:10:16","nodeType":"VariableDeclaration","scope":7228,"src":"3895:37:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"typeName":{"id":7171,"nodeType":"UserDefinedTypeName","pathNode":{"id":7170,"name":"IIssuerRegistry.IssuerTier","nameLocations":["3895:15:16","3911:10:16"],"nodeType":"IdentifierPath","referencedDeclaration":7919,"src":"3895:26:16"},"referencedDeclaration":7919,"src":"3895:26:16","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"visibility":"internal"}],"id":7180,"initialValue":{"arguments":[{"expression":{"id":7177,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3982:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3986:6:16","memberName":"sender","nodeType":"MemberAccess","src":"3982:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":7174,"name":"_issuerRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"3951:15:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7173,"name":"IIssuerRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8016,"src":"3935:15:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IIssuerRegistry_$8016_$","typeString":"type(contract IIssuerRegistry)"}},"id":7175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3935:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IIssuerRegistry_$8016","typeString":"contract IIssuerRegistry"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3968:13:16","memberName":"getIssuerTier","nodeType":"MemberAccess","referencedDeclaration":7985,"src":"3935:46:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_enum$_IssuerTier_$7919_$","typeString":"function (address) view external returns (enum IIssuerRegistry.IssuerTier)"}},"id":7179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3935:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"nodeType":"VariableDeclarationStatement","src":"3895:98:16"},{"expression":{"id":7182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4045:17:16","subExpression":{"id":7181,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"4045:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7183,"nodeType":"ExpressionStatement","src":"4045:17:16"},{"assignments":[7185],"declarations":[{"constant":false,"id":7185,"mutability":"mutable","name":"tokenId","nameLocation":"4081:7:16","nodeType":"VariableDeclaration","scope":7228,"src":"4073:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7184,"name":"uint256","nodeType":"ElementaryTypeName","src":"4073:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7187,"initialValue":{"id":7186,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"4091:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4073:33:16"},{"expression":{"arguments":[{"id":7189,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"4154:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7190,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"4165:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7188,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"4148:5:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4148:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7192,"nodeType":"ExpressionStatement","src":"4148:25:16"},{"expression":{"id":7217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7193,"name":"_certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"4229:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certificate_$7027_storage_$","typeString":"mapping(uint256 => struct SoulboundNFT.Certificate storage ref)"}},"id":7195,"indexExpression":{"id":7194,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"4243:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4229:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_storage","typeString":"struct SoulboundNFT.Certificate storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7197,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4289:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4293:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4289:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7201,"name":"issuerTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"4333:10:16","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}],"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4327:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7199,"name":"uint8","nodeType":"ElementaryTypeName","src":"4327:5:16","typeDescriptions":{}}},"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4327:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"arguments":[{"id":7207,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"4396:13:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"4411:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4419:8:16","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1677,"src":"4411:16:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4411:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7205,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4379:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4383:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"4379:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4379:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4372:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7203,"name":"string","nodeType":"ElementaryTypeName","src":"4372:6:16","typeDescriptions":{}}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4372:59:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7213,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4456:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4462:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"4456:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7215,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"4497:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7196,"name":"Certificate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"4254:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Certificate_$7027_storage_ptr_$","typeString":"type(struct SoulboundNFT.Certificate storage pointer)"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4281:6:16","4314:11:16","4359:11:16","4446:8:16","4486:9:16"],"names":["issuer","issuerLevel","metadataURI","issuedAt","recipient"],"nodeType":"FunctionCall","src":"4254:264:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_memory_ptr","typeString":"struct SoulboundNFT.Certificate memory"}},"src":"4229:289:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_storage","typeString":"struct SoulboundNFT.Certificate storage ref"}},"id":7218,"nodeType":"ExpressionStatement","src":"4229:289:16"},{"eventCall":{"arguments":[{"id":7220,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"4562:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7221,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"4573:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7222,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4582:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4586:6:16","memberName":"sender","nodeType":"MemberAccess","src":"4582:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7219,"name":"CertificateMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8064,"src":"4544:17:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4544:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7225,"nodeType":"EmitStatement","src":"4539:54:16"},{"expression":{"id":7226,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7185,"src":"4621:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7148,"id":7227,"nodeType":"Return","src":"4614:14:16"}]},"documentation":{"id":7138,"nodeType":"StructuredDocumentation","src":"3055:274:16","text":" @dev Mints a new certificate to a recipient\n @param recipient The address that will receive the certificate\n @param merkleProof The Merkle proof that verifies the recipient is eligible\n @return The token ID of the minted certificate"},"functionSelector":"c4b3d052","id":7229,"implemented":true,"kind":"function","modifiers":[],"name":"mintCertificate","nameLocation":"3344:15:16","nodeType":"FunctionDefinition","overrides":{"id":7145,"nodeType":"OverrideSpecifier","overrides":[],"src":"3418:8:16"},"parameters":{"id":7144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7140,"mutability":"mutable","name":"recipient","nameLocation":"3368:9:16","nodeType":"VariableDeclaration","scope":7229,"src":"3360:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7139,"name":"address","nodeType":"ElementaryTypeName","src":"3360:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7143,"mutability":"mutable","name":"merkleProof","nameLocation":"3398:11:16","nodeType":"VariableDeclaration","scope":7229,"src":"3379:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3379:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7142,"nodeType":"ArrayTypeName","src":"3379:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3359:51:16"},"returnParameters":{"id":7148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7229,"src":"3436:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7146,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3435:9:16"},"scope":7422,"src":"3335:1301:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[8041],"body":{"id":7255,"nodeType":"Block","src":"5035:140:16","statements":[{"assignments":[7242],"declarations":[{"constant":false,"id":7242,"mutability":"mutable","name":"leaf","nameLocation":"5054:4:16","nodeType":"VariableDeclaration","scope":7255,"src":"5046:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7241,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5046:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7247,"initialValue":{"arguments":[{"id":7245,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7232,"src":"5089:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7243,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8269,"src":"5061:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$8269_$","typeString":"type(library MerkleProof)"}},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5073:15:16","memberName":"leafFromAddress","nodeType":"MemberAccess","referencedDeclaration":8268,"src":"5061:27:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_bytes32_$","typeString":"function (address) pure returns (bytes32)"}},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5061:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5046:53:16"},{"expression":{"arguments":[{"id":7250,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7235,"src":"5136:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":7251,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"5149:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7252,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7242,"src":"5162:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7248,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8269,"src":"5117:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$8269_$","typeString":"type(library MerkleProof)"}},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5129:6:16","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":8252,"src":"5117:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":7253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5117:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7240,"id":7254,"nodeType":"Return","src":"5110:57:16"}]},"documentation":{"id":7230,"nodeType":"StructuredDocumentation","src":"4648:274:16","text":" @dev Checks if an address is eligible to claim a certificate\n @param recipient The address to check eligibility for\n @param merkleProof The Merkle proof to verify eligibility\n @return True if the address is eligible, false otherwise"},"functionSelector":"c18b065e","id":7256,"implemented":true,"kind":"function","modifiers":[],"name":"isEligible","nameLocation":"4937:10:16","nodeType":"FunctionDefinition","overrides":{"id":7237,"nodeType":"OverrideSpecifier","overrides":[],"src":"5011:8:16"},"parameters":{"id":7236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7232,"mutability":"mutable","name":"recipient","nameLocation":"4956:9:16","nodeType":"VariableDeclaration","scope":7256,"src":"4948:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7231,"name":"address","nodeType":"ElementaryTypeName","src":"4948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7235,"mutability":"mutable","name":"merkleProof","nameLocation":"4986:11:16","nodeType":"VariableDeclaration","scope":7256,"src":"4967:30:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":7233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4967:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7234,"nodeType":"ArrayTypeName","src":"4967:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4947:51:16"},"returnParameters":{"id":7240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7256,"src":"5029:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7238,"name":"bool","nodeType":"ElementaryTypeName","src":"5029:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5028:6:16"},"scope":7422,"src":"4928:247:16","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[8055],"body":{"id":7295,"nodeType":"Block","src":"5789:313:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":7273,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"5816:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7272,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"5808:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5808:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f756c626f756e644e46543a20517565727920666f72206e6f6e6578697374656e7420746f6b656e","id":7275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5826:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c1335588a0b088cfb2ec509a8b78ba3968dfbda211a2f2fbf5b29ed2bd7748d","typeString":"literal_string \"SoulboundNFT: Query for nonexistent token\""},"value":"SoulboundNFT: Query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c1335588a0b088cfb2ec509a8b78ba3968dfbda211a2f2fbf5b29ed2bd7748d","typeString":"literal_string \"SoulboundNFT: Query for nonexistent token\""}],"id":7271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5800:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5800:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7277,"nodeType":"ExpressionStatement","src":"5800:70:16"},{"assignments":[7280],"declarations":[{"constant":false,"id":7280,"mutability":"mutable","name":"cert","nameLocation":"5910:4:16","nodeType":"VariableDeclaration","scope":7295,"src":"5891:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_memory_ptr","typeString":"struct SoulboundNFT.Certificate"},"typeName":{"id":7279,"nodeType":"UserDefinedTypeName","pathNode":{"id":7278,"name":"Certificate","nameLocations":["5891:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":7027,"src":"5891:11:16"},"referencedDeclaration":7027,"src":"5891:11:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_storage_ptr","typeString":"struct SoulboundNFT.Certificate"}},"visibility":"internal"}],"id":7284,"initialValue":{"baseExpression":{"id":7281,"name":"_certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"5917:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certificate_$7027_storage_$","typeString":"mapping(uint256 => struct SoulboundNFT.Certificate storage ref)"}},"id":7283,"indexExpression":{"id":7282,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"5931:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5917:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_storage","typeString":"struct SoulboundNFT.Certificate storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5891:48:16"},{"expression":{"components":[{"expression":{"id":7285,"name":"cert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"5982:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_memory_ptr","typeString":"struct SoulboundNFT.Certificate memory"}},"id":7286,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5987:6:16","memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7018,"src":"5982:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7287,"name":"cert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6008:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_memory_ptr","typeString":"struct SoulboundNFT.Certificate memory"}},"id":7288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6013:11:16","memberName":"issuerLevel","nodeType":"MemberAccess","referencedDeclaration":7020,"src":"6008:16:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":7289,"name":"cert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6039:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_memory_ptr","typeString":"struct SoulboundNFT.Certificate memory"}},"id":7290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6044:11:16","memberName":"metadataURI","nodeType":"MemberAccess","referencedDeclaration":7022,"src":"6039:16:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7291,"name":"cert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7280,"src":"6070:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_memory_ptr","typeString":"struct SoulboundNFT.Certificate memory"}},"id":7292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6075:8:16","memberName":"issuedAt","nodeType":"MemberAccess","referencedDeclaration":7024,"src":"6070:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5967:127:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint8_$_t_string_memory_ptr_$_t_uint256_$","typeString":"tuple(address,uint8,string memory,uint256)"}},"functionReturnParameters":7270,"id":7294,"nodeType":"Return","src":"5960:134:16"}]},"documentation":{"id":7257,"nodeType":"StructuredDocumentation","src":"5187:389:16","text":" @dev Gets the certificate data for a token ID\n @param tokenId The token ID to get data for\n @return issuer The address of the certificate issuer\n @return issuerLevel The level of the issuer (T1, T2, etc.)\n @return metadataURI The URI for the certificate metadata\n @return issuedTimestamp The timestamp when the certificate was issued"},"functionSelector":"31494bbb","id":7296,"implemented":true,"kind":"function","modifiers":[],"name":"getCertificateData","nameLocation":"5591:18:16","nodeType":"FunctionDefinition","overrides":{"id":7261,"nodeType":"OverrideSpecifier","overrides":[],"src":"5641:8:16"},"parameters":{"id":7260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7259,"mutability":"mutable","name":"tokenId","nameLocation":"5618:7:16","nodeType":"VariableDeclaration","scope":7296,"src":"5610:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7258,"name":"uint256","nodeType":"ElementaryTypeName","src":"5610:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5609:17:16"},"returnParameters":{"id":7270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7263,"mutability":"mutable","name":"issuer","nameLocation":"5677:6:16","nodeType":"VariableDeclaration","scope":7296,"src":"5669:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7262,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7265,"mutability":"mutable","name":"issuerLevel","nameLocation":"5700:11:16","nodeType":"VariableDeclaration","scope":7296,"src":"5694:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7264,"name":"uint8","nodeType":"ElementaryTypeName","src":"5694:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7267,"mutability":"mutable","name":"metadataURI","nameLocation":"5736:11:16","nodeType":"VariableDeclaration","scope":7296,"src":"5722:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7266,"name":"string","nodeType":"ElementaryTypeName","src":"5722:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7269,"mutability":"mutable","name":"issuedTimestamp","nameLocation":"5766:15:16","nodeType":"VariableDeclaration","scope":7296,"src":"5758:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7268,"name":"uint256","nodeType":"ElementaryTypeName","src":"5758:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5658:130:16"},"scope":7422,"src":"5582:520:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7316,"nodeType":"Block","src":"6317:136:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":7306,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"6344:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7305,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"6336:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6336:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f756c626f756e644e46543a20517565727920666f72206e6f6e6578697374656e7420746f6b656e","id":7308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6354:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c1335588a0b088cfb2ec509a8b78ba3968dfbda211a2f2fbf5b29ed2bd7748d","typeString":"literal_string \"SoulboundNFT: Query for nonexistent token\""},"value":"SoulboundNFT: Query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c1335588a0b088cfb2ec509a8b78ba3968dfbda211a2f2fbf5b29ed2bd7748d","typeString":"literal_string \"SoulboundNFT: Query for nonexistent token\""}],"id":7304,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6328:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6328:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7310,"nodeType":"ExpressionStatement","src":"6328:70:16"},{"expression":{"expression":{"baseExpression":{"id":7311,"name":"_certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"6416:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certificate_$7027_storage_$","typeString":"mapping(uint256 => struct SoulboundNFT.Certificate storage ref)"}},"id":7313,"indexExpression":{"id":7312,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7299,"src":"6430:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6416:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_storage","typeString":"struct SoulboundNFT.Certificate storage ref"}},"id":7314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6439:6:16","memberName":"issuer","nodeType":"MemberAccess","referencedDeclaration":7018,"src":"6416:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7303,"id":7315,"nodeType":"Return","src":"6409:36:16"}]},"documentation":{"id":7297,"nodeType":"StructuredDocumentation","src":"6114:130:16","text":" @dev Gets the issuer of a token\n @param tokenId The token ID\n @return The address of the issuer"},"functionSelector":"a4e2ee11","id":7317,"implemented":true,"kind":"function","modifiers":[],"name":"issuerOf","nameLocation":"6259:8:16","nodeType":"FunctionDefinition","parameters":{"id":7300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7299,"mutability":"mutable","name":"tokenId","nameLocation":"6276:7:16","nodeType":"VariableDeclaration","scope":7317,"src":"6268:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7298,"name":"uint256","nodeType":"ElementaryTypeName","src":"6268:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6267:17:16"},"returnParameters":{"id":7303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7317,"src":"6308:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7301,"name":"address","nodeType":"ElementaryTypeName","src":"6308:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6307:9:16"},"scope":7422,"src":"6250:203:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7337,"nodeType":"Block","src":"6697:138:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":7327,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"6724:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7326,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"6716:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6716:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f756c626f756e644e46543a20517565727920666f72206e6f6e6578697374656e7420746f6b656e","id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6734:43:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_6c1335588a0b088cfb2ec509a8b78ba3968dfbda211a2f2fbf5b29ed2bd7748d","typeString":"literal_string \"SoulboundNFT: Query for nonexistent token\""},"value":"SoulboundNFT: Query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6c1335588a0b088cfb2ec509a8b78ba3968dfbda211a2f2fbf5b29ed2bd7748d","typeString":"literal_string \"SoulboundNFT: Query for nonexistent token\""}],"id":7325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6708:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6708:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7331,"nodeType":"ExpressionStatement","src":"6708:70:16"},{"expression":{"expression":{"baseExpression":{"id":7332,"name":"_certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"6796:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certificate_$7027_storage_$","typeString":"mapping(uint256 => struct SoulboundNFT.Certificate storage ref)"}},"id":7334,"indexExpression":{"id":7333,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"6810:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6796:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_storage","typeString":"struct SoulboundNFT.Certificate storage ref"}},"id":7335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6819:8:16","memberName":"issuedAt","nodeType":"MemberAccess","referencedDeclaration":7024,"src":"6796:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7324,"id":7336,"nodeType":"Return","src":"6789:38:16"}]},"documentation":{"id":7318,"nodeType":"StructuredDocumentation","src":"6465:156:16","text":" @dev Gets the issuance timestamp of a token\n @param tokenId The token ID\n @return The timestamp when the token was issued"},"functionSelector":"ee3de9c5","id":7338,"implemented":true,"kind":"function","modifiers":[],"name":"getIssuedAt","nameLocation":"6636:11:16","nodeType":"FunctionDefinition","parameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"tokenId","nameLocation":"6656:7:16","nodeType":"VariableDeclaration","scope":7338,"src":"6648:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6647:17:16"},"returnParameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7338,"src":"6688:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7322,"name":"uint256","nodeType":"ElementaryTypeName","src":"6688:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6687:9:16"},"scope":7422,"src":"6627:208:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[480],"body":{"id":7359,"nodeType":"Block","src":"7079:145:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":7349,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"7106:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7348,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7421,"src":"7098:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7098:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536f756c626f756e644e46543a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:47:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_65c7ee8c8d90e7395d98b82afea606dddab7e7698cc9b9c4e7133434bd941fec","typeString":"literal_string \"SoulboundNFT: URI query for nonexistent token\""},"value":"SoulboundNFT: URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65c7ee8c8d90e7395d98b82afea606dddab7e7698cc9b9c4e7133434bd941fec","typeString":"literal_string \"SoulboundNFT: URI query for nonexistent token\""}],"id":7347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7090:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7090:74:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7353,"nodeType":"ExpressionStatement","src":"7090:74:16"},{"expression":{"expression":{"baseExpression":{"id":7354,"name":"_certificates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7032,"src":"7182:13:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Certificate_$7027_storage_$","typeString":"mapping(uint256 => struct SoulboundNFT.Certificate storage ref)"}},"id":7356,"indexExpression":{"id":7355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"7196:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7182:22:16","typeDescriptions":{"typeIdentifier":"t_struct$_Certificate_$7027_storage","typeString":"struct SoulboundNFT.Certificate storage ref"}},"id":7357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7205:11:16","memberName":"metadataURI","nodeType":"MemberAccess","referencedDeclaration":7022,"src":"7182:34:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7346,"id":7358,"nodeType":"Return","src":"7175:41:16"}]},"documentation":{"id":7339,"nodeType":"StructuredDocumentation","src":"6847:146:16","text":" @dev Gets the URI for a token's metadata\n @param tokenId The token ID to get the URI for\n @return The token URI"},"functionSelector":"c87b56dd","id":7360,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"7008:8:16","nodeType":"FunctionDefinition","overrides":{"id":7343,"nodeType":"OverrideSpecifier","overrides":[],"src":"7046:8:16"},"parameters":{"id":7342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7341,"mutability":"mutable","name":"tokenId","nameLocation":"7025:7:16","nodeType":"VariableDeclaration","scope":7360,"src":"7017:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7340,"name":"uint256","nodeType":"ElementaryTypeName","src":"7017:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7016:17:16"},"returnParameters":{"id":7346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7360,"src":"7064:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7344,"name":"string","nodeType":"ElementaryTypeName","src":"7064:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7063:15:16"},"scope":7422,"src":"6999:225:16","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7372,"nodeType":"Block","src":"7408:45:16","statements":[{"expression":{"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7368,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"7419:13:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7369,"name":"newBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7363,"src":"7435:10:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7419:26:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7371,"nodeType":"ExpressionStatement","src":"7419:26:16"}]},"documentation":{"id":7361,"nodeType":"StructuredDocumentation","src":"7236:101:16","text":" @dev Updates the base token URI\n @param newBaseURI The new base token URI"},"functionSelector":"55f804b3","id":7373,"implemented":true,"kind":"function","modifiers":[{"id":7366,"kind":"modifierInvocation","modifierName":{"id":7365,"name":"onlyOwner","nameLocations":["7398:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7398:9:16"},"nodeType":"ModifierInvocation","src":"7398:9:16"}],"name":"setBaseURI","nameLocation":"7352:10:16","nodeType":"FunctionDefinition","parameters":{"id":7364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"newBaseURI","nameLocation":"7377:10:16","nodeType":"VariableDeclaration","scope":7373,"src":"7363:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7362,"name":"string","nodeType":"ElementaryTypeName","src":"7363:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7362:26:16"},"returnParameters":{"id":7367,"nodeType":"ParameterList","parameters":[],"src":"7408:0:16"},"scope":7422,"src":"7343:110:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7385,"nodeType":"Block","src":"7634:46:16","statements":[{"expression":{"id":7383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7381,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"7645:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7382,"name":"newMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"7659:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7645:27:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7384,"nodeType":"ExpressionStatement","src":"7645:27:16"}]},"documentation":{"id":7374,"nodeType":"StructuredDocumentation","src":"7465:98:16","text":" @dev Updates the Merkle root\n @param newMerkleRoot The new Merkle root"},"functionSelector":"7cb64759","id":7386,"implemented":true,"kind":"function","modifiers":[{"id":7379,"kind":"modifierInvocation","modifierName":{"id":7378,"name":"onlyOwner","nameLocations":["7624:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"7624:9:16"},"nodeType":"ModifierInvocation","src":"7624:9:16"}],"name":"setMerkleRoot","nameLocation":"7578:13:16","nodeType":"FunctionDefinition","parameters":{"id":7377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7376,"mutability":"mutable","name":"newMerkleRoot","nameLocation":"7600:13:16","nodeType":"VariableDeclaration","scope":7386,"src":"7592:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7592:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7591:23:16"},"returnParameters":{"id":7380,"nodeType":"ParameterList","parameters":[],"src":"7634:0:16"},"scope":7422,"src":"7569:111:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7394,"nodeType":"Block","src":"7849:37:16","statements":[{"expression":{"id":7392,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"7867:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7391,"id":7393,"nodeType":"Return","src":"7860:18:16"}]},"documentation":{"id":7387,"nodeType":"StructuredDocumentation","src":"7692:94:16","text":" @dev Gets the current Merkle root\n @return The current Merkle root"},"functionSelector":"49590657","id":7395,"implemented":true,"kind":"function","modifiers":[],"name":"getMerkleRoot","nameLocation":"7801:13:16","nodeType":"FunctionDefinition","parameters":{"id":7388,"nodeType":"ParameterList","parameters":[],"src":"7814:2:16"},"returnParameters":{"id":7391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7395,"src":"7840:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7839:9:16"},"scope":7422,"src":"7792:94:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7420,"nodeType":"Block","src":"8139:103:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7403,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"8157:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8168:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8157:12:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7406,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"8173:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7407,"name":"_tokenIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7016,"src":"8184:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8173:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8157:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7411,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7398,"src":"8212:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7410,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"8203:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8203:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8232:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8224:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7413,"name":"address","nodeType":"ElementaryTypeName","src":"8224:7:16","typeDescriptions":{}}},"id":7416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8224:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8203:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8157:77:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7402,"id":7419,"nodeType":"Return","src":"8150:84:16"}]},"documentation":{"id":7396,"nodeType":"StructuredDocumentation","src":"7898:172:16","text":" @dev Utility function to check if a token exists\n @param tokenId The token ID to check\n @return True if the token exists, false otherwise"},"id":7421,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"8085:7:16","nodeType":"FunctionDefinition","parameters":{"id":7399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7398,"mutability":"mutable","name":"tokenId","nameLocation":"8101:7:16","nodeType":"VariableDeclaration","scope":7421,"src":"8093:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7397,"name":"uint256","nodeType":"ElementaryTypeName","src":"8093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8092:17:16"},"returnParameters":{"id":7402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7421,"src":"8133:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7400,"name":"bool","nodeType":"ElementaryTypeName","src":"8133:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8132:6:16"},"scope":7422,"src":"8076:166:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7423,"src":"462:7783:16","usedErrors":[13,18,195,200,209,214,219,226,231,236,7040],"usedEvents":[24,1257,1266,1275,8064]}],"src":"33:8213:16"},"id":16},"contracts/ZKVerifier.sol":{"ast":{"absolutePath":"contracts/ZKVerifier.sol","exportedSymbols":{"Context":[1511],"IZKVerifier":[8182],"Ownable":[147],"ZKVerifier":[7910]},"id":7911,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7424,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:17"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7425,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7911,"sourceUnit":148,"src":"61:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IZKVerifier.sol","file":"./interfaces/IZKVerifier.sol","id":7426,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7911,"sourceUnit":8183,"src":"115:38:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7428,"name":"IZKVerifier","nameLocations":["294:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":8182,"src":"294:11:17"},"id":7429,"nodeType":"InheritanceSpecifier","src":"294:11:17"},{"baseName":{"id":7430,"name":"Ownable","nameLocations":["307:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"307:7:17"},"id":7431,"nodeType":"InheritanceSpecifier","src":"307:7:17"}],"canonicalName":"ZKVerifier","contractDependencies":[],"contractKind":"contract","documentation":{"id":7427,"nodeType":"StructuredDocumentation","src":"157:112:17","text":" @title ZKVerifier\n @dev Contract for managing zero-knowledge proof verification for certificates"},"fullyImplemented":true,"id":7910,"linearizedBaseContracts":[7910,147,1511,8182],"name":"ZKVerifier","nameLocation":"280:10:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7433,"mutability":"mutable","name":"_circuitIdCounter","nameLocation":"370:17:17","nodeType":"VariableDeclaration","scope":7910,"src":"354:33:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7432,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7435,"mutability":"mutable","name":"_proofIdCounter","nameLocation":"446:15:17","nodeType":"VariableDeclaration","scope":7910,"src":"430:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7434,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":7440,"mutability":"mutable","name":"_circuits","nameLocation":"566:9:17","nodeType":"VariableDeclaration","scope":7910,"src":"522:53:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifierCircuit_$8080_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.VerifierCircuit)"},"typeName":{"id":7439,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7436,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"522:35:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifierCircuit_$8080_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.VerifierCircuit)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7438,"nodeType":"UserDefinedTypeName","pathNode":{"id":7437,"name":"VerifierCircuit","nameLocations":["541:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":8080,"src":"541:15:17"},"referencedDeclaration":8080,"src":"541:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage_ptr","typeString":"struct IZKVerifier.VerifierCircuit"}}},"visibility":"private"},{"constant":false,"id":7445,"mutability":"mutable","name":"_proofs","nameLocation":"670:7:17","nodeType":"VariableDeclaration","scope":7910,"src":"632:45:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofData_$8096_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.ProofData)"},"typeName":{"id":7444,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7441,"name":"uint256","nodeType":"ElementaryTypeName","src":"640:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"632:29:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofData_$8096_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.ProofData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7443,"nodeType":"UserDefinedTypeName","pathNode":{"id":7442,"name":"ProofData","nameLocations":["651:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":8096,"src":"651:9:17"},"referencedDeclaration":8096,"src":"651:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData"}}},"visibility":"private"},{"constant":false,"id":7450,"mutability":"mutable","name":"_ownerProofs","nameLocation":"768:12:17","nodeType":"VariableDeclaration","scope":7910,"src":"730:50:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":7449,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7446,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"730:29:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7447,"name":"uint256","nodeType":"ElementaryTypeName","src":"749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7448,"nodeType":"ArrayTypeName","src":"749:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"private"},{"constant":false,"id":7454,"mutability":"mutable","name":"_admins","nameLocation":"850:7:17","nodeType":"VariableDeclaration","scope":7910,"src":"817:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7453,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7451,"name":"address","nodeType":"ElementaryTypeName","src":"825:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"817:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7452,"name":"bool","nodeType":"ElementaryTypeName","src":"836:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"body":{"id":7469,"nodeType":"Block","src":"962:79:17","statements":[{"expression":{"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7462,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"1007:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7465,"indexExpression":{"expression":{"id":7463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1015:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1019:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1015:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1007:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1029:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1007:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7468,"nodeType":"ExpressionStatement","src":"1007:26:17"}]},"documentation":{"id":7455,"nodeType":"StructuredDocumentation","src":"870:52:17","text":" @dev Constructor for ZKVerifier"},"id":7470,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7458,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"950:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"954:6:17","memberName":"sender","nodeType":"MemberAccess","src":"950:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7460,"kind":"baseConstructorSpecifier","modifierName":{"id":7457,"name":"Ownable","nameLocations":["942:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"942:7:17"},"nodeType":"ModifierInvocation","src":"942:19:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7456,"nodeType":"ParameterList","parameters":[],"src":"939:2:17"},"returnParameters":{"id":7461,"nodeType":"ParameterList","parameters":[],"src":"962:0:17"},"scope":7910,"src":"928:113:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7482,"nodeType":"Block","src":"1152:97:17","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7474,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"1171:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7477,"indexExpression":{"expression":{"id":7475,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1179:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1183:6:17","memberName":"sender","nodeType":"MemberAccess","src":"1179:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1171:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b56657269666965723a2043616c6c6572206973206e6f7420616e2061646d696e","id":7478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1192:36:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_23a9e6324888b69a114ac30cc3df040284faf4813aa0cd71fe4c4366d3ba1fab","typeString":"literal_string \"ZKVerifier: Caller is not an admin\""},"value":"ZKVerifier: Caller is not an admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23a9e6324888b69a114ac30cc3df040284faf4813aa0cd71fe4c4366d3ba1fab","typeString":"literal_string \"ZKVerifier: Caller is not an admin\""}],"id":7473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1163:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7480,"nodeType":"ExpressionStatement","src":"1163:66:17"},{"id":7481,"nodeType":"PlaceholderStatement","src":"1240:1:17"}]},"documentation":{"id":7471,"nodeType":"StructuredDocumentation","src":"1053:72:17","text":" @dev Modifier to restrict function access to admins"},"id":7483,"name":"onlyAdmin","nameLocation":"1140:9:17","nodeType":"ModifierDefinition","parameters":{"id":7472,"nodeType":"ParameterList","parameters":[],"src":"1149:2:17"},"src":"1131:118:17","virtual":false,"visibility":"internal"},{"body":{"id":7497,"nodeType":"Block","src":"1406:40:17","statements":[{"expression":{"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7491,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"1417:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7493,"indexExpression":{"id":7492,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7486,"src":"1425:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1417:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1434:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1417:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7496,"nodeType":"ExpressionStatement","src":"1417:21:17"}]},"documentation":{"id":7484,"nodeType":"StructuredDocumentation","src":"1261:87:17","text":" @dev Add an admin\n @param admin The address to add as admin"},"functionSelector":"70480275","id":7498,"implemented":true,"kind":"function","modifiers":[{"id":7489,"kind":"modifierInvocation","modifierName":{"id":7488,"name":"onlyOwner","nameLocations":["1396:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1396:9:17"},"nodeType":"ModifierInvocation","src":"1396:9:17"}],"name":"addAdmin","nameLocation":"1363:8:17","nodeType":"FunctionDefinition","parameters":{"id":7487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7486,"mutability":"mutable","name":"admin","nameLocation":"1380:5:17","nodeType":"VariableDeclaration","scope":7498,"src":"1372:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7485,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1371:15:17"},"returnParameters":{"id":7490,"nodeType":"ParameterList","parameters":[],"src":"1406:0:17"},"scope":7910,"src":"1354:92:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7512,"nodeType":"Block","src":"1612:41:17","statements":[{"expression":{"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7506,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"1623:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7508,"indexExpression":{"id":7507,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"1631:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1623:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1640:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1623:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7511,"nodeType":"ExpressionStatement","src":"1623:22:17"}]},"documentation":{"id":7499,"nodeType":"StructuredDocumentation","src":"1458:93:17","text":" @dev Remove an admin\n @param admin The address to remove as admin"},"functionSelector":"1785f53c","id":7513,"implemented":true,"kind":"function","modifiers":[{"id":7504,"kind":"modifierInvocation","modifierName":{"id":7503,"name":"onlyOwner","nameLocations":["1602:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1602:9:17"},"nodeType":"ModifierInvocation","src":"1602:9:17"}],"name":"removeAdmin","nameLocation":"1566:11:17","nodeType":"FunctionDefinition","parameters":{"id":7502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7501,"mutability":"mutable","name":"admin","nameLocation":"1586:5:17","nodeType":"VariableDeclaration","scope":7513,"src":"1578:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7500,"name":"address","nodeType":"ElementaryTypeName","src":"1578:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1577:15:17"},"returnParameters":{"id":7505,"nodeType":"ParameterList","parameters":[],"src":"1612:0:17"},"scope":7910,"src":"1557:96:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8108],"body":{"id":7565,"nodeType":"Block","src":"2144:616:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7529,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"2163:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2191:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2183:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7530,"name":"address","nodeType":"ElementaryTypeName","src":"2183:7:17","typeDescriptions":{}}},"id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2183:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2163:30:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b56657269666965723a20496e76616c696420766572696669657220636f6e74726163742061646472657373","id":7535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2195:47:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f70bc21b8c20e6dcae2deb3d8e753cfa4a5527d2b822959d4b007622af85ce6f","typeString":"literal_string \"ZKVerifier: Invalid verifier contract address\""},"value":"ZKVerifier: Invalid verifier contract address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f70bc21b8c20e6dcae2deb3d8e753cfa4a5527d2b822959d4b007622af85ce6f","typeString":"literal_string \"ZKVerifier: Invalid verifier contract address\""}],"id":7528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2155:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2155:88:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7537,"nodeType":"ExpressionStatement","src":"2155:88:17"},{"expression":{"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2297:19:17","subExpression":{"id":7538,"name":"_circuitIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"2297:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7540,"nodeType":"ExpressionStatement","src":"2297:19:17"},{"assignments":[7542],"declarations":[{"constant":false,"id":7542,"mutability":"mutable","name":"circuitId","nameLocation":"2335:9:17","nodeType":"VariableDeclaration","scope":7565,"src":"2327:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7541,"name":"uint256","nodeType":"ElementaryTypeName","src":"2327:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7544,"initialValue":{"id":7543,"name":"_circuitIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"2347:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2327:37:17"},{"expression":{"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7545,"name":"_circuits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"2416:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifierCircuit_$8080_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.VerifierCircuit storage ref)"}},"id":7547,"indexExpression":{"id":7546,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"2426:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2416:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage","typeString":"struct IZKVerifier.VerifierCircuit storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7549,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"2474:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7550,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"2504:4:17","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7551,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"2536:11:17","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7552,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"2580:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":7553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2621:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7548,"name":"VerifierCircuit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8080,"src":"2439:15:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VerifierCircuit_$8080_storage_ptr_$","typeString":"type(struct IZKVerifier.VerifierCircuit storage pointer)"}},"id":7554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2470:2:17","2498:4:17","2523:11:17","2562:16:17","2611:8:17"],"names":["id","name","description","verifierContract","isActive"],"nodeType":"FunctionCall","src":"2439:198:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_memory_ptr","typeString":"struct IZKVerifier.VerifierCircuit memory"}},"src":"2416:221:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage","typeString":"struct IZKVerifier.VerifierCircuit storage ref"}},"id":7556,"nodeType":"ExpressionStatement","src":"2416:221:17"},{"eventCall":{"arguments":[{"id":7558,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"2681:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7559,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"2692:4:17","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":7560,"name":"verifierContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"2698:16:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7557,"name":"CircuitRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8165,"src":"2663:17:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (uint256,string memory,address)"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2663:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7562,"nodeType":"EmitStatement","src":"2658:57:17"},{"expression":{"id":7563,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"2743:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7527,"id":7564,"nodeType":"Return","src":"2736:16:17"}]},"documentation":{"id":7514,"nodeType":"StructuredDocumentation","src":"1665:291:17","text":" @dev Registers a new verifier circuit (admin only)\n @param name The name of the circuit\n @param description The description of the circuit\n @param verifierContract The address of the verifier contract\n @return The ID of the registered circuit"},"functionSelector":"e8168b5c","id":7566,"implemented":true,"kind":"function","modifiers":[{"id":7524,"kind":"modifierInvocation","modifierName":{"id":7523,"name":"onlyAdmin","nameLocations":["2116:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":7483,"src":"2116:9:17"},"nodeType":"ModifierInvocation","src":"2116:9:17"}],"name":"registerCircuit","nameLocation":"1971:15:17","nodeType":"FunctionDefinition","overrides":{"id":7522,"nodeType":"OverrideSpecifier","overrides":[],"src":"2107:8:17"},"parameters":{"id":7521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"name","nameLocation":"2013:4:17","nodeType":"VariableDeclaration","scope":7566,"src":"1997:20:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7515,"name":"string","nodeType":"ElementaryTypeName","src":"1997:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7518,"mutability":"mutable","name":"description","nameLocation":"2044:11:17","nodeType":"VariableDeclaration","scope":7566,"src":"2028:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7517,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7520,"mutability":"mutable","name":"verifierContract","nameLocation":"2074:16:17","nodeType":"VariableDeclaration","scope":7566,"src":"2066:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7519,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1986:111:17"},"returnParameters":{"id":7527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7566,"src":"2135:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7525,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2134:9:17"},"scope":7910,"src":"1962:798:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8122],"body":{"id":7646,"nodeType":"Block","src":"3308:1164:17","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7582,"name":"_circuits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"3327:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifierCircuit_$8080_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.VerifierCircuit storage ref)"}},"id":7584,"indexExpression":{"id":7583,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"3337:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3327:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage","typeString":"struct IZKVerifier.VerifierCircuit storage ref"}},"id":7585,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3348:8:17","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8079,"src":"3327:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b56657269666965723a2043697263756974206973206e6f7420616374697665","id":7586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3358:35:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bbc26683e9fe139e448e7842d818aef9d0acecb2ed547e65fb1edaf80bbab5c","typeString":"literal_string \"ZKVerifier: Circuit is not active\""},"value":"ZKVerifier: Circuit is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bbc26683e9fe139e448e7842d818aef9d0acecb2ed547e65fb1edaf80bbab5c","typeString":"literal_string \"ZKVerifier: Circuit is not active\""}],"id":7581,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3319:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3319:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7588,"nodeType":"ExpressionStatement","src":"3319:75:17"},{"expression":{"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3638:17:17","subExpression":{"id":7589,"name":"_proofIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"3638:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7591,"nodeType":"ExpressionStatement","src":"3638:17:17"},{"assignments":[7593],"declarations":[{"constant":false,"id":7593,"mutability":"mutable","name":"proofId","nameLocation":"3674:7:17","nodeType":"VariableDeclaration","scope":7646,"src":"3666:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3666:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7595,"initialValue":{"id":7594,"name":"_proofIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"3684:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3666:33:17"},{"assignments":[7597],"declarations":[{"constant":false,"id":7597,"mutability":"mutable","name":"proofHash","nameLocation":"3761:9:17","nodeType":"VariableDeclaration","scope":7646,"src":"3753:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3753:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7605,"initialValue":{"arguments":[{"arguments":[{"id":7601,"name":"proofData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7571,"src":"3800:9:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":7602,"name":"publicInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7573,"src":"3811:12:17","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":7599,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3783:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3787:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"3783:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3783:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7598,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3773:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3773:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3753:72:17"},{"assignments":[7607],"declarations":[{"constant":false,"id":7607,"mutability":"mutable","name":"expiresAt","nameLocation":"3892:9:17","nodeType":"VariableDeclaration","scope":7646,"src":"3884:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3884:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7612,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7608,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3904:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3910:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"3904:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7610,"name":"validityPeriod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7575,"src":"3922:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3904:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3884:52:17"},{"expression":{"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7613,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"3986:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofData_$8096_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.ProofData storage ref)"}},"id":7615,"indexExpression":{"id":7614,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"3994:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3986:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage","typeString":"struct IZKVerifier.ProofData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7617,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"4034:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7618,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4063:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4067:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4063:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7620,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"4099:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7621,"name":"proofHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"4134:9:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7622,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4169:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4175:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"4169:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7624,"name":"expiresAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7607,"src":"4210:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":7625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4245:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7616,"name":"ProofData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8096,"src":"4005:9:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ProofData_$8096_storage_ptr_$","typeString":"type(struct IZKVerifier.ProofData storage pointer)"}},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4030:2:17","4056:5:17","4088:9:17","4123:9:17","4158:9:17","4199:9:17","4234:9:17"],"names":["id","owner","circuitId","proofHash","createdAt","expiresAt","isRevoked"],"nodeType":"FunctionCall","src":"4005:257:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_memory_ptr","typeString":"struct IZKVerifier.ProofData memory"}},"src":"3986:276:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage","typeString":"struct IZKVerifier.ProofData storage ref"}},"id":7628,"nodeType":"ExpressionStatement","src":"3986:276:17"},{"expression":{"arguments":[{"id":7634,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"4351:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":7629,"name":"_ownerProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"4321:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7632,"indexExpression":{"expression":{"id":7630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4334:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4338:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4334:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4321:24:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4346:4:17","memberName":"push","nodeType":"MemberAccess","src":"4321:29:17","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7636,"nodeType":"ExpressionStatement","src":"4321:38:17"},{"eventCall":{"arguments":[{"id":7638,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"4398:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7639,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4407:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4411:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4407:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7641,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"4419:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7637,"name":"ProofCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"4385:12:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:44:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7643,"nodeType":"EmitStatement","src":"4380:49:17"},{"expression":{"id":7644,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"4457:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7580,"id":7645,"nodeType":"Return","src":"4450:14:17"}]},"documentation":{"id":7567,"nodeType":"StructuredDocumentation","src":"2772:332:17","text":" @dev Creates a new ZK proof\n @param circuitId The ID of the circuit to use\n @param proofData The raw proof data\n @param publicInputs The public inputs for the proof\n @param validityPeriod How long the proof should be valid for (in seconds)\n @return The ID of the created proof"},"functionSelector":"733b0382","id":7647,"implemented":true,"kind":"function","modifiers":[],"name":"createProof","nameLocation":"3119:11:17","nodeType":"FunctionDefinition","overrides":{"id":7577,"nodeType":"OverrideSpecifier","overrides":[],"src":"3281:8:17"},"parameters":{"id":7576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"mutability":"mutable","name":"circuitId","nameLocation":"3149:9:17","nodeType":"VariableDeclaration","scope":7647,"src":"3141:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7568,"name":"uint256","nodeType":"ElementaryTypeName","src":"3141:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7571,"mutability":"mutable","name":"proofData","nameLocation":"3184:9:17","nodeType":"VariableDeclaration","scope":7647,"src":"3169:24:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7570,"name":"bytes","nodeType":"ElementaryTypeName","src":"3169:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7573,"mutability":"mutable","name":"publicInputs","nameLocation":"3219:12:17","nodeType":"VariableDeclaration","scope":7647,"src":"3204:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":7572,"name":"bytes","nodeType":"ElementaryTypeName","src":"3204:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7575,"mutability":"mutable","name":"validityPeriod","nameLocation":"3250:14:17","nodeType":"VariableDeclaration","scope":7647,"src":"3242:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7574,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3130:141:17"},"returnParameters":{"id":7580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7647,"src":"3299:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7578,"name":"uint256","nodeType":"ElementaryTypeName","src":"3299:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3298:9:17"},"scope":7910,"src":"3110:1362:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7664,"nodeType":"Block","src":"4742:63:17","statements":[{"expression":{"arguments":[{"id":7657,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7650,"src":"4777:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":7660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4794:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4786:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7658,"name":"address","nodeType":"ElementaryTypeName","src":"4786:7:17","typeDescriptions":{}}},"id":7661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4786:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7655,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4760:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_ZKVerifier_$7910","typeString":"contract ZKVerifier"}},"id":7656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4765:11:17","memberName":"verifyProof","nodeType":"MemberAccess","referencedDeclaration":7709,"src":"4760:16:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,address) view external returns (bool)"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4760:37:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7654,"id":7663,"nodeType":"Return","src":"4753:44:17"}]},"documentation":{"id":7648,"nodeType":"StructuredDocumentation","src":"4484:185:17","text":" @dev Simplified verifier for frontend compatibility\n @param proofId The ID of the proof to verify\n @return True if the proof is valid, false otherwise"},"functionSelector":"8b6958ff","id":7665,"implemented":true,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"4684:11:17","nodeType":"FunctionDefinition","parameters":{"id":7651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7650,"mutability":"mutable","name":"proofId","nameLocation":"4704:7:17","nodeType":"VariableDeclaration","scope":7665,"src":"4696:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4696:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4695:17:17"},"returnParameters":{"id":7654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7665,"src":"4736:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7652,"name":"bool","nodeType":"ElementaryTypeName","src":"4736:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4735:6:17"},"scope":7910,"src":"4675:130:17","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[8132],"body":{"id":7708,"nodeType":"Block","src":"5157:631:17","statements":[{"assignments":[7678],"declarations":[{"constant":false,"id":7678,"mutability":"mutable","name":"proof","nameLocation":"5185:5:17","nodeType":"VariableDeclaration","scope":7708,"src":"5168:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_memory_ptr","typeString":"struct IZKVerifier.ProofData"},"typeName":{"id":7677,"nodeType":"UserDefinedTypeName","pathNode":{"id":7676,"name":"ProofData","nameLocations":["5168:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":8096,"src":"5168:9:17"},"referencedDeclaration":8096,"src":"5168:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData"}},"visibility":"internal"}],"id":7682,"initialValue":{"baseExpression":{"id":7679,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"5193:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofData_$8096_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.ProofData storage ref)"}},"id":7681,"indexExpression":{"id":7680,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7668,"src":"5201:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5193:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage","typeString":"struct IZKVerifier.ProofData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5168:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7683,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"5268:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_memory_ptr","typeString":"struct IZKVerifier.ProofData memory"}},"id":7684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5274:2:17","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8083,"src":"5268:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5280:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5268:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7690,"nodeType":"IfStatement","src":"5264:58:17","trueBody":{"id":7689,"nodeType":"Block","src":"5283:39:17","statements":[{"expression":{"hexValue":"66616c7365","id":7687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5305:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7675,"id":7688,"nodeType":"Return","src":"5298:12:17"}]}},{"condition":{"expression":{"id":7691,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"5384:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_memory_ptr","typeString":"struct IZKVerifier.ProofData memory"}},"id":7692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5390:9:17","memberName":"isRevoked","nodeType":"MemberAccess","referencedDeclaration":8095,"src":"5384:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7696,"nodeType":"IfStatement","src":"5380:60:17","trueBody":{"id":7695,"nodeType":"Block","src":"5401:39:17","statements":[{"expression":{"hexValue":"66616c7365","id":7693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5423:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7675,"id":7694,"nodeType":"Return","src":"5416:12:17"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7697,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5502:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5508:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"5502:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7699,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"5520:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_memory_ptr","typeString":"struct IZKVerifier.ProofData memory"}},"id":7700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5526:9:17","memberName":"expiresAt","nodeType":"MemberAccess","referencedDeclaration":8093,"src":"5520:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5502:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7705,"nodeType":"IfStatement","src":"5498:78:17","trueBody":{"id":7704,"nodeType":"Block","src":"5537:39:17","statements":[{"expression":{"hexValue":"66616c7365","id":7702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5559:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7675,"id":7703,"nodeType":"Return","src":"5552:12:17"}]}},{"expression":{"hexValue":"74727565","id":7706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5776:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7675,"id":7707,"nodeType":"Return","src":"5769:11:17"}]},"documentation":{"id":7666,"nodeType":"StructuredDocumentation","src":"4817:233:17","text":" @dev Verifies a ZK proof\n @param proofId The ID of the proof to verify\n @param verifierAddress The address of the verifier (if restricted)\n @return True if the proof is valid, false otherwise"},"functionSelector":"4fbe55f6","id":7709,"implemented":true,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"5065:11:17","nodeType":"FunctionDefinition","overrides":{"id":7672,"nodeType":"OverrideSpecifier","overrides":[],"src":"5133:8:17"},"parameters":{"id":7671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7668,"mutability":"mutable","name":"proofId","nameLocation":"5085:7:17","nodeType":"VariableDeclaration","scope":7709,"src":"5077:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7667,"name":"uint256","nodeType":"ElementaryTypeName","src":"5077:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7670,"mutability":"mutable","name":"verifierAddress","nameLocation":"5102:15:17","nodeType":"VariableDeclaration","scope":7709,"src":"5094:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7669,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5076:42:17"},"returnParameters":{"id":7675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7709,"src":"5151:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7673,"name":"bool","nodeType":"ElementaryTypeName","src":"5151:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5150:6:17"},"scope":7910,"src":"5056:732:17","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[8138],"body":{"id":7757,"nodeType":"Block","src":"5959:534:17","statements":[{"assignments":[7718],"declarations":[{"constant":false,"id":7718,"mutability":"mutable","name":"proof","nameLocation":"5988:5:17","nodeType":"VariableDeclaration","scope":7757,"src":"5970:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData"},"typeName":{"id":7717,"nodeType":"UserDefinedTypeName","pathNode":{"id":7716,"name":"ProofData","nameLocations":["5970:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":8096,"src":"5970:9:17"},"referencedDeclaration":8096,"src":"5970:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData"}},"visibility":"internal"}],"id":7722,"initialValue":{"baseExpression":{"id":7719,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"5996:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofData_$8096_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.ProofData storage ref)"}},"id":7721,"indexExpression":{"id":7720,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"6004:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5996:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage","typeString":"struct IZKVerifier.ProofData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5970:42:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7724,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"6075:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData storage pointer"}},"id":7725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6081:2:17","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8083,"src":"6075:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6087:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6075:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b56657269666965723a2050726f6f6620646f6573206e6f74206578697374","id":7728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6090:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab6eb277a6302005f1e16229a2f7cfc09e651e9e8f55c6abadf49f9879972541","typeString":"literal_string \"ZKVerifier: Proof does not exist\""},"value":"ZKVerifier: Proof does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ab6eb277a6302005f1e16229a2f7cfc09e651e9e8f55c6abadf49f9879972541","typeString":"literal_string \"ZKVerifier: Proof does not exist\""}],"id":7723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6067:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6067:58:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7730,"nodeType":"ExpressionStatement","src":"6067:58:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7732,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"6221:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData storage pointer"}},"id":7733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6227:5:17","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":8085,"src":"6221:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7734,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6236:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6240:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6236:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6221:25:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":7737,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7454,"src":"6250:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7740,"indexExpression":{"expression":{"id":7738,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6258:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6262:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6258:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6250:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6221:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b56657269666965723a2043616c6c6572206973206e6f7420617574686f72697a656420746f207265766f6b6520746869732070726f6f66","id":7742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6284:59:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_02e77c9f176379ab949bbccaa8d741295c0c0c666a9ee586839aa724457c2611","typeString":"literal_string \"ZKVerifier: Caller is not authorized to revoke this proof\""},"value":"ZKVerifier: Caller is not authorized to revoke this proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_02e77c9f176379ab949bbccaa8d741295c0c0c666a9ee586839aa724457c2611","typeString":"literal_string \"ZKVerifier: Caller is not authorized to revoke this proof\""}],"id":7731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6199:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:155:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7744,"nodeType":"ExpressionStatement","src":"6199:155:17"},{"expression":{"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7745,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7718,"src":"6404:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData storage pointer"}},"id":7747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6410:9:17","memberName":"isRevoked","nodeType":"MemberAccess","referencedDeclaration":8095,"src":"6404:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6422:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6404:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7750,"nodeType":"ExpressionStatement","src":"6404:22:17"},{"eventCall":{"arguments":[{"id":7752,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"6465:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7753,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6474:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6478:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6474:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7751,"name":"ProofRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8181,"src":"6452:12:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6452:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7756,"nodeType":"EmitStatement","src":"6447:38:17"}]},"documentation":{"id":7710,"nodeType":"StructuredDocumentation","src":"5800:97:17","text":" @dev Revokes a ZK proof\n @param proofId The ID of the proof to revoke"},"functionSelector":"962926a8","id":7758,"implemented":true,"kind":"function","modifiers":[],"name":"revokeProof","nameLocation":"5912:11:17","nodeType":"FunctionDefinition","overrides":{"id":7714,"nodeType":"OverrideSpecifier","overrides":[],"src":"5950:8:17"},"parameters":{"id":7713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"proofId","nameLocation":"5932:7:17","nodeType":"VariableDeclaration","scope":7758,"src":"5924:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7711,"name":"uint256","nodeType":"ElementaryTypeName","src":"5924:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5923:17:17"},"returnParameters":{"id":7715,"nodeType":"ParameterList","parameters":[],"src":"5959:0:17"},"scope":7910,"src":"5903:590:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[8147],"body":{"id":7772,"nodeType":"Block","src":"6730:42:17","statements":[{"expression":{"baseExpression":{"id":7768,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"6748:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofData_$8096_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.ProofData storage ref)"}},"id":7770,"indexExpression":{"id":7769,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"6756:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6748:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage","typeString":"struct IZKVerifier.ProofData storage ref"}},"functionReturnParameters":7767,"id":7771,"nodeType":"Return","src":"6741:23:17"}]},"documentation":{"id":7759,"nodeType":"StructuredDocumentation","src":"6505:130:17","text":" @dev Gets information about a proof\n @param proofId The ID of the proof\n @return The proof data"},"functionSelector":"da650454","id":7773,"implemented":true,"kind":"function","modifiers":[],"name":"getProofData","nameLocation":"6650:12:17","nodeType":"FunctionDefinition","overrides":{"id":7763,"nodeType":"OverrideSpecifier","overrides":[],"src":"6694:8:17"},"parameters":{"id":7762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"proofId","nameLocation":"6671:7:17","nodeType":"VariableDeclaration","scope":7773,"src":"6663:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7760,"name":"uint256","nodeType":"ElementaryTypeName","src":"6663:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6662:17:17"},"returnParameters":{"id":7767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7773,"src":"6712:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_memory_ptr","typeString":"struct IZKVerifier.ProofData"},"typeName":{"id":7765,"nodeType":"UserDefinedTypeName","pathNode":{"id":7764,"name":"ProofData","nameLocations":["6712:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":8096,"src":"6712:9:17"},"referencedDeclaration":8096,"src":"6712:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData"}},"visibility":"internal"}],"src":"6711:18:17"},"scope":7910,"src":"6641:131:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7786,"nodeType":"Block","src":"7031:42:17","statements":[{"expression":{"baseExpression":{"id":7782,"name":"_proofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7445,"src":"7049:7:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ProofData_$8096_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.ProofData storage ref)"}},"id":7784,"indexExpression":{"id":7783,"name":"proofId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7776,"src":"7057:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7049:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage","typeString":"struct IZKVerifier.ProofData storage ref"}},"functionReturnParameters":7781,"id":7785,"nodeType":"Return","src":"7042:23:17"}]},"documentation":{"id":7774,"nodeType":"StructuredDocumentation","src":"6784:165:17","text":" @dev Gets information about a proof (alias for frontend compatibility)\n @param proofId The ID of the proof\n @return The proof data"},"functionSelector":"11149ada","id":7787,"implemented":true,"kind":"function","modifiers":[],"name":"getProof","nameLocation":"6964:8:17","nodeType":"FunctionDefinition","parameters":{"id":7777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7776,"mutability":"mutable","name":"proofId","nameLocation":"6981:7:17","nodeType":"VariableDeclaration","scope":7787,"src":"6973:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7775,"name":"uint256","nodeType":"ElementaryTypeName","src":"6973:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6972:17:17"},"returnParameters":{"id":7781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7787,"src":"7013:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_memory_ptr","typeString":"struct IZKVerifier.ProofData"},"typeName":{"id":7779,"nodeType":"UserDefinedTypeName","pathNode":{"id":7778,"name":"ProofData","nameLocations":["7013:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":8096,"src":"7013:9:17"},"referencedDeclaration":8096,"src":"7013:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData"}},"visibility":"internal"}],"src":"7012:18:17"},"scope":7910,"src":"6955:118:17","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[8156],"body":{"id":7801,"nodeType":"Block","src":"7328:46:17","statements":[{"expression":{"baseExpression":{"id":7797,"name":"_circuits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"7346:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifierCircuit_$8080_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.VerifierCircuit storage ref)"}},"id":7799,"indexExpression":{"id":7798,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7790,"src":"7356:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7346:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage","typeString":"struct IZKVerifier.VerifierCircuit storage ref"}},"functionReturnParameters":7796,"id":7800,"nodeType":"Return","src":"7339:27:17"}]},"documentation":{"id":7788,"nodeType":"StructuredDocumentation","src":"7085:138:17","text":" @dev Gets information about a circuit\n @param circuitId The ID of the circuit\n @return The circuit data"},"functionSelector":"3997a7e0","id":7802,"implemented":true,"kind":"function","modifiers":[],"name":"getCircuitData","nameLocation":"7238:14:17","nodeType":"FunctionDefinition","overrides":{"id":7792,"nodeType":"OverrideSpecifier","overrides":[],"src":"7286:8:17"},"parameters":{"id":7791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7790,"mutability":"mutable","name":"circuitId","nameLocation":"7261:9:17","nodeType":"VariableDeclaration","scope":7802,"src":"7253:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7789,"name":"uint256","nodeType":"ElementaryTypeName","src":"7253:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7252:19:17"},"returnParameters":{"id":7796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7802,"src":"7304:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_memory_ptr","typeString":"struct IZKVerifier.VerifierCircuit"},"typeName":{"id":7794,"nodeType":"UserDefinedTypeName","pathNode":{"id":7793,"name":"VerifierCircuit","nameLocations":["7304:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":8080,"src":"7304:15:17"},"referencedDeclaration":8080,"src":"7304:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage_ptr","typeString":"struct IZKVerifier.VerifierCircuit"}},"visibility":"internal"}],"src":"7303:24:17"},"scope":7910,"src":"7229:145:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7815,"nodeType":"Block","src":"7624:45:17","statements":[{"expression":{"baseExpression":{"id":7811,"name":"_ownerProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"7642:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7813,"indexExpression":{"id":7812,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"7655:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7642:19:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":7810,"id":7814,"nodeType":"Return","src":"7635:26:17"}]},"documentation":{"id":7803,"nodeType":"StructuredDocumentation","src":"7386:150:17","text":" @dev Gets all proofs owned by an address\n @param owner The address to get proofs for\n @return An array of proof IDs"},"functionSelector":"9d68b434","id":7816,"implemented":true,"kind":"function","modifiers":[],"name":"getProofsByOwner","nameLocation":"7551:16:17","nodeType":"FunctionDefinition","parameters":{"id":7806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7805,"mutability":"mutable","name":"owner","nameLocation":"7576:5:17","nodeType":"VariableDeclaration","scope":7816,"src":"7568:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7804,"name":"address","nodeType":"ElementaryTypeName","src":"7568:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7567:15:17"},"returnParameters":{"id":7810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7816,"src":"7606:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7807,"name":"uint256","nodeType":"ElementaryTypeName","src":"7606:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7808,"nodeType":"ArrayTypeName","src":"7606:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7605:18:17"},"scope":7910,"src":"7542:127:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7829,"nodeType":"Block","src":"7906:51:17","statements":[{"expression":{"expression":{"baseExpression":{"id":7824,"name":"_ownerProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"7924:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7826,"indexExpression":{"id":7825,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7819,"src":"7937:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7924:18:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7943:6:17","memberName":"length","nodeType":"MemberAccess","src":"7924:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7823,"id":7828,"nodeType":"Return","src":"7917:32:17"}]},"documentation":{"id":7817,"nodeType":"StructuredDocumentation","src":"7681:150:17","text":" @dev Gets the number of proofs created by a user\n @param user The address of the user\n @return The number of proofs"},"functionSelector":"6b9a4ae3","id":7830,"implemented":true,"kind":"function","modifiers":[],"name":"getProofCount","nameLocation":"7846:13:17","nodeType":"FunctionDefinition","parameters":{"id":7820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7819,"mutability":"mutable","name":"user","nameLocation":"7868:4:17","nodeType":"VariableDeclaration","scope":7830,"src":"7860:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7818,"name":"address","nodeType":"ElementaryTypeName","src":"7860:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7859:14:17"},"returnParameters":{"id":7823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7830,"src":"7897:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7821,"name":"uint256","nodeType":"ElementaryTypeName","src":"7897:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7896:9:17"},"scope":7910,"src":"7837:120:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7856,"nodeType":"Block","src":"8261:139:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7841,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"8280:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":7842,"name":"_ownerProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"8288:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7844,"indexExpression":{"id":7843,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"8301:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8288:18:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8307:6:17","memberName":"length","nodeType":"MemberAccess","src":"8288:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8280:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b56657269666965723a20496e646578206f7574206f6620626f756e6473","id":7847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8315:33:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a74b4031d2a910a98e34382b95905461eda072dea4d856830f05760c4b7e1bc9","typeString":"literal_string \"ZKVerifier: Index out of bounds\""},"value":"ZKVerifier: Index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a74b4031d2a910a98e34382b95905461eda072dea4d856830f05760c4b7e1bc9","typeString":"literal_string \"ZKVerifier: Index out of bounds\""}],"id":7840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8272:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8272:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7849,"nodeType":"ExpressionStatement","src":"8272:77:17"},{"expression":{"baseExpression":{"baseExpression":{"id":7850,"name":"_ownerProofs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7450,"src":"8367:12:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":7852,"indexExpression":{"id":7851,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"8380:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8367:18:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":7854,"indexExpression":{"id":7853,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7835,"src":"8386:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8367:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7839,"id":7855,"nodeType":"Return","src":"8360:32:17"}]},"documentation":{"id":7831,"nodeType":"StructuredDocumentation","src":"7969:199:17","text":" @dev Gets a proof ID by index in a user's proofs\n @param user The address of the user\n @param index The index in the user's proof array\n @return The proof ID"},"functionSelector":"5c81587e","id":7857,"implemented":true,"kind":"function","modifiers":[],"name":"userProofByIndex","nameLocation":"8183:16:17","nodeType":"FunctionDefinition","parameters":{"id":7836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7833,"mutability":"mutable","name":"user","nameLocation":"8208:4:17","nodeType":"VariableDeclaration","scope":7857,"src":"8200:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7832,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7835,"mutability":"mutable","name":"index","nameLocation":"8222:5:17","nodeType":"VariableDeclaration","scope":7857,"src":"8214:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7834,"name":"uint256","nodeType":"ElementaryTypeName","src":"8214:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8199:29:17"},"returnParameters":{"id":7839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7857,"src":"8252:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7837,"name":"uint256","nodeType":"ElementaryTypeName","src":"8252:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8251:9:17"},"scope":7910,"src":"8174:226:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7882,"nodeType":"Block","src":"8590:142:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7866,"name":"_circuits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"8609:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifierCircuit_$8080_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.VerifierCircuit storage ref)"}},"id":7868,"indexExpression":{"id":7867,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"8619:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8609:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage","typeString":"struct IZKVerifier.VerifierCircuit storage ref"}},"id":7869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8630:2:17","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8071,"src":"8609:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8609:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b56657269666965723a204369726375697420646f6573206e6f74206578697374","id":7872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8639:36:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_15629865a56d9acfbe58e61fb815431b4ec2d73d30e4b0db8a2834c6f59f1cb5","typeString":"literal_string \"ZKVerifier: Circuit does not exist\""},"value":"ZKVerifier: Circuit does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_15629865a56d9acfbe58e61fb815431b4ec2d73d30e4b0db8a2834c6f59f1cb5","typeString":"literal_string \"ZKVerifier: Circuit does not exist\""}],"id":7865,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8601:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8601:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7874,"nodeType":"ExpressionStatement","src":"8601:75:17"},{"expression":{"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7875,"name":"_circuits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"8687:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifierCircuit_$8080_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.VerifierCircuit storage ref)"}},"id":7877,"indexExpression":{"id":7876,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7860,"src":"8697:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8687:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage","typeString":"struct IZKVerifier.VerifierCircuit storage ref"}},"id":7878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8708:8:17","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8079,"src":"8687:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8719:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8687:37:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7881,"nodeType":"ExpressionStatement","src":"8687:37:17"}]},"documentation":{"id":7858,"nodeType":"StructuredDocumentation","src":"8412:107:17","text":" @dev Deactivate a circuit\n @param circuitId The ID of the circuit to deactivate"},"functionSelector":"9c73dc54","id":7883,"implemented":true,"kind":"function","modifiers":[{"id":7863,"kind":"modifierInvocation","modifierName":{"id":7862,"name":"onlyAdmin","nameLocations":["8580:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":7483,"src":"8580:9:17"},"nodeType":"ModifierInvocation","src":"8580:9:17"}],"name":"deactivateCircuit","nameLocation":"8534:17:17","nodeType":"FunctionDefinition","parameters":{"id":7861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7860,"mutability":"mutable","name":"circuitId","nameLocation":"8560:9:17","nodeType":"VariableDeclaration","scope":7883,"src":"8552:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7859,"name":"uint256","nodeType":"ElementaryTypeName","src":"8552:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8551:19:17"},"returnParameters":{"id":7864,"nodeType":"ParameterList","parameters":[],"src":"8590:0:17"},"scope":7910,"src":"8525:207:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7908,"nodeType":"Block","src":"8922:141:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7892,"name":"_circuits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"8941:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifierCircuit_$8080_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.VerifierCircuit storage ref)"}},"id":7894,"indexExpression":{"id":7893,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"8951:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8941:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage","typeString":"struct IZKVerifier.VerifierCircuit storage ref"}},"id":7895,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8962:2:17","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8071,"src":"8941:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8968:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8941:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5a4b56657269666965723a204369726375697420646f6573206e6f74206578697374","id":7898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8971:36:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_15629865a56d9acfbe58e61fb815431b4ec2d73d30e4b0db8a2834c6f59f1cb5","typeString":"literal_string \"ZKVerifier: Circuit does not exist\""},"value":"ZKVerifier: Circuit does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_15629865a56d9acfbe58e61fb815431b4ec2d73d30e4b0db8a2834c6f59f1cb5","typeString":"literal_string \"ZKVerifier: Circuit does not exist\""}],"id":7891,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8933:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8933:75:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7900,"nodeType":"ExpressionStatement","src":"8933:75:17"},{"expression":{"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7901,"name":"_circuits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7440,"src":"9019:9:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_VerifierCircuit_$8080_storage_$","typeString":"mapping(uint256 => struct IZKVerifier.VerifierCircuit storage ref)"}},"id":7903,"indexExpression":{"id":7902,"name":"circuitId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7886,"src":"9029:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9019:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage","typeString":"struct IZKVerifier.VerifierCircuit storage ref"}},"id":7904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9040:8:17","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":8079,"src":"9019:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9051:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9019:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7907,"nodeType":"ExpressionStatement","src":"9019:36:17"}]},"documentation":{"id":7884,"nodeType":"StructuredDocumentation","src":"8744:107:17","text":" @dev Reactivate a circuit\n @param circuitId The ID of the circuit to reactivate"},"functionSelector":"cbf63e99","id":7909,"implemented":true,"kind":"function","modifiers":[{"id":7889,"kind":"modifierInvocation","modifierName":{"id":7888,"name":"onlyAdmin","nameLocations":["8912:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":7483,"src":"8912:9:17"},"nodeType":"ModifierInvocation","src":"8912:9:17"}],"name":"reactivateCircuit","nameLocation":"8866:17:17","nodeType":"FunctionDefinition","parameters":{"id":7887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7886,"mutability":"mutable","name":"circuitId","nameLocation":"8892:9:17","nodeType":"VariableDeclaration","scope":7909,"src":"8884:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7885,"name":"uint256","nodeType":"ElementaryTypeName","src":"8884:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8883:19:17"},"returnParameters":{"id":7890,"nodeType":"ParameterList","parameters":[],"src":"8922:0:17"},"scope":7910,"src":"8857:206:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":7911,"src":"271:8795:17","usedErrors":[13,18],"usedEvents":[24,8165,8174,8181]}],"src":"33:9034:17"},"id":17},"contracts/interfaces/IIssuerRegistry.sol":{"ast":{"absolutePath":"contracts/interfaces/IIssuerRegistry.sol","exportedSymbols":{"IIssuerRegistry":[8016]},"id":8017,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7912,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IIssuerRegistry","contractDependencies":[],"contractKind":"interface","documentation":{"id":7913,"nodeType":"StructuredDocumentation","src":"61:135:18","text":" @title IIssuerRegistry\n @dev Interface for the IssuerRegistry contract that manages verification of certificate issuers"},"fullyImplemented":false,"id":8016,"linearizedBaseContracts":[8016],"name":"IIssuerRegistry","nameLocation":"208:15:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IIssuerRegistry.IssuerTier","documentation":{"id":7914,"nodeType":"StructuredDocumentation","src":"231:264:18","text":" @dev Enum representing the verification tier level of an issuer\n T1: Highest level, verified via DNS\n T2: Medium level, verified via social media\n MANUAL: Lowest level, verified manually by admin\n NONE: Not verified"},"id":7919,"members":[{"id":7915,"name":"NONE","nameLocation":"519:4:18","nodeType":"EnumValue","src":"519:4:18"},{"id":7916,"name":"MANUAL","nameLocation":"525:6:18","nodeType":"EnumValue","src":"525:6:18"},{"id":7917,"name":"T2","nameLocation":"533:2:18","nodeType":"EnumValue","src":"533:2:18"},{"id":7918,"name":"T1","nameLocation":"537:2:18","nodeType":"EnumValue","src":"537:2:18"}],"name":"IssuerTier","nameLocation":"506:10:18","nodeType":"EnumDefinition","src":"501:40:18"},{"canonicalName":"IIssuerRegistry.IssuerData","documentation":{"id":7920,"nodeType":"StructuredDocumentation","src":"553:68:18","text":" @dev Struct containing issuer verification data"},"id":7934,"members":[{"constant":false,"id":7922,"mutability":"mutable","name":"issuerAddress","nameLocation":"664:13:18","nodeType":"VariableDeclaration","scope":7934,"src":"656:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7921,"name":"address","nodeType":"ElementaryTypeName","src":"656:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7925,"mutability":"mutable","name":"tier","nameLocation":"699:4:18","nodeType":"VariableDeclaration","scope":7934,"src":"688:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"typeName":{"id":7924,"nodeType":"UserDefinedTypeName","pathNode":{"id":7923,"name":"IssuerTier","nameLocations":["688:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":7919,"src":"688:10:18"},"referencedDeclaration":7919,"src":"688:10:18","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"visibility":"internal"},{"constant":false,"id":7927,"mutability":"mutable","name":"name","nameLocation":"721:4:18","nodeType":"VariableDeclaration","scope":7934,"src":"714:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7926,"name":"string","nodeType":"ElementaryTypeName","src":"714:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7929,"mutability":"mutable","name":"verificationData","nameLocation":"743:16:18","nodeType":"VariableDeclaration","scope":7934,"src":"736:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7928,"name":"string","nodeType":"ElementaryTypeName","src":"736:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7931,"mutability":"mutable","name":"verifiedAt","nameLocation":"825:10:18","nodeType":"VariableDeclaration","scope":7934,"src":"817:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7930,"name":"uint256","nodeType":"ElementaryTypeName","src":"817:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7933,"mutability":"mutable","name":"isActive","nameLocation":"851:8:18","nodeType":"VariableDeclaration","scope":7934,"src":"846:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7932,"name":"bool","nodeType":"ElementaryTypeName","src":"846:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"IssuerData","nameLocation":"634:10:18","nodeType":"StructDefinition","scope":8016,"src":"627:240:18","visibility":"public"},{"documentation":{"id":7935,"nodeType":"StructuredDocumentation","src":"879:270:18","text":" @dev Verifies an issuer with T1 verification (DNS)\n @param issuerName The name of the issuer organization\n @param domain The domain name used for verification\n @param verificationData Additional data used in verification process"},"functionSelector":"4181186f","id":7944,"implemented":false,"kind":"function","modifiers":[],"name":"verifyIssuerT1","nameLocation":"1164:14:18","nodeType":"FunctionDefinition","parameters":{"id":7942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7937,"mutability":"mutable","name":"issuerName","nameLocation":"1195:10:18","nodeType":"VariableDeclaration","scope":7944,"src":"1179:26:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7936,"name":"string","nodeType":"ElementaryTypeName","src":"1179:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7939,"mutability":"mutable","name":"domain","nameLocation":"1223:6:18","nodeType":"VariableDeclaration","scope":7944,"src":"1207:22:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7938,"name":"string","nodeType":"ElementaryTypeName","src":"1207:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7941,"mutability":"mutable","name":"verificationData","nameLocation":"1247:16:18","nodeType":"VariableDeclaration","scope":7944,"src":"1231:32:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7940,"name":"string","nodeType":"ElementaryTypeName","src":"1231:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1178:86:18"},"returnParameters":{"id":7943,"nodeType":"ParameterList","parameters":[],"src":"1273:0:18"},"scope":8016,"src":"1155:119:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7945,"nodeType":"StructuredDocumentation","src":"1286:227:18","text":" @dev Verifies an issuer with T2 verification (social media)\n @param issuerName The name of the issuer organization\n @param socialMediaUrl The URL of the social media post used for verification"},"functionSelector":"62078d2d","id":7952,"implemented":false,"kind":"function","modifiers":[],"name":"verifyIssuerT2","nameLocation":"1528:14:18","nodeType":"FunctionDefinition","parameters":{"id":7950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7947,"mutability":"mutable","name":"issuerName","nameLocation":"1559:10:18","nodeType":"VariableDeclaration","scope":7952,"src":"1543:26:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7946,"name":"string","nodeType":"ElementaryTypeName","src":"1543:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7949,"mutability":"mutable","name":"socialMediaUrl","nameLocation":"1587:14:18","nodeType":"VariableDeclaration","scope":7952,"src":"1571:30:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7948,"name":"string","nodeType":"ElementaryTypeName","src":"1571:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1542:60:18"},"returnParameters":{"id":7951,"nodeType":"ParameterList","parameters":[],"src":"1611:0:18"},"scope":8016,"src":"1519:93:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7953,"nodeType":"StructuredDocumentation","src":"1624:184:18","text":" @dev Manually verifies an issuer (only admin)\n @param issuerAddress The address to be verified\n @param issuerName The name of the issuer organization"},"functionSelector":"96ae3709","id":7960,"implemented":false,"kind":"function","modifiers":[],"name":"manualVerifyIssuer","nameLocation":"1823:18:18","nodeType":"FunctionDefinition","parameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7955,"mutability":"mutable","name":"issuerAddress","nameLocation":"1850:13:18","nodeType":"VariableDeclaration","scope":7960,"src":"1842:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7954,"name":"address","nodeType":"ElementaryTypeName","src":"1842:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7957,"mutability":"mutable","name":"issuerName","nameLocation":"1881:10:18","nodeType":"VariableDeclaration","scope":7960,"src":"1865:26:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7956,"name":"string","nodeType":"ElementaryTypeName","src":"1865:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1841:51:18"},"returnParameters":{"id":7959,"nodeType":"ParameterList","parameters":[],"src":"1901:0:18"},"scope":8016,"src":"1814:88:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7961,"nodeType":"StructuredDocumentation","src":"1914:195:18","text":" @dev Upgrades an issuer from T2 to T1\n @param domain The domain name used for verification\n @param verificationData Additional data used in verification process"},"functionSelector":"f52fa8e3","id":7968,"implemented":false,"kind":"function","modifiers":[],"name":"upgradeToT1","nameLocation":"2124:11:18","nodeType":"FunctionDefinition","parameters":{"id":7966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7963,"mutability":"mutable","name":"domain","nameLocation":"2152:6:18","nodeType":"VariableDeclaration","scope":7968,"src":"2136:22:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7962,"name":"string","nodeType":"ElementaryTypeName","src":"2136:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7965,"mutability":"mutable","name":"verificationData","nameLocation":"2176:16:18","nodeType":"VariableDeclaration","scope":7968,"src":"2160:32:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7964,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2135:58:18"},"returnParameters":{"id":7967,"nodeType":"ParameterList","parameters":[],"src":"2202:0:18"},"scope":8016,"src":"2115:88:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7969,"nodeType":"StructuredDocumentation","src":"2215:184:18","text":" @dev Checks if an address is a verified issuer\n @param issuer The address to check\n @return True if the address is a verified issuer, false otherwise"},"functionSelector":"ce21e1cb","id":7976,"implemented":false,"kind":"function","modifiers":[],"name":"isVerifiedIssuer","nameLocation":"2414:16:18","nodeType":"FunctionDefinition","parameters":{"id":7972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7971,"mutability":"mutable","name":"issuer","nameLocation":"2439:6:18","nodeType":"VariableDeclaration","scope":7976,"src":"2431:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7970,"name":"address","nodeType":"ElementaryTypeName","src":"2431:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:16:18"},"returnParameters":{"id":7975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7976,"src":"2470:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7973,"name":"bool","nodeType":"ElementaryTypeName","src":"2470:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2469:6:18"},"scope":8016,"src":"2405:71:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7977,"nodeType":"StructuredDocumentation","src":"2488:146:18","text":" @dev Gets the tier level of an issuer\n @param issuer The address to check\n @return The tier level of the issuer"},"functionSelector":"3dbf1db3","id":7985,"implemented":false,"kind":"function","modifiers":[],"name":"getIssuerTier","nameLocation":"2649:13:18","nodeType":"FunctionDefinition","parameters":{"id":7980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7979,"mutability":"mutable","name":"issuer","nameLocation":"2671:6:18","nodeType":"VariableDeclaration","scope":7985,"src":"2663:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7978,"name":"address","nodeType":"ElementaryTypeName","src":"2663:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2662:16:18"},"returnParameters":{"id":7984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7985,"src":"2702:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"typeName":{"id":7982,"nodeType":"UserDefinedTypeName","pathNode":{"id":7981,"name":"IssuerTier","nameLocations":["2702:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":7919,"src":"2702:10:18"},"referencedDeclaration":7919,"src":"2702:10:18","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"visibility":"internal"}],"src":"2701:12:18"},"scope":8016,"src":"2640:74:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7986,"nodeType":"StructuredDocumentation","src":"2726:135:18","text":" @dev Gets the data for an issuer\n @param issuer The address to get data for\n @return The issuer data"},"functionSelector":"88fd4a03","id":7994,"implemented":false,"kind":"function","modifiers":[],"name":"getIssuerData","nameLocation":"2876:13:18","nodeType":"FunctionDefinition","parameters":{"id":7989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7988,"mutability":"mutable","name":"issuer","nameLocation":"2898:6:18","nodeType":"VariableDeclaration","scope":7994,"src":"2890:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7987,"name":"address","nodeType":"ElementaryTypeName","src":"2890:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2889:16:18"},"returnParameters":{"id":7993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7994,"src":"2929:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_memory_ptr","typeString":"struct IIssuerRegistry.IssuerData"},"typeName":{"id":7991,"nodeType":"UserDefinedTypeName","pathNode":{"id":7990,"name":"IssuerData","nameLocations":["2929:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":7934,"src":"2929:10:18"},"referencedDeclaration":7934,"src":"2929:10:18","typeDescriptions":{"typeIdentifier":"t_struct$_IssuerData_$7934_storage_ptr","typeString":"struct IIssuerRegistry.IssuerData"}},"visibility":"internal"}],"src":"2928:19:18"},"scope":8016,"src":"2867:81:18","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":7995,"nodeType":"StructuredDocumentation","src":"2960:66:18","text":" @dev Event emitted when an issuer is verified"},"eventSelector":"744b9fea5666ea8b4537fd855cb825fa7fbe000660039896bb561038b15bdd8b","id":8004,"name":"IssuerVerified","nameLocation":"3038:14:18","nodeType":"EventDefinition","parameters":{"id":8003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7997,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"3069:6:18","nodeType":"VariableDeclaration","scope":8004,"src":"3053:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7996,"name":"address","nodeType":"ElementaryTypeName","src":"3053:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8000,"indexed":false,"mutability":"mutable","name":"tier","nameLocation":"3088:4:18","nodeType":"VariableDeclaration","scope":8004,"src":"3077:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"typeName":{"id":7999,"nodeType":"UserDefinedTypeName","pathNode":{"id":7998,"name":"IssuerTier","nameLocations":["3077:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":7919,"src":"3077:10:18"},"referencedDeclaration":7919,"src":"3077:10:18","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"visibility":"internal"},{"constant":false,"id":8002,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"3101:4:18","nodeType":"VariableDeclaration","scope":8004,"src":"3094:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8001,"name":"string","nodeType":"ElementaryTypeName","src":"3094:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3052:54:18"},"src":"3032:75:18"},{"anonymous":false,"documentation":{"id":8005,"nodeType":"StructuredDocumentation","src":"3119:66:18","text":" @dev Event emitted when an issuer is upgraded"},"eventSelector":"10a7378bef7b5bf006f1ee936fb06480be20ccdea69db1a4ef8aa15be3745b77","id":8015,"name":"IssuerUpgraded","nameLocation":"3197:14:18","nodeType":"EventDefinition","parameters":{"id":8014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8007,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"3228:6:18","nodeType":"VariableDeclaration","scope":8015,"src":"3212:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8006,"name":"address","nodeType":"ElementaryTypeName","src":"3212:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8010,"indexed":false,"mutability":"mutable","name":"fromTier","nameLocation":"3247:8:18","nodeType":"VariableDeclaration","scope":8015,"src":"3236:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"typeName":{"id":8009,"nodeType":"UserDefinedTypeName","pathNode":{"id":8008,"name":"IssuerTier","nameLocations":["3236:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":7919,"src":"3236:10:18"},"referencedDeclaration":7919,"src":"3236:10:18","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"visibility":"internal"},{"constant":false,"id":8013,"indexed":false,"mutability":"mutable","name":"toTier","nameLocation":"3268:6:18","nodeType":"VariableDeclaration","scope":8015,"src":"3257:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"},"typeName":{"id":8012,"nodeType":"UserDefinedTypeName","pathNode":{"id":8011,"name":"IssuerTier","nameLocations":["3257:10:18"],"nodeType":"IdentifierPath","referencedDeclaration":7919,"src":"3257:10:18"},"referencedDeclaration":7919,"src":"3257:10:18","typeDescriptions":{"typeIdentifier":"t_enum$_IssuerTier_$7919","typeString":"enum IIssuerRegistry.IssuerTier"}},"visibility":"internal"}],"src":"3211:64:18"},"src":"3191:85:18"}],"scope":8017,"src":"198:3081:18","usedErrors":[],"usedEvents":[8004,8015]}],"src":"33:3247:18"},"id":18},"contracts/interfaces/ISoulboundNFT.sol":{"ast":{"absolutePath":"contracts/interfaces/ISoulboundNFT.sol","exportedSymbols":{"ISoulboundNFT":[8065]},"id":8066,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8018,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ISoulboundNFT","contractDependencies":[],"contractKind":"interface","documentation":{"id":8019,"nodeType":"StructuredDocumentation","src":"61:82:19","text":" @title ISoulboundNFT\n @dev Interface for the SoulboundNFT contract"},"fullyImplemented":false,"id":8065,"linearizedBaseContracts":[8065],"name":"ISoulboundNFT","nameLocation":"155:13:19","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":8020,"nodeType":"StructuredDocumentation","src":"176:274:19","text":" @dev Mints a new certificate to a recipient\n @param recipient The address that will receive the certificate\n @param merkleProof The Merkle proof that verifies the recipient is eligible\n @return The token ID of the minted certificate"},"functionSelector":"c4b3d052","id":8030,"implemented":false,"kind":"function","modifiers":[],"name":"mintCertificate","nameLocation":"465:15:19","nodeType":"FunctionDefinition","parameters":{"id":8026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8022,"mutability":"mutable","name":"recipient","nameLocation":"489:9:19","nodeType":"VariableDeclaration","scope":8030,"src":"481:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8021,"name":"address","nodeType":"ElementaryTypeName","src":"481:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8025,"mutability":"mutable","name":"merkleProof","nameLocation":"519:11:19","nodeType":"VariableDeclaration","scope":8030,"src":"500:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8023,"name":"bytes32","nodeType":"ElementaryTypeName","src":"500:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8024,"nodeType":"ArrayTypeName","src":"500:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"480:51:19"},"returnParameters":{"id":8029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8030,"src":"550:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8027,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"549:9:19"},"scope":8065,"src":"456:103:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":8031,"nodeType":"StructuredDocumentation","src":"571:274:19","text":" @dev Checks if an address is eligible to claim a certificate\n @param recipient The address to check eligibility for\n @param merkleProof The Merkle proof to verify eligibility\n @return True if the address is eligible, false otherwise"},"functionSelector":"c18b065e","id":8041,"implemented":false,"kind":"function","modifiers":[],"name":"isEligible","nameLocation":"860:10:19","nodeType":"FunctionDefinition","parameters":{"id":8037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8033,"mutability":"mutable","name":"recipient","nameLocation":"879:9:19","nodeType":"VariableDeclaration","scope":8041,"src":"871:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8032,"name":"address","nodeType":"ElementaryTypeName","src":"871:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8036,"mutability":"mutable","name":"merkleProof","nameLocation":"909:11:19","nodeType":"VariableDeclaration","scope":8041,"src":"890:30:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8034,"name":"bytes32","nodeType":"ElementaryTypeName","src":"890:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8035,"nodeType":"ArrayTypeName","src":"890:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"870:51:19"},"returnParameters":{"id":8040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8041,"src":"945:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8038,"name":"bool","nodeType":"ElementaryTypeName","src":"945:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"944:6:19"},"scope":8065,"src":"851:100:19","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":8042,"nodeType":"StructuredDocumentation","src":"963:389:19","text":" @dev Gets the certificate data for a token ID\n @param tokenId The token ID to get data for\n @return issuer The address of the certificate issuer\n @return issuerLevel The level of the issuer (T1, T2, etc.)\n @return metadataURI The URI for the certificate metadata\n @return issuedTimestamp The timestamp when the certificate was issued"},"functionSelector":"31494bbb","id":8055,"implemented":false,"kind":"function","modifiers":[],"name":"getCertificateData","nameLocation":"1367:18:19","nodeType":"FunctionDefinition","parameters":{"id":8045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8044,"mutability":"mutable","name":"tokenId","nameLocation":"1394:7:19","nodeType":"VariableDeclaration","scope":8055,"src":"1386:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1386:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1385:17:19"},"returnParameters":{"id":8054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8047,"mutability":"mutable","name":"issuer","nameLocation":"1444:6:19","nodeType":"VariableDeclaration","scope":8055,"src":"1436:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8046,"name":"address","nodeType":"ElementaryTypeName","src":"1436:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8049,"mutability":"mutable","name":"issuerLevel","nameLocation":"1467:11:19","nodeType":"VariableDeclaration","scope":8055,"src":"1461:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8048,"name":"uint8","nodeType":"ElementaryTypeName","src":"1461:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8051,"mutability":"mutable","name":"metadataURI","nameLocation":"1503:11:19","nodeType":"VariableDeclaration","scope":8055,"src":"1489:25:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8050,"name":"string","nodeType":"ElementaryTypeName","src":"1489:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8053,"mutability":"mutable","name":"issuedTimestamp","nameLocation":"1533:15:19","nodeType":"VariableDeclaration","scope":8055,"src":"1525:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8052,"name":"uint256","nodeType":"ElementaryTypeName","src":"1525:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1425:130:19"},"scope":8065,"src":"1358:198:19","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":8056,"nodeType":"StructuredDocumentation","src":"1568:68:19","text":" @dev Event emitted when a certificate is minted"},"eventSelector":"a37c4df4d408fb32a449f1f05d2d288b7097ee26ecd7be996d720ba17e39abaf","id":8064,"name":"CertificateMinted","nameLocation":"1648:17:19","nodeType":"EventDefinition","parameters":{"id":8063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8058,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"1682:9:19","nodeType":"VariableDeclaration","scope":8064,"src":"1666:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8057,"name":"address","nodeType":"ElementaryTypeName","src":"1666:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8060,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1709:7:19","nodeType":"VariableDeclaration","scope":8064,"src":"1693:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1693:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8062,"indexed":true,"mutability":"mutable","name":"issuer","nameLocation":"1734:6:19","nodeType":"VariableDeclaration","scope":8064,"src":"1718:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8061,"name":"address","nodeType":"ElementaryTypeName","src":"1718:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1665:76:19"},"src":"1642:100:19"}],"scope":8066,"src":"145:1600:19","usedErrors":[],"usedEvents":[8064]}],"src":"33:1713:19"},"id":19},"contracts/interfaces/IZKVerifier.sol":{"ast":{"absolutePath":"contracts/interfaces/IZKVerifier.sol","exportedSymbols":{"IZKVerifier":[8182]},"id":8183,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8067,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IZKVerifier","contractDependencies":[],"contractKind":"interface","documentation":{"id":8068,"nodeType":"StructuredDocumentation","src":"61:131:20","text":" @title IZKVerifier\n @dev Interface for the ZKVerifier contract that verifies zero-knowledge proofs for certificates"},"fullyImplemented":false,"id":8182,"linearizedBaseContracts":[8182],"name":"IZKVerifier","nameLocation":"204:11:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IZKVerifier.VerifierCircuit","documentation":{"id":8069,"nodeType":"StructuredDocumentation","src":"223:91:20","text":" @dev Struct containing information about a registered verifier circuit"},"id":8080,"members":[{"constant":false,"id":8071,"mutability":"mutable","name":"id","nameLocation":"362:2:20","nodeType":"VariableDeclaration","scope":8080,"src":"354:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8070,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8073,"mutability":"mutable","name":"name","nameLocation":"382:4:20","nodeType":"VariableDeclaration","scope":8080,"src":"375:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8072,"name":"string","nodeType":"ElementaryTypeName","src":"375:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8075,"mutability":"mutable","name":"description","nameLocation":"404:11:20","nodeType":"VariableDeclaration","scope":8080,"src":"397:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8074,"name":"string","nodeType":"ElementaryTypeName","src":"397:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8077,"mutability":"mutable","name":"verifierContract","nameLocation":"434:16:20","nodeType":"VariableDeclaration","scope":8080,"src":"426:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8076,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8079,"mutability":"mutable","name":"isActive","nameLocation":"466:8:20","nodeType":"VariableDeclaration","scope":8080,"src":"461:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8078,"name":"bool","nodeType":"ElementaryTypeName","src":"461:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"VerifierCircuit","nameLocation":"327:15:20","nodeType":"StructDefinition","scope":8182,"src":"320:162:20","visibility":"public"},{"canonicalName":"IZKVerifier.ProofData","documentation":{"id":8081,"nodeType":"StructuredDocumentation","src":"494:54:20","text":" @dev Struct containing proof data"},"id":8096,"members":[{"constant":false,"id":8083,"mutability":"mutable","name":"id","nameLocation":"590:2:20","nodeType":"VariableDeclaration","scope":8096,"src":"582:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8082,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8085,"mutability":"mutable","name":"owner","nameLocation":"611:5:20","nodeType":"VariableDeclaration","scope":8096,"src":"603:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8084,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8087,"mutability":"mutable","name":"circuitId","nameLocation":"635:9:20","nodeType":"VariableDeclaration","scope":8096,"src":"627:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8086,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8089,"mutability":"mutable","name":"proofHash","nameLocation":"663:9:20","nodeType":"VariableDeclaration","scope":8096,"src":"655:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8088,"name":"bytes32","nodeType":"ElementaryTypeName","src":"655:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8091,"mutability":"mutable","name":"createdAt","nameLocation":"691:9:20","nodeType":"VariableDeclaration","scope":8096,"src":"683:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8090,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8093,"mutability":"mutable","name":"expiresAt","nameLocation":"719:9:20","nodeType":"VariableDeclaration","scope":8096,"src":"711:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8092,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8095,"mutability":"mutable","name":"isRevoked","nameLocation":"744:9:20","nodeType":"VariableDeclaration","scope":8096,"src":"739:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8094,"name":"bool","nodeType":"ElementaryTypeName","src":"739:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ProofData","nameLocation":"561:9:20","nodeType":"StructDefinition","scope":8182,"src":"554:207:20","visibility":"public"},{"documentation":{"id":8097,"nodeType":"StructuredDocumentation","src":"773:291:20","text":" @dev Registers a new verifier circuit (admin only)\n @param name The name of the circuit\n @param description The description of the circuit\n @param verifierContract The address of the verifier contract\n @return The ID of the registered circuit"},"functionSelector":"e8168b5c","id":8108,"implemented":false,"kind":"function","modifiers":[],"name":"registerCircuit","nameLocation":"1079:15:20","nodeType":"FunctionDefinition","parameters":{"id":8104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8099,"mutability":"mutable","name":"name","nameLocation":"1111:4:20","nodeType":"VariableDeclaration","scope":8108,"src":"1095:20:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":8098,"name":"string","nodeType":"ElementaryTypeName","src":"1095:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8101,"mutability":"mutable","name":"description","nameLocation":"1133:11:20","nodeType":"VariableDeclaration","scope":8108,"src":"1117:27:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":8100,"name":"string","nodeType":"ElementaryTypeName","src":"1117:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8103,"mutability":"mutable","name":"verifierContract","nameLocation":"1154:16:20","nodeType":"VariableDeclaration","scope":8108,"src":"1146:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8102,"name":"address","nodeType":"ElementaryTypeName","src":"1146:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1094:77:20"},"returnParameters":{"id":8107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8106,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8108,"src":"1190:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1189:9:20"},"scope":8182,"src":"1070:129:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":8109,"nodeType":"StructuredDocumentation","src":"1211:332:20","text":" @dev Creates a new ZK proof\n @param circuitId The ID of the circuit to use\n @param proofData The raw proof data\n @param publicInputs The public inputs for the proof\n @param validityPeriod How long the proof should be valid for (in seconds)\n @return The ID of the created proof"},"functionSelector":"733b0382","id":8122,"implemented":false,"kind":"function","modifiers":[],"name":"createProof","nameLocation":"1558:11:20","nodeType":"FunctionDefinition","parameters":{"id":8118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8111,"mutability":"mutable","name":"circuitId","nameLocation":"1588:9:20","nodeType":"VariableDeclaration","scope":8122,"src":"1580:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8113,"mutability":"mutable","name":"proofData","nameLocation":"1624:9:20","nodeType":"VariableDeclaration","scope":8122,"src":"1609:24:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8112,"name":"bytes","nodeType":"ElementaryTypeName","src":"1609:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8115,"mutability":"mutable","name":"publicInputs","nameLocation":"1660:12:20","nodeType":"VariableDeclaration","scope":8122,"src":"1645:27:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":8114,"name":"bytes","nodeType":"ElementaryTypeName","src":"1645:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8117,"mutability":"mutable","name":"validityPeriod","nameLocation":"1691:14:20","nodeType":"VariableDeclaration","scope":8122,"src":"1683:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1569:143:20"},"returnParameters":{"id":8121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8122,"src":"1731:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1731:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1730:9:20"},"scope":8182,"src":"1549:191:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":8123,"nodeType":"StructuredDocumentation","src":"1752:233:20","text":" @dev Verifies a ZK proof\n @param proofId The ID of the proof to verify\n @param verifierAddress The address of the verifier (if restricted)\n @return True if the proof is valid, false otherwise"},"functionSelector":"4fbe55f6","id":8132,"implemented":false,"kind":"function","modifiers":[],"name":"verifyProof","nameLocation":"2000:11:20","nodeType":"FunctionDefinition","parameters":{"id":8128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8125,"mutability":"mutable","name":"proofId","nameLocation":"2020:7:20","nodeType":"VariableDeclaration","scope":8132,"src":"2012:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8127,"mutability":"mutable","name":"verifierAddress","nameLocation":"2037:15:20","nodeType":"VariableDeclaration","scope":8132,"src":"2029:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8126,"name":"address","nodeType":"ElementaryTypeName","src":"2029:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2011:42:20"},"returnParameters":{"id":8131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8132,"src":"2077:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8129,"name":"bool","nodeType":"ElementaryTypeName","src":"2077:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2076:6:20"},"scope":8182,"src":"1991:92:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":8133,"nodeType":"StructuredDocumentation","src":"2095:97:20","text":" @dev Revokes a ZK proof\n @param proofId The ID of the proof to revoke"},"functionSelector":"962926a8","id":8138,"implemented":false,"kind":"function","modifiers":[],"name":"revokeProof","nameLocation":"2207:11:20","nodeType":"FunctionDefinition","parameters":{"id":8136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8135,"mutability":"mutable","name":"proofId","nameLocation":"2227:7:20","nodeType":"VariableDeclaration","scope":8138,"src":"2219:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8134,"name":"uint256","nodeType":"ElementaryTypeName","src":"2219:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2218:17:20"},"returnParameters":{"id":8137,"nodeType":"ParameterList","parameters":[],"src":"2244:0:20"},"scope":8182,"src":"2198:47:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":8139,"nodeType":"StructuredDocumentation","src":"2257:130:20","text":" @dev Gets information about a proof\n @param proofId The ID of the proof\n @return The proof data"},"functionSelector":"da650454","id":8147,"implemented":false,"kind":"function","modifiers":[],"name":"getProofData","nameLocation":"2402:12:20","nodeType":"FunctionDefinition","parameters":{"id":8142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8141,"mutability":"mutable","name":"proofId","nameLocation":"2423:7:20","nodeType":"VariableDeclaration","scope":8147,"src":"2415:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8140,"name":"uint256","nodeType":"ElementaryTypeName","src":"2415:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2414:17:20"},"returnParameters":{"id":8146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8147,"src":"2455:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_memory_ptr","typeString":"struct IZKVerifier.ProofData"},"typeName":{"id":8144,"nodeType":"UserDefinedTypeName","pathNode":{"id":8143,"name":"ProofData","nameLocations":["2455:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":8096,"src":"2455:9:20"},"referencedDeclaration":8096,"src":"2455:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_ProofData_$8096_storage_ptr","typeString":"struct IZKVerifier.ProofData"}},"visibility":"internal"}],"src":"2454:18:20"},"scope":8182,"src":"2393:80:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":8148,"nodeType":"StructuredDocumentation","src":"2485:138:20","text":" @dev Gets information about a circuit\n @param circuitId The ID of the circuit\n @return The circuit data"},"functionSelector":"3997a7e0","id":8156,"implemented":false,"kind":"function","modifiers":[],"name":"getCircuitData","nameLocation":"2638:14:20","nodeType":"FunctionDefinition","parameters":{"id":8151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8150,"mutability":"mutable","name":"circuitId","nameLocation":"2661:9:20","nodeType":"VariableDeclaration","scope":8156,"src":"2653:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2653:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:19:20"},"returnParameters":{"id":8155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8156,"src":"2695:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_memory_ptr","typeString":"struct IZKVerifier.VerifierCircuit"},"typeName":{"id":8153,"nodeType":"UserDefinedTypeName","pathNode":{"id":8152,"name":"VerifierCircuit","nameLocations":["2695:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":8080,"src":"2695:15:20"},"referencedDeclaration":8080,"src":"2695:15:20","typeDescriptions":{"typeIdentifier":"t_struct$_VerifierCircuit_$8080_storage_ptr","typeString":"struct IZKVerifier.VerifierCircuit"}},"visibility":"internal"}],"src":"2694:24:20"},"scope":8182,"src":"2629:90:20","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":8157,"nodeType":"StructuredDocumentation","src":"2731:72:20","text":" @dev Event emitted when a new circuit is registered"},"eventSelector":"36f7eadd002b90e1bdb9d11345529136f8f7a46b5217d5de6e736a8f99776a0e","id":8165,"name":"CircuitRegistered","nameLocation":"2815:17:20","nodeType":"EventDefinition","parameters":{"id":8164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8159,"indexed":true,"mutability":"mutable","name":"circuitId","nameLocation":"2849:9:20","nodeType":"VariableDeclaration","scope":8165,"src":"2833:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2833:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8161,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"2867:4:20","nodeType":"VariableDeclaration","scope":8165,"src":"2860:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8160,"name":"string","nodeType":"ElementaryTypeName","src":"2860:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8163,"indexed":false,"mutability":"mutable","name":"verifierContract","nameLocation":"2881:16:20","nodeType":"VariableDeclaration","scope":8165,"src":"2873:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8162,"name":"address","nodeType":"ElementaryTypeName","src":"2873:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2832:66:20"},"src":"2809:90:20"},{"anonymous":false,"documentation":{"id":8166,"nodeType":"StructuredDocumentation","src":"2911:67:20","text":" @dev Event emitted when a new proof is created"},"eventSelector":"a9665a946bb24359948b6138082dd57f3297d1d76e95e4420ddb59bc1c4f3f91","id":8174,"name":"ProofCreated","nameLocation":"2990:12:20","nodeType":"EventDefinition","parameters":{"id":8173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8168,"indexed":true,"mutability":"mutable","name":"proofId","nameLocation":"3019:7:20","nodeType":"VariableDeclaration","scope":8174,"src":"3003:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8167,"name":"uint256","nodeType":"ElementaryTypeName","src":"3003:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8170,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3044:5:20","nodeType":"VariableDeclaration","scope":8174,"src":"3028:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8169,"name":"address","nodeType":"ElementaryTypeName","src":"3028:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8172,"indexed":true,"mutability":"mutable","name":"circuitId","nameLocation":"3067:9:20","nodeType":"VariableDeclaration","scope":8174,"src":"3051:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3051:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3002:75:20"},"src":"2984:94:20"},{"anonymous":false,"documentation":{"id":8175,"nodeType":"StructuredDocumentation","src":"3090:63:20","text":" @dev Event emitted when a proof is revoked"},"eventSelector":"9f269db4ba9dbbfd518b4ee0320bc478722bc61c7200f8a89911c4963e45c015","id":8181,"name":"ProofRevoked","nameLocation":"3165:12:20","nodeType":"EventDefinition","parameters":{"id":8180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8177,"indexed":true,"mutability":"mutable","name":"proofId","nameLocation":"3194:7:20","nodeType":"VariableDeclaration","scope":8181,"src":"3178:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8176,"name":"uint256","nodeType":"ElementaryTypeName","src":"3178:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8179,"indexed":true,"mutability":"mutable","name":"revoker","nameLocation":"3219:7:20","nodeType":"VariableDeclaration","scope":8181,"src":"3203:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8178,"name":"address","nodeType":"ElementaryTypeName","src":"3203:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3177:50:20"},"src":"3159:69:20"}],"scope":8183,"src":"194:3037:20","usedErrors":[],"usedEvents":[8165,8174,8181]}],"src":"33:3199:20"},"id":20},"contracts/utils/MerkleProof.sol":{"ast":{"absolutePath":"contracts/utils/MerkleProof.sol","exportedSymbols":{"MerkleProof":[8269]},"id":8270,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8184,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:21"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":8185,"nodeType":"StructuredDocumentation","src":"61:82:21","text":" @title MerkleProof\n @dev Library for verification of Merkle proofs"},"fullyImplemented":true,"id":8269,"linearizedBaseContracts":[8269],"name":"MerkleProof","nameLocation":"153:11:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":8251,"nodeType":"Block","src":"644:697:21","statements":[{"assignments":[8199],"declarations":[{"constant":false,"id":8199,"mutability":"mutable","name":"computedHash","nameLocation":"663:12:21","nodeType":"VariableDeclaration","scope":8251,"src":"655:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"655:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8201,"initialValue":{"id":8200,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"678:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"655:27:21"},{"body":{"id":8245,"nodeType":"Block","src":"738:482:21","statements":[{"assignments":[8214],"declarations":[{"constant":false,"id":8214,"mutability":"mutable","name":"proofElement","nameLocation":"761:12:21","nodeType":"VariableDeclaration","scope":8245,"src":"753:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"753:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8218,"initialValue":{"baseExpression":{"id":8215,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8189,"src":"776:5:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8217,"indexExpression":{"id":8216,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"782:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"776:8:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"753:31:21"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8219,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"805:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8220,"name":"proofElement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"821:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"805:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8243,"nodeType":"Block","src":"1025:184:21","statements":[{"expression":{"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8233,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"1123:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":8237,"name":"proofElement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"1165:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8238,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"1179:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8235,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1148:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1152:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"1148:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1148:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8234,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1138:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1138:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1123:70:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8242,"nodeType":"ExpressionStatement","src":"1123:70:21"}]},"id":8244,"nodeType":"IfStatement","src":"801:408:21","trueBody":{"id":8232,"nodeType":"Block","src":"835:184:21","statements":[{"expression":{"id":8230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8222,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"933:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":8226,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"975:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8227,"name":"proofElement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8214,"src":"989:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8224,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"958:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"962:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"958:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"958:44:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8223,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"948:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"948:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"933:70:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8231,"nodeType":"ExpressionStatement","src":"933:70:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"715:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8207,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8189,"src":"719:5:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":8208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"725:6:21","memberName":"length","nodeType":"MemberAccess","src":"719:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"715:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8246,"initializationExpression":{"assignments":[8203],"declarations":[{"constant":false,"id":8203,"mutability":"mutable","name":"i","nameLocation":"708:1:21","nodeType":"VariableDeclaration","scope":8246,"src":"700:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8202,"name":"uint256","nodeType":"ElementaryTypeName","src":"700:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8205,"initialValue":{"hexValue":"30","id":8204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"712:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"700:13:21"},"loopExpression":{"expression":{"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"733:3:21","subExpression":{"id":8210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8203,"src":"733:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8212,"nodeType":"ExpressionStatement","src":"733:3:21"},"nodeType":"ForStatement","src":"695:525:21"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8247,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8199,"src":"1313:12:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8248,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8191,"src":"1329:4:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1313:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8197,"id":8250,"nodeType":"Return","src":"1306:27:21"}]},"documentation":{"id":8186,"nodeType":"StructuredDocumentation","src":"172:335:21","text":" @dev Verifies a Merkle proof proving the existence of a leaf in a Merkle tree.\n @param proof Merkle proof containing sibling hashes on the branch from the leaf to the root\n @param root Merkle root\n @param leaf Leaf of the Merkle tree\n @return True if the proof is valid, false otherwise"},"id":8252,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"522:6:21","nodeType":"FunctionDefinition","parameters":{"id":8194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8189,"mutability":"mutable","name":"proof","nameLocation":"556:5:21","nodeType":"VariableDeclaration","scope":8252,"src":"539:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"539:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8188,"nodeType":"ArrayTypeName","src":"539:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":8191,"mutability":"mutable","name":"root","nameLocation":"580:4:21","nodeType":"VariableDeclaration","scope":8252,"src":"572:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"572:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8193,"mutability":"mutable","name":"leaf","nameLocation":"603:4:21","nodeType":"VariableDeclaration","scope":8252,"src":"595:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"595:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"528:86:21"},"returnParameters":{"id":8197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8252,"src":"638:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8195,"name":"bool","nodeType":"ElementaryTypeName","src":"638:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"637:6:21"},"scope":8269,"src":"513:828:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8267,"nodeType":"Block","src":"1609:59:21","statements":[{"expression":{"arguments":[{"arguments":[{"id":8263,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"1654:4:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8261,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1637:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1641:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"1637:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1637:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8260,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1627:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1627:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8259,"id":8266,"nodeType":"Return","src":"1620:40:21"}]},"documentation":{"id":8253,"nodeType":"StructuredDocumentation","src":"1349:183:21","text":" @dev Helper function that creates a leaf node for a Merkle tree from an address\n @param addr The address to create a leaf for\n @return The leaf node"},"id":8268,"implemented":true,"kind":"function","modifiers":[],"name":"leafFromAddress","nameLocation":"1547:15:21","nodeType":"FunctionDefinition","parameters":{"id":8256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8255,"mutability":"mutable","name":"addr","nameLocation":"1571:4:21","nodeType":"VariableDeclaration","scope":8268,"src":"1563:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8254,"name":"address","nodeType":"ElementaryTypeName","src":"1563:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1562:14:21"},"returnParameters":{"id":8259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8268,"src":"1600:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1600:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1599:9:21"},"scope":8269,"src":"1538:130:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8270,"src":"145:1526:21","usedErrors":[],"usedEvents":[]}],"src":"33:1639:21"},"id":21}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b22a790d03a4ff125433e8f0227223ad9f46ec6c52c263f45c3f9ae0a785f3e464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0x2A PUSH26 0xD03A4FF125433E8F0227223AD9F46EC6C52C263F45C3F9AE0A7 DUP6 RETURN 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1488:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;431:1488:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b22a790d03a4ff125433e8f0227223ad9f46ec6c52c263f45c3f9ae0a785f3e464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0x2A PUSH26 0xD03A4FF125433E8F0227223AD9F46EC6C52C263F45C3F9AE0A7 DUP6 RETURN 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"431:1488:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cb8026103b37e335d367be611893cc85b642daf48902948c5c235464991ce0064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xB8 MUL PUSH2 0x3B3 PUSH31 0x335D367BE611893CC85B642DAF48902948C5C235464991CE0064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;297:18980:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205cb8026103b37e335d367be611893cc85b642daf48902948c5c235464991ce0064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xB8 MUL PUSH2 0x3B3 PUSH31 0x335D367BE611893CC85B642DAF48902948C5C235464991CE0064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;258:2354:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e65a3f6bb9e28d8169ea079d4b688370f4365b9ed0ac7dd77283f5739bebf8d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 PUSH6 0xA3F6BB9E28D8 AND SWAP15 LOG0 PUSH26 0xD4B688370F4365B9ED0AC7DD77283F5739BEBF8D64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"258:2354:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/IssuerRegistry.sol":{"IssuerRegistry":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"enum IIssuerRegistry.IssuerTier","name":"fromTier","type":"uint8"},{"indexed":false,"internalType":"enum IIssuerRegistry.IssuerTier","name":"toTier","type":"uint8"}],"name":"IssuerUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"enum IIssuerRegistry.IssuerTier","name":"tier","type":"uint8"},{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"IssuerVerified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"}],"name":"deactivateIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"domain","type":"string"}],"name":"getDomainIssuer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"}],"name":"getIssuerData","outputs":[{"components":[{"internalType":"address","name":"issuerAddress","type":"address"},{"internalType":"enum IIssuerRegistry.IssuerTier","name":"tier","type":"uint8"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"verificationData","type":"string"},{"internalType":"uint256","name":"verifiedAt","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct IIssuerRegistry.IssuerData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"}],"name":"getIssuerTier","outputs":[{"internalType":"enum IIssuerRegistry.IssuerTier","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"socialMediaUrl","type":"string"}],"name":"getSocialMediaIssuer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"}],"name":"isVerifiedIssuer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"issuerAddress","type":"address"},{"internalType":"string","name":"issuerName","type":"string"}],"name":"manualVerifyIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"}],"name":"reactivateIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"domain","type":"string"},{"internalType":"string","name":"verificationData","type":"string"}],"name":"upgradeToT1","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"issuerName","type":"string"},{"internalType":"string","name":"domain","type":"string"},{"internalType":"string","name":"verificationData","type":"string"}],"name":"verifyIssuerT1","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"issuerName","type":"string"},{"internalType":"string","name":"socialMediaUrl","type":"string"}],"name":"verifyIssuerT2","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_6573":{"entryPoint":null,"id":6573,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":96,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:219:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:22","statements":[{"nodeType":"YulAssignment","src":"125:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:22"},"nodeType":"YulFunctionCall","src":"133:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:22"},"nodeType":"YulFunctionCall","src":"194:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:22"},"nodeType":"YulFunctionCall","src":"190:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:22"},"nodeType":"YulFunctionCall","src":"178:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:22"},"nodeType":"YulFunctionCall","src":"160:51:22"},"nodeType":"YulExpressionStatement","src":"160:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:22","type":""}],"src":"14:203:22"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40 DUP2 PUSH2 0x60 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1770 DUP1 PUSH2 0xBF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88FD4A03 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCE21E1CB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCE21E1CB EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xDE222A9F EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xF52FA8E3 EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88FD4A03 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x96AE3709 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xAF221C59 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x62078D2D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x62078D2D EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x7A009135 EQ PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1785F53C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x1B76637E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x3DBF1DB3 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x4181186F EQ PUSH2 0x176 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x160 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH2 0x118 PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST PUSH2 0x118 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x137E JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x137E JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x118 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x299 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x328 JUMPI PUSH2 0x328 PUSH2 0x10C5 JUMP JUMPDEST SUB PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x38C SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP9 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP7 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP TIMESTAMP PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP5 DUP6 ADD DUP2 SWAP1 MSTORE CALLER DUP5 MSTORE DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR DUP4 SSTORE SWAP4 DUP6 ADD MLOAD SWAP2 SWAP4 SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4B6 JUMPI PUSH2 0x4B6 PUSH2 0x10C5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x4CF SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x4E4 SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x51E SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE CALLER SWAP1 PUSH32 0x744B9FEA5666EA8B4537FD855CB825FA7FBE000660039896BB561038B15BDD8B SWAP1 PUSH2 0x582 SWAP1 PUSH1 0x3 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5AF SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x631 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A20536F6369616C206D656469612055524C PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x8185B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP7 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP5 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP TIMESTAMP PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP5 DUP6 ADD DUP2 SWAP1 MSTORE CALLER DUP5 MSTORE DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR DUP4 SSTORE SWAP4 DUP6 ADD MLOAD SWAP2 SWAP4 SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x725 JUMPI PUSH2 0x725 PUSH2 0x10C5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x73E SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x753 SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x794 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE CALLER SWAP1 PUSH32 0x744B9FEA5666EA8B4537FD855CB825FA7FBE000660039896BB561038B15BDD8B SWAP1 PUSH2 0x7F8 SWAP1 PUSH1 0x2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x80E PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x83A PUSH2 0x100A JUMP JUMPDEST PUSH2 0x844 PUSH1 0x0 PUSH2 0x1037 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8AB JUMPI PUSH2 0x8AB PUSH2 0x10C5 JUMP JUMPDEST SUB PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x928 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD SWAP4 DUP5 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x987 JUMPI PUSH2 0x987 PUSH2 0x10C5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x99B SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9C7 SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA14 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA14 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xA2D SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA59 SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x26B0B73AB0B6103B32B934B334B1B0BA34B7B7 PUSH1 0x69 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP DUP3 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SWAP1 SWAP6 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP6 MSTORE SWAP5 DUP2 MSTORE SWAP3 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP6 AND DUP2 OR DUP3 SSTORE SWAP3 DUP6 ADD MLOAD SWAP1 SWAP4 SWAP1 SWAP3 DUP5 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBF0 PUSH2 0x10C5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xC09 SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xC1E SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x744B9FEA5666EA8B4537FD855CB825FA7FBE000660039896BB561038B15BDD8B SWAP1 PUSH2 0xC83 SWAP1 PUSH1 0x1 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA4 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFD PUSH2 0x10C5 JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xCC0 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA4 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH2 0xD44 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0x1037 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDA7 JUMPI PUSH2 0xDA7 PUSH2 0x10C5 JUMP JUMPDEST EQ PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A2043616C6C6572206973206E6F74206120 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x2A191034B9B9BAB2B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE23 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x145D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 PUSH2 0xE87 SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEB3 SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xED5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x3 PUSH1 0xA0 SHL OR DUP2 SSTORE SWAP4 SWAP5 POP POP PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 POP PUSH2 0xF3A SWAP1 POP DUP7 DUP9 DUP4 PUSH2 0x1642 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 PUSH2 0xF64 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFA8 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE CALLER SWAP1 PUSH32 0x10A7378BEF7B5BF006F1EE936FB06480BE20CCDEA69DB1A4EF8AA15BE3745B77 SWAP1 PUSH2 0x582 SWAP1 DUP6 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x109E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BE DUP3 PUSH2 0x1087 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x10F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xCC0 DUP3 DUP5 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x111D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x114D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1191 DUP11 DUP4 DUP12 ADD PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B6 DUP11 DUP4 DUP12 ADD PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11DC DUP10 DUP3 DUP11 ADD PUSH2 0x110B JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1228 DUP9 DUP4 DUP10 ADD PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124E DUP8 DUP3 DUP9 ADD PUSH2 0x110B JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1275 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x125D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1296 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x125A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD MSTORE DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0x12D1 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x10DB JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x12EB PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x1308 DUP3 DUP3 PUSH2 0x127E JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1349 DUP5 PUSH2 0x1087 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1371 DUP7 DUP3 DUP8 ADD PUSH2 0x110B JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B4 DUP6 DUP3 DUP7 ADD PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A2043616C6C6572206973206E6F7420616E PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1030B236B4B7 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A204E6F7420612072656769737465726564 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x1034B9B9BAB2B9 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A20446F6D61696E20616C72656164792072 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x1959DA5CDD195C9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14D0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1540 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x151D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x153C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1529 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155F PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0x1573 DUP2 PUSH2 0x156D DUP5 SLOAD PUSH2 0x14BC JUMP JUMPDEST DUP5 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1590 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x153C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x15D7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x15B8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x15F5 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x160F DUP2 DUP6 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x165A JUMPI PUSH2 0x165A PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0x166E DUP4 PUSH2 0x1668 DUP4 SLOAD PUSH2 0x14BC JUMP JUMPDEST DUP4 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x168A JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16D3 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x16B3 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x16F0 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1715 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x125A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x172D DUP3 DUP6 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x10BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10DB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xC2 MSTORE8 LOG2 SWAP3 0xAF 0xD7 SAR SWAP16 PUSH19 0x53A23F478D2C2CE9259B10E3514CC71C8B3E02 0xBC 0x4D ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"278:8201:15:-:0;;;844:113;;;;;;;;;-1:-1:-1;866:10:15;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:22;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;931:10:15::1;923:19;::::0;;;:7:::1;:19;::::0;;;;:26;;-1:-1:-1;;923:26:15::1;945:4;923:26;::::0;;278:8201;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:22:-;278:8201:15;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":4106,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1493":{"entryPoint":null,"id":1493,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":4151,"id":146,"parameterSlots":1,"returnSlots":0},"@addAdmin_6601":{"entryPoint":2054,"id":6601,"parameterSlots":1,"returnSlots":0},"@deactivateIssuer_6968":{"entryPoint":2118,"id":6968,"parameterSlots":1,"returnSlots":0},"@getDomainIssuer_6928":{"entryPoint":3216,"id":6928,"parameterSlots":2,"returnSlots":1},"@getIssuerData_6915":{"entryPoint":2284,"id":6915,"parameterSlots":1,"returnSlots":1},"@getIssuerTier_6900":{"entryPoint":null,"id":6900,"parameterSlots":1,"returnSlots":1},"@getSocialMediaIssuer_6941":{"entryPoint":3368,"id":6941,"parameterSlots":2,"returnSlots":1},"@isVerifiedIssuer_6884":{"entryPoint":3270,"id":6884,"parameterSlots":1,"returnSlots":1},"@manualVerifyIssuer_6760":{"entryPoint":2767,"id":6760,"parameterSlots":3,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@reactivateIssuer_6995":{"entryPoint":698,"id":6995,"parameterSlots":1,"returnSlots":0},"@removeAdmin_6616":{"entryPoint":657,"id":6616,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":2098,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":3388,"id":126,"parameterSlots":1,"returnSlots":0},"@upgradeToT1_6861":{"entryPoint":3450,"id":6861,"parameterSlots":4,"returnSlots":0},"@verifyIssuerT1_6672":{"entryPoint":879,"id":6672,"parameterSlots":6,"returnSlots":0},"@verifyIssuerT2_6726":{"entryPoint":1426,"id":6726,"parameterSlots":4,"returnSlots":0},"abi_decode_address":{"entryPoint":4231,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":4363,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":4259,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_calldata_ptr":{"entryPoint":4907,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_calldata_ptr":{"entryPoint":4990,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptr":{"entryPoint":4590,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr":{"entryPoint":4436,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_enum_IssuerTier":{"entryPoint":4315,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":4734,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5197,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5891,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_IssuerTier_$7919__to_t_uint8__fromStack_reversed":{"entryPoint":4349,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_IssuerTier_$7919_t_enum$_IssuerTier_$7919__to_t_uint8_t_uint8__fromStack_reversed":{"entryPoint":5919,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_enum$_IssuerTier_$7919_t_string_calldata_ptr__to_t_uint8_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5637,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_15c2df89cc928a5defa8b99f77d32747c862880d54502d24b029d5f69b5180ea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3d167a22411753196fb802f79a8ee1894b1ed2196cbac251acaf1a6dbfdb92e1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6291deb225596c25ca20a0f3313a25b9da7be5d90294e5fc9c4c0ba6f3095c56__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5213,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6ae16b7a678f64f31ff81d9de54c4761fbbe0c9d45a0070a756bf01323abdc51__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5056,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b25f10b81ebcff67eaeeddecc76e99eafb2276643d5aa3a26186ba20962164fa__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_IssuerData_$7934_memory_ptr__to_t_struct$_IssuerData_$7934_memory_ptr__fromStack_reversed":{"entryPoint":4778,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":5366,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage":{"entryPoint":5698,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5445,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4698,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5308,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x21":{"entryPoint":4293,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5286,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13197:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:22","statements":[{"nodeType":"YulAssignment","src":"73:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:22"},"nodeType":"YulFunctionCall","src":"82:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:22"}]},{"body":{"nodeType":"YulBlock","src":"165:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:22"},"nodeType":"YulFunctionCall","src":"167:12:22"},"nodeType":"YulExpressionStatement","src":"167:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:22"},"nodeType":"YulFunctionCall","src":"146:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:22"},"nodeType":"YulFunctionCall","src":"142:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:22"},"nodeType":"YulFunctionCall","src":"131:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:22"},"nodeType":"YulFunctionCall","src":"121:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:22"},"nodeType":"YulFunctionCall","src":"114:50:22"},"nodeType":"YulIf","src":"111:70:22"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:22","type":""}],"src":"14:173:22"},{"body":{"nodeType":"YulBlock","src":"262:116:22","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:22"},"nodeType":"YulFunctionCall","src":"310:12:22"},"nodeType":"YulExpressionStatement","src":"310:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:22"},"nodeType":"YulFunctionCall","src":"279:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:22"},"nodeType":"YulFunctionCall","src":"275:32:22"},"nodeType":"YulIf","src":"272:52:22"},{"nodeType":"YulAssignment","src":"333:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:22"},"nodeType":"YulFunctionCall","src":"343:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:22","type":""}],"src":"192:186:22"},{"body":{"nodeType":"YulBlock","src":"415:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"432:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"439:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"444:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"435:3:22"},"nodeType":"YulFunctionCall","src":"435:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"425:6:22"},"nodeType":"YulFunctionCall","src":"425:31:22"},"nodeType":"YulExpressionStatement","src":"425:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"472:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"475:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"465:6:22"},"nodeType":"YulFunctionCall","src":"465:15:22"},"nodeType":"YulExpressionStatement","src":"465:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"496:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"499:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"489:6:22"},"nodeType":"YulFunctionCall","src":"489:15:22"},"nodeType":"YulExpressionStatement","src":"489:15:22"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"383:127:22"},{"body":{"nodeType":"YulBlock","src":"567:186:22","statements":[{"body":{"nodeType":"YulBlock","src":"609:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"630:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"637:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"642:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"633:3:22"},"nodeType":"YulFunctionCall","src":"633:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"623:6:22"},"nodeType":"YulFunctionCall","src":"623:31:22"},"nodeType":"YulExpressionStatement","src":"623:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"674:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"677:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"667:6:22"},"nodeType":"YulFunctionCall","src":"667:15:22"},"nodeType":"YulExpressionStatement","src":"667:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"702:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"705:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"695:6:22"},"nodeType":"YulFunctionCall","src":"695:15:22"},"nodeType":"YulExpressionStatement","src":"695:15:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"590:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"597:1:22","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"587:2:22"},"nodeType":"YulFunctionCall","src":"587:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"580:6:22"},"nodeType":"YulFunctionCall","src":"580:20:22"},"nodeType":"YulIf","src":"577:143:22"},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"736:3:22"},{"name":"value","nodeType":"YulIdentifier","src":"741:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"729:6:22"},"nodeType":"YulFunctionCall","src":"729:18:22"},"nodeType":"YulExpressionStatement","src":"729:18:22"}]},"name":"abi_encode_enum_IssuerTier","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"551:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"558:3:22","type":""}],"src":"515:238:22"},{"body":{"nodeType":"YulBlock","src":"872:96:22","statements":[{"nodeType":"YulAssignment","src":"882:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"894:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"905:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"890:3:22"},"nodeType":"YulFunctionCall","src":"890:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"882:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"944:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"952:9:22"}],"functionName":{"name":"abi_encode_enum_IssuerTier","nodeType":"YulIdentifier","src":"917:26:22"},"nodeType":"YulFunctionCall","src":"917:45:22"},"nodeType":"YulExpressionStatement","src":"917:45:22"}]},"name":"abi_encode_tuple_t_enum$_IssuerTier_$7919__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"841:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"852:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"863:4:22","type":""}],"src":"758:210:22"},{"body":{"nodeType":"YulBlock","src":"1046:275:22","statements":[{"body":{"nodeType":"YulBlock","src":"1095:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1104:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1107:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1097:6:22"},"nodeType":"YulFunctionCall","src":"1097:12:22"},"nodeType":"YulExpressionStatement","src":"1097:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1074:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1082:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1070:3:22"},"nodeType":"YulFunctionCall","src":"1070:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"1089:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1066:3:22"},"nodeType":"YulFunctionCall","src":"1066:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1059:6:22"},"nodeType":"YulFunctionCall","src":"1059:35:22"},"nodeType":"YulIf","src":"1056:55:22"},{"nodeType":"YulAssignment","src":"1120:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1143:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1130:12:22"},"nodeType":"YulFunctionCall","src":"1130:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1120:6:22"}]},{"body":{"nodeType":"YulBlock","src":"1193:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1202:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1205:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1195:6:22"},"nodeType":"YulFunctionCall","src":"1195:12:22"},"nodeType":"YulExpressionStatement","src":"1195:12:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1165:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1173:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1162:2:22"},"nodeType":"YulFunctionCall","src":"1162:30:22"},"nodeType":"YulIf","src":"1159:50:22"},{"nodeType":"YulAssignment","src":"1218:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1234:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1242:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1230:3:22"},"nodeType":"YulFunctionCall","src":"1230:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"1218:8:22"}]},{"body":{"nodeType":"YulBlock","src":"1299:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1308:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1311:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1301:6:22"},"nodeType":"YulFunctionCall","src":"1301:12:22"},"nodeType":"YulExpressionStatement","src":"1301:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1270:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"1278:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1266:3:22"},"nodeType":"YulFunctionCall","src":"1266:19:22"},{"kind":"number","nodeType":"YulLiteral","src":"1287:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1262:3:22"},"nodeType":"YulFunctionCall","src":"1262:30:22"},{"name":"end","nodeType":"YulIdentifier","src":"1294:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1259:2:22"},"nodeType":"YulFunctionCall","src":"1259:39:22"},"nodeType":"YulIf","src":"1256:59:22"}]},"name":"abi_decode_string_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1009:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"1017:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"1025:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"1035:6:22","type":""}],"src":"973:348:22"},{"body":{"nodeType":"YulBlock","src":"1490:846:22","statements":[{"body":{"nodeType":"YulBlock","src":"1536:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1545:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1548:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1538:6:22"},"nodeType":"YulFunctionCall","src":"1538:12:22"},"nodeType":"YulExpressionStatement","src":"1538:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1511:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1520:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1507:3:22"},"nodeType":"YulFunctionCall","src":"1507:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1532:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1503:3:22"},"nodeType":"YulFunctionCall","src":"1503:32:22"},"nodeType":"YulIf","src":"1500:52:22"},{"nodeType":"YulVariableDeclaration","src":"1561:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1588:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1575:12:22"},"nodeType":"YulFunctionCall","src":"1575:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1607:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1617:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1611:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1662:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1671:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1674:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1664:6:22"},"nodeType":"YulFunctionCall","src":"1664:12:22"},"nodeType":"YulExpressionStatement","src":"1664:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1650:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1658:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1647:2:22"},"nodeType":"YulFunctionCall","src":"1647:14:22"},"nodeType":"YulIf","src":"1644:34:22"},{"nodeType":"YulVariableDeclaration","src":"1687:85:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1744:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1755:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1740:3:22"},"nodeType":"YulFunctionCall","src":"1740:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1764:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"1713:26:22"},"nodeType":"YulFunctionCall","src":"1713:59:22"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"1691:8:22","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"1701:8:22","type":""}]},{"nodeType":"YulAssignment","src":"1781:18:22","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"1791:8:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1781:6:22"}]},{"nodeType":"YulAssignment","src":"1808:18:22","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"1818:8:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1808:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1835:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1868:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1879:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:22"},"nodeType":"YulFunctionCall","src":"1864:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1851:12:22"},"nodeType":"YulFunctionCall","src":"1851:32:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1839:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1912:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1921:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1924:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1914:6:22"},"nodeType":"YulFunctionCall","src":"1914:12:22"},"nodeType":"YulExpressionStatement","src":"1914:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1898:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1908:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1895:2:22"},"nodeType":"YulFunctionCall","src":"1895:16:22"},"nodeType":"YulIf","src":"1892:36:22"},{"nodeType":"YulVariableDeclaration","src":"1937:87:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1994:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2005:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1990:3:22"},"nodeType":"YulFunctionCall","src":"1990:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2016:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"1963:26:22"},"nodeType":"YulFunctionCall","src":"1963:61:22"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"1941:8:22","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"1951:8:22","type":""}]},{"nodeType":"YulAssignment","src":"2033:18:22","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"2043:8:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2033:6:22"}]},{"nodeType":"YulAssignment","src":"2060:18:22","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"2070:8:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2060:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2087:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2120:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2131:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2116:3:22"},"nodeType":"YulFunctionCall","src":"2116:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2103:12:22"},"nodeType":"YulFunctionCall","src":"2103:32:22"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"2091:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2164:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2173:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2176:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2166:6:22"},"nodeType":"YulFunctionCall","src":"2166:12:22"},"nodeType":"YulExpressionStatement","src":"2166:12:22"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"2150:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2160:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2147:2:22"},"nodeType":"YulFunctionCall","src":"2147:16:22"},"nodeType":"YulIf","src":"2144:36:22"},{"nodeType":"YulVariableDeclaration","src":"2189:87:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2246:9:22"},{"name":"offset_2","nodeType":"YulIdentifier","src":"2257:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2242:3:22"},"nodeType":"YulFunctionCall","src":"2242:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2268:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"2215:26:22"},"nodeType":"YulFunctionCall","src":"2215:61:22"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"2193:8:22","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"2203:8:22","type":""}]},{"nodeType":"YulAssignment","src":"2285:18:22","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"2295:8:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2285:6:22"}]},{"nodeType":"YulAssignment","src":"2312:18:22","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"2322:8:22"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2312:6:22"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1416:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1427:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1439:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1447:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1455:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1463:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1471:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"1479:6:22","type":""}],"src":"1326:1010:22"},{"body":{"nodeType":"YulBlock","src":"2468:594:22","statements":[{"body":{"nodeType":"YulBlock","src":"2514:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2523:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2526:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2516:6:22"},"nodeType":"YulFunctionCall","src":"2516:12:22"},"nodeType":"YulExpressionStatement","src":"2516:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2489:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2498:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2485:3:22"},"nodeType":"YulFunctionCall","src":"2485:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2510:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2481:3:22"},"nodeType":"YulFunctionCall","src":"2481:32:22"},"nodeType":"YulIf","src":"2478:52:22"},{"nodeType":"YulVariableDeclaration","src":"2539:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2566:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2553:12:22"},"nodeType":"YulFunctionCall","src":"2553:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2543:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2585:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2595:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2589:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2640:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2649:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2652:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2642:6:22"},"nodeType":"YulFunctionCall","src":"2642:12:22"},"nodeType":"YulExpressionStatement","src":"2642:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2628:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2636:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2625:2:22"},"nodeType":"YulFunctionCall","src":"2625:14:22"},"nodeType":"YulIf","src":"2622:34:22"},{"nodeType":"YulVariableDeclaration","src":"2665:85:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2722:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"2733:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2718:3:22"},"nodeType":"YulFunctionCall","src":"2718:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2742:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"2691:26:22"},"nodeType":"YulFunctionCall","src":"2691:59:22"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"2669:8:22","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"2679:8:22","type":""}]},{"nodeType":"YulAssignment","src":"2759:18:22","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"2769:8:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2759:6:22"}]},{"nodeType":"YulAssignment","src":"2786:18:22","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"2796:8:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2786:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2813:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2846:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2857:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2842:3:22"},"nodeType":"YulFunctionCall","src":"2842:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2829:12:22"},"nodeType":"YulFunctionCall","src":"2829:32:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"2817:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2890:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2899:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2902:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2892:6:22"},"nodeType":"YulFunctionCall","src":"2892:12:22"},"nodeType":"YulExpressionStatement","src":"2892:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"2876:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"2886:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2873:2:22"},"nodeType":"YulFunctionCall","src":"2873:16:22"},"nodeType":"YulIf","src":"2870:36:22"},{"nodeType":"YulVariableDeclaration","src":"2915:87:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2972:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"2983:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2968:3:22"},"nodeType":"YulFunctionCall","src":"2968:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2994:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"2941:26:22"},"nodeType":"YulFunctionCall","src":"2941:61:22"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"2919:8:22","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"2929:8:22","type":""}]},{"nodeType":"YulAssignment","src":"3011:18:22","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"3021:8:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3011:6:22"}]},{"nodeType":"YulAssignment","src":"3038:18:22","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"3048:8:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3038:6:22"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2410:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2421:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2433:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2441:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2449:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2457:6:22","type":""}],"src":"2341:721:22"},{"body":{"nodeType":"YulBlock","src":"3133:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3143:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3152:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3147:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3212:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3237:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"3242:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3233:3:22"},"nodeType":"YulFunctionCall","src":"3233:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3256:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"3261:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3252:3:22"},"nodeType":"YulFunctionCall","src":"3252:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3246:5:22"},"nodeType":"YulFunctionCall","src":"3246:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3226:6:22"},"nodeType":"YulFunctionCall","src":"3226:39:22"},"nodeType":"YulExpressionStatement","src":"3226:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3173:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"3176:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3170:2:22"},"nodeType":"YulFunctionCall","src":"3170:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3184:19:22","statements":[{"nodeType":"YulAssignment","src":"3186:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3195:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"3198:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3191:3:22"},"nodeType":"YulFunctionCall","src":"3191:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3186:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"3166:3:22","statements":[]},"src":"3162:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3295:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"3300:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3291:3:22"},"nodeType":"YulFunctionCall","src":"3291:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"3309:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3284:6:22"},"nodeType":"YulFunctionCall","src":"3284:27:22"},"nodeType":"YulExpressionStatement","src":"3284:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3111:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3116:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"3121:6:22","type":""}],"src":"3067:250:22"},{"body":{"nodeType":"YulBlock","src":"3372:221:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3382:26:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3402:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3396:5:22"},"nodeType":"YulFunctionCall","src":"3396:12:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3386:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3424:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"3429:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3417:6:22"},"nodeType":"YulFunctionCall","src":"3417:19:22"},"nodeType":"YulExpressionStatement","src":"3417:19:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3484:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"3491:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3480:3:22"},"nodeType":"YulFunctionCall","src":"3480:16:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3502:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"3507:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3498:3:22"},"nodeType":"YulFunctionCall","src":"3498:14:22"},{"name":"length","nodeType":"YulIdentifier","src":"3514:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"3445:34:22"},"nodeType":"YulFunctionCall","src":"3445:76:22"},"nodeType":"YulExpressionStatement","src":"3445:76:22"},{"nodeType":"YulAssignment","src":"3530:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3545:3:22"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3558:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3566:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3554:3:22"},"nodeType":"YulFunctionCall","src":"3554:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3575:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3571:3:22"},"nodeType":"YulFunctionCall","src":"3571:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3550:3:22"},"nodeType":"YulFunctionCall","src":"3550:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3541:3:22"},"nodeType":"YulFunctionCall","src":"3541:39:22"},{"kind":"number","nodeType":"YulLiteral","src":"3582:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3537:3:22"},"nodeType":"YulFunctionCall","src":"3537:50:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3530:3:22"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3349:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3356:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3364:3:22","type":""}],"src":"3322:271:22"},{"body":{"nodeType":"YulBlock","src":"3755:757:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3772:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3783:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3765:6:22"},"nodeType":"YulFunctionCall","src":"3765:21:22"},"nodeType":"YulExpressionStatement","src":"3765:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3806:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3817:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3802:3:22"},"nodeType":"YulFunctionCall","src":"3802:18:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3832:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3826:5:22"},"nodeType":"YulFunctionCall","src":"3826:13:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3849:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3854:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3845:3:22"},"nodeType":"YulFunctionCall","src":"3845:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"3858:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3841:3:22"},"nodeType":"YulFunctionCall","src":"3841:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3822:3:22"},"nodeType":"YulFunctionCall","src":"3822:39:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3795:6:22"},"nodeType":"YulFunctionCall","src":"3795:67:22"},"nodeType":"YulExpressionStatement","src":"3795:67:22"},{"nodeType":"YulVariableDeclaration","src":"3871:42:22","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3901:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3909:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3897:3:22"},"nodeType":"YulFunctionCall","src":"3897:15:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3891:5:22"},"nodeType":"YulFunctionCall","src":"3891:22:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3875:12:22","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3949:12:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3967:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3978:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3963:3:22"},"nodeType":"YulFunctionCall","src":"3963:18:22"}],"functionName":{"name":"abi_encode_enum_IssuerTier","nodeType":"YulIdentifier","src":"3922:26:22"},"nodeType":"YulFunctionCall","src":"3922:60:22"},"nodeType":"YulExpressionStatement","src":"3922:60:22"},{"nodeType":"YulVariableDeclaration","src":"3991:44:22","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4023:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4031:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4019:3:22"},"nodeType":"YulFunctionCall","src":"4019:15:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4013:5:22"},"nodeType":"YulFunctionCall","src":"4013:22:22"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"3995:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4055:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4066:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4051:3:22"},"nodeType":"YulFunctionCall","src":"4051:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"4071:4:22","type":"","value":"0xc0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4044:6:22"},"nodeType":"YulFunctionCall","src":"4044:32:22"},"nodeType":"YulExpressionStatement","src":"4044:32:22"},{"nodeType":"YulVariableDeclaration","src":"4085:68:22","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"4117:14:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4137:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4148:3:22","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:22"},"nodeType":"YulFunctionCall","src":"4133:19:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4099:17:22"},"nodeType":"YulFunctionCall","src":"4099:54:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4089:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4162:44:22","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4194:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4202:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4190:3:22"},"nodeType":"YulFunctionCall","src":"4190:15:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4184:5:22"},"nodeType":"YulFunctionCall","src":"4184:22:22"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"4166:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4226:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4237:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4222:3:22"},"nodeType":"YulFunctionCall","src":"4222:19:22"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4251:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4259:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4247:3:22"},"nodeType":"YulFunctionCall","src":"4247:22:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4275:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4271:3:22"},"nodeType":"YulFunctionCall","src":"4271:7:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4243:3:22"},"nodeType":"YulFunctionCall","src":"4243:36:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4215:6:22"},"nodeType":"YulFunctionCall","src":"4215:65:22"},"nodeType":"YulExpressionStatement","src":"4215:65:22"},{"nodeType":"YulVariableDeclaration","src":"4289:55:22","value":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"4321:14:22"},{"name":"tail_1","nodeType":"YulIdentifier","src":"4337:6:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"4303:17:22"},"nodeType":"YulFunctionCall","src":"4303:41:22"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"4293:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4364:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4375:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4360:3:22"},"nodeType":"YulFunctionCall","src":"4360:19:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4391:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4399:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4387:3:22"},"nodeType":"YulFunctionCall","src":"4387:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4381:5:22"},"nodeType":"YulFunctionCall","src":"4381:23:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4353:6:22"},"nodeType":"YulFunctionCall","src":"4353:52:22"},"nodeType":"YulExpressionStatement","src":"4353:52:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4425:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4436:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4421:3:22"},"nodeType":"YulFunctionCall","src":"4421:20:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4467:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4475:3:22","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4463:3:22"},"nodeType":"YulFunctionCall","src":"4463:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4457:5:22"},"nodeType":"YulFunctionCall","src":"4457:23:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4450:6:22"},"nodeType":"YulFunctionCall","src":"4450:31:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4443:6:22"},"nodeType":"YulFunctionCall","src":"4443:39:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4414:6:22"},"nodeType":"YulFunctionCall","src":"4414:69:22"},"nodeType":"YulExpressionStatement","src":"4414:69:22"},{"nodeType":"YulAssignment","src":"4492:14:22","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"4500:6:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4492:4:22"}]}]},"name":"abi_encode_tuple_t_struct$_IssuerData_$7934_memory_ptr__to_t_struct$_IssuerData_$7934_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3724:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3735:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3746:4:22","type":""}],"src":"3598:914:22"},{"body":{"nodeType":"YulBlock","src":"4618:102:22","statements":[{"nodeType":"YulAssignment","src":"4628:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4640:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4651:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4636:3:22"},"nodeType":"YulFunctionCall","src":"4636:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4628:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4670:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4685:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4701:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4706:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4697:3:22"},"nodeType":"YulFunctionCall","src":"4697:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"4710:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4693:3:22"},"nodeType":"YulFunctionCall","src":"4693:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4681:3:22"},"nodeType":"YulFunctionCall","src":"4681:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4663:6:22"},"nodeType":"YulFunctionCall","src":"4663:51:22"},"nodeType":"YulExpressionStatement","src":"4663:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4587:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4598:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4609:4:22","type":""}],"src":"4517:203:22"},{"body":{"nodeType":"YulBlock","src":"4832:378:22","statements":[{"body":{"nodeType":"YulBlock","src":"4878:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4887:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4890:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4880:6:22"},"nodeType":"YulFunctionCall","src":"4880:12:22"},"nodeType":"YulExpressionStatement","src":"4880:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4853:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4862:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4849:3:22"},"nodeType":"YulFunctionCall","src":"4849:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4874:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4845:3:22"},"nodeType":"YulFunctionCall","src":"4845:32:22"},"nodeType":"YulIf","src":"4842:52:22"},{"nodeType":"YulAssignment","src":"4903:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4932:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4913:18:22"},"nodeType":"YulFunctionCall","src":"4913:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4903:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"4951:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4982:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4993:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4978:3:22"},"nodeType":"YulFunctionCall","src":"4978:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4965:12:22"},"nodeType":"YulFunctionCall","src":"4965:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4955:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5040:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5049:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5052:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5042:6:22"},"nodeType":"YulFunctionCall","src":"5042:12:22"},"nodeType":"YulExpressionStatement","src":"5042:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5012:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5020:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5009:2:22"},"nodeType":"YulFunctionCall","src":"5009:30:22"},"nodeType":"YulIf","src":"5006:50:22"},{"nodeType":"YulVariableDeclaration","src":"5065:85:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5122:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5133:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5118:3:22"},"nodeType":"YulFunctionCall","src":"5118:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5142:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"5091:26:22"},"nodeType":"YulFunctionCall","src":"5091:59:22"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"5069:8:22","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"5079:8:22","type":""}]},{"nodeType":"YulAssignment","src":"5159:18:22","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"5169:8:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5159:6:22"}]},{"nodeType":"YulAssignment","src":"5186:18:22","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"5196:8:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5186:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4782:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4793:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4805:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4813:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4821:6:22","type":""}],"src":"4725:485:22"},{"body":{"nodeType":"YulBlock","src":"5305:321:22","statements":[{"body":{"nodeType":"YulBlock","src":"5351:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5360:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5363:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5353:6:22"},"nodeType":"YulFunctionCall","src":"5353:12:22"},"nodeType":"YulExpressionStatement","src":"5353:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5326:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5335:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5322:3:22"},"nodeType":"YulFunctionCall","src":"5322:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5347:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5318:3:22"},"nodeType":"YulFunctionCall","src":"5318:32:22"},"nodeType":"YulIf","src":"5315:52:22"},{"nodeType":"YulVariableDeclaration","src":"5376:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5403:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5390:12:22"},"nodeType":"YulFunctionCall","src":"5390:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5380:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5456:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5465:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5468:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5458:6:22"},"nodeType":"YulFunctionCall","src":"5458:12:22"},"nodeType":"YulExpressionStatement","src":"5458:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5428:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"5436:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5425:2:22"},"nodeType":"YulFunctionCall","src":"5425:30:22"},"nodeType":"YulIf","src":"5422:50:22"},{"nodeType":"YulVariableDeclaration","src":"5481:85:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5538:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5549:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5534:3:22"},"nodeType":"YulFunctionCall","src":"5534:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5558:7:22"}],"functionName":{"name":"abi_decode_string_calldata","nodeType":"YulIdentifier","src":"5507:26:22"},"nodeType":"YulFunctionCall","src":"5507:59:22"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"5485:8:22","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"5495:8:22","type":""}]},{"nodeType":"YulAssignment","src":"5575:18:22","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"5585:8:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5575:6:22"}]},{"nodeType":"YulAssignment","src":"5602:18:22","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"5612:8:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5602:6:22"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5263:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5274:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5286:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5294:6:22","type":""}],"src":"5215:411:22"},{"body":{"nodeType":"YulBlock","src":"5726:92:22","statements":[{"nodeType":"YulAssignment","src":"5736:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5748:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5759:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5744:3:22"},"nodeType":"YulFunctionCall","src":"5744:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5736:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5778:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5803:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5796:6:22"},"nodeType":"YulFunctionCall","src":"5796:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5789:6:22"},"nodeType":"YulFunctionCall","src":"5789:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5771:6:22"},"nodeType":"YulFunctionCall","src":"5771:41:22"},"nodeType":"YulExpressionStatement","src":"5771:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5695:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5706:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5717:4:22","type":""}],"src":"5631:187:22"},{"body":{"nodeType":"YulBlock","src":"5997:228:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6014:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6025:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6007:6:22"},"nodeType":"YulFunctionCall","src":"6007:21:22"},"nodeType":"YulExpressionStatement","src":"6007:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6048:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6059:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6044:3:22"},"nodeType":"YulFunctionCall","src":"6044:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"6064:2:22","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6037:6:22"},"nodeType":"YulFunctionCall","src":"6037:30:22"},"nodeType":"YulExpressionStatement","src":"6037:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6087:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6098:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6083:3:22"},"nodeType":"YulFunctionCall","src":"6083:18:22"},{"hexValue":"49737375657252656769737472793a2043616c6c6572206973206e6f7420616e","kind":"string","nodeType":"YulLiteral","src":"6103:34:22","type":"","value":"IssuerRegistry: Caller is not an"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6076:6:22"},"nodeType":"YulFunctionCall","src":"6076:62:22"},"nodeType":"YulExpressionStatement","src":"6076:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6158:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6169:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6154:3:22"},"nodeType":"YulFunctionCall","src":"6154:18:22"},{"hexValue":"2061646d696e","kind":"string","nodeType":"YulLiteral","src":"6174:8:22","type":"","value":" admin"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6147:6:22"},"nodeType":"YulFunctionCall","src":"6147:36:22"},"nodeType":"YulExpressionStatement","src":"6147:36:22"},{"nodeType":"YulAssignment","src":"6192:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6204:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6215:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6200:3:22"},"nodeType":"YulFunctionCall","src":"6200:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6192:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6ae16b7a678f64f31ff81d9de54c4761fbbe0c9d45a0070a756bf01323abdc51__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5974:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5988:4:22","type":""}],"src":"5823:402:22"},{"body":{"nodeType":"YulBlock","src":"6404:229:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6421:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6414:6:22"},"nodeType":"YulFunctionCall","src":"6414:21:22"},"nodeType":"YulExpressionStatement","src":"6414:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6455:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6466:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6451:3:22"},"nodeType":"YulFunctionCall","src":"6451:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"6471:2:22","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6444:6:22"},"nodeType":"YulFunctionCall","src":"6444:30:22"},"nodeType":"YulExpressionStatement","src":"6444:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6494:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6505:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6490:3:22"},"nodeType":"YulFunctionCall","src":"6490:18:22"},{"hexValue":"49737375657252656769737472793a204e6f7420612072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"6510:34:22","type":"","value":"IssuerRegistry: Not a registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6483:6:22"},"nodeType":"YulFunctionCall","src":"6483:62:22"},"nodeType":"YulExpressionStatement","src":"6483:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6565:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6576:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6561:3:22"},"nodeType":"YulFunctionCall","src":"6561:18:22"},{"hexValue":"20697373756572","kind":"string","nodeType":"YulLiteral","src":"6581:9:22","type":"","value":" issuer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6554:6:22"},"nodeType":"YulFunctionCall","src":"6554:37:22"},"nodeType":"YulExpressionStatement","src":"6554:37:22"},{"nodeType":"YulAssignment","src":"6600:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6612:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6623:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6608:3:22"},"nodeType":"YulFunctionCall","src":"6608:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6600:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3d167a22411753196fb802f79a8ee1894b1ed2196cbac251acaf1a6dbfdb92e1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6381:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6395:4:22","type":""}],"src":"6230:403:22"},{"body":{"nodeType":"YulBlock","src":"6787:124:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6810:3:22"},{"name":"value0","nodeType":"YulIdentifier","src":"6815:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"6823:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"6797:12:22"},"nodeType":"YulFunctionCall","src":"6797:33:22"},"nodeType":"YulExpressionStatement","src":"6797:33:22"},{"nodeType":"YulVariableDeclaration","src":"6839:26:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6853:3:22"},{"name":"value1","nodeType":"YulIdentifier","src":"6858:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:22"},"nodeType":"YulFunctionCall","src":"6849:16:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6843:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6881:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"6885:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6874:6:22"},"nodeType":"YulFunctionCall","src":"6874:13:22"},"nodeType":"YulExpressionStatement","src":"6874:13:22"},{"nodeType":"YulAssignment","src":"6896:9:22","value":{"name":"_1","nodeType":"YulIdentifier","src":"6903:2:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6896:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6755:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6760:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6768:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6779:3:22","type":""}],"src":"6638:273:22"},{"body":{"nodeType":"YulBlock","src":"7090:231:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7107:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7118:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7100:6:22"},"nodeType":"YulFunctionCall","src":"7100:21:22"},"nodeType":"YulExpressionStatement","src":"7100:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7141:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7152:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7137:3:22"},"nodeType":"YulFunctionCall","src":"7137:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"7157:2:22","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7130:6:22"},"nodeType":"YulFunctionCall","src":"7130:30:22"},"nodeType":"YulExpressionStatement","src":"7130:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7180:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7191:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7176:3:22"},"nodeType":"YulFunctionCall","src":"7176:18:22"},{"hexValue":"49737375657252656769737472793a20446f6d61696e20616c72656164792072","kind":"string","nodeType":"YulLiteral","src":"7196:34:22","type":"","value":"IssuerRegistry: Domain already r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7169:6:22"},"nodeType":"YulFunctionCall","src":"7169:62:22"},"nodeType":"YulExpressionStatement","src":"7169:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7251:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7262:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7247:3:22"},"nodeType":"YulFunctionCall","src":"7247:18:22"},{"hexValue":"656769737465726564","kind":"string","nodeType":"YulLiteral","src":"7267:11:22","type":"","value":"egistered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7240:6:22"},"nodeType":"YulFunctionCall","src":"7240:39:22"},"nodeType":"YulExpressionStatement","src":"7240:39:22"},{"nodeType":"YulAssignment","src":"7288:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7300:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7311:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7296:3:22"},"nodeType":"YulFunctionCall","src":"7296:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7288:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6291deb225596c25ca20a0f3313a25b9da7be5d90294e5fc9c4c0ba6f3095c56__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7067:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7081:4:22","type":""}],"src":"6916:405:22"},{"body":{"nodeType":"YulBlock","src":"7358:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7375:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7382:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7387:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7378:3:22"},"nodeType":"YulFunctionCall","src":"7378:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7368:6:22"},"nodeType":"YulFunctionCall","src":"7368:31:22"},"nodeType":"YulExpressionStatement","src":"7368:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7415:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7418:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7408:6:22"},"nodeType":"YulFunctionCall","src":"7408:15:22"},"nodeType":"YulExpressionStatement","src":"7408:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7439:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7442:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7432:6:22"},"nodeType":"YulFunctionCall","src":"7432:15:22"},"nodeType":"YulExpressionStatement","src":"7432:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7326:127:22"},{"body":{"nodeType":"YulBlock","src":"7513:325:22","statements":[{"nodeType":"YulAssignment","src":"7523:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7537:1:22","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7540:4:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7533:3:22"},"nodeType":"YulFunctionCall","src":"7533:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7523:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"7554:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7584:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"7590:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7580:3:22"},"nodeType":"YulFunctionCall","src":"7580:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7558:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7631:31:22","statements":[{"nodeType":"YulAssignment","src":"7633:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7647:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7655:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7643:3:22"},"nodeType":"YulFunctionCall","src":"7643:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7633:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7611:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7604:6:22"},"nodeType":"YulFunctionCall","src":"7604:26:22"},"nodeType":"YulIf","src":"7601:61:22"},{"body":{"nodeType":"YulBlock","src":"7721:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7742:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7749:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7754:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7745:3:22"},"nodeType":"YulFunctionCall","src":"7745:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7735:6:22"},"nodeType":"YulFunctionCall","src":"7735:31:22"},"nodeType":"YulExpressionStatement","src":"7735:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7786:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7789:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7779:6:22"},"nodeType":"YulFunctionCall","src":"7779:15:22"},"nodeType":"YulExpressionStatement","src":"7779:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7814:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7817:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7807:6:22"},"nodeType":"YulFunctionCall","src":"7807:15:22"},"nodeType":"YulExpressionStatement","src":"7807:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7677:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7700:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7708:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7697:2:22"},"nodeType":"YulFunctionCall","src":"7697:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7674:2:22"},"nodeType":"YulFunctionCall","src":"7674:38:22"},"nodeType":"YulIf","src":"7671:161:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7493:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7502:6:22","type":""}],"src":"7458:380:22"},{"body":{"nodeType":"YulBlock","src":"7899:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7916:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"7919:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7909:6:22"},"nodeType":"YulFunctionCall","src":"7909:14:22"},"nodeType":"YulExpressionStatement","src":"7909:14:22"},{"nodeType":"YulAssignment","src":"7932:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7950:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7953:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7940:9:22"},"nodeType":"YulFunctionCall","src":"7940:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7932:4:22"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7882:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7890:4:22","type":""}],"src":"7843:121:22"},{"body":{"nodeType":"YulBlock","src":"8050:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"8083:425:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8097:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8107:1:22","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8101:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8128:2:22"},{"name":"array","nodeType":"YulIdentifier","src":"8132:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8121:6:22"},"nodeType":"YulFunctionCall","src":"8121:17:22"},"nodeType":"YulExpressionStatement","src":"8121:17:22"},{"nodeType":"YulVariableDeclaration","src":"8151:31:22","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8173:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"8177:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8163:9:22"},"nodeType":"YulFunctionCall","src":"8163:19:22"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8155:4:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8195:57:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8218:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8228:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8235:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"8247:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8231:3:22"},"nodeType":"YulFunctionCall","src":"8231:19:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8224:3:22"},"nodeType":"YulFunctionCall","src":"8224:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8214:3:22"},"nodeType":"YulFunctionCall","src":"8214:38:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8199:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8289:23:22","statements":[{"nodeType":"YulAssignment","src":"8291:19:22","value":{"name":"data","nodeType":"YulIdentifier","src":"8306:4:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8291:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8271:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"8283:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8268:2:22"},"nodeType":"YulFunctionCall","src":"8268:20:22"},"nodeType":"YulIf","src":"8265:47:22"},{"nodeType":"YulVariableDeclaration","src":"8325:41:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8339:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8349:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8356:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8361:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8352:3:22"},"nodeType":"YulFunctionCall","src":"8352:12:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8345:3:22"},"nodeType":"YulFunctionCall","src":"8345:20:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8335:3:22"},"nodeType":"YulFunctionCall","src":"8335:31:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8329:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8379:24:22","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"8392:11:22"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"8383:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8477:21:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8486:5:22"},{"name":"_1","nodeType":"YulIdentifier","src":"8493:2:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8479:6:22"},"nodeType":"YulFunctionCall","src":"8479:17:22"},"nodeType":"YulExpressionStatement","src":"8479:17:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8427:5:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8434:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8424:2:22"},"nodeType":"YulFunctionCall","src":"8424:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8438:26:22","statements":[{"nodeType":"YulAssignment","src":"8440:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8453:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"8460:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8449:3:22"},"nodeType":"YulFunctionCall","src":"8449:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8440:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"8420:3:22","statements":[]},"src":"8416:82:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8066:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8071:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8063:2:22"},"nodeType":"YulFunctionCall","src":"8063:11:22"},"nodeType":"YulIf","src":"8060:448:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8022:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"8029:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8034:10:22","type":""}],"src":"7969:545:22"},{"body":{"nodeType":"YulBlock","src":"8604:81:22","statements":[{"nodeType":"YulAssignment","src":"8614:65:22","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8629:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8647:1:22","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"8650:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8643:3:22"},"nodeType":"YulFunctionCall","src":"8643:11:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8660:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8656:3:22"},"nodeType":"YulFunctionCall","src":"8656:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8639:3:22"},"nodeType":"YulFunctionCall","src":"8639:24:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8635:3:22"},"nodeType":"YulFunctionCall","src":"8635:29:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8625:3:22"},"nodeType":"YulFunctionCall","src":"8625:40:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8671:1:22","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"8674:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8667:3:22"},"nodeType":"YulFunctionCall","src":"8667:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8622:2:22"},"nodeType":"YulFunctionCall","src":"8622:57:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8614:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8581:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"8587:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8595:4:22","type":""}],"src":"8519:166:22"},{"body":{"nodeType":"YulBlock","src":"8786:1256:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8796:24:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8816:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8810:5:22"},"nodeType":"YulFunctionCall","src":"8810:10:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"8800:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8863:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8865:16:22"},"nodeType":"YulFunctionCall","src":"8865:18:22"},"nodeType":"YulExpressionStatement","src":"8865:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8835:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"8843:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8832:2:22"},"nodeType":"YulFunctionCall","src":"8832:30:22"},"nodeType":"YulIf","src":"8829:56:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8938:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8976:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8970:5:22"},"nodeType":"YulFunctionCall","src":"8970:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"8944:25:22"},"nodeType":"YulFunctionCall","src":"8944:38:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"8984:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"8894:43:22"},"nodeType":"YulFunctionCall","src":"8894:97:22"},"nodeType":"YulExpressionStatement","src":"8894:97:22"},{"nodeType":"YulVariableDeclaration","src":"9000:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9017:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9004:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9027:23:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9046:4:22","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"9031:11:22","type":""}]},{"nodeType":"YulAssignment","src":"9059:24:22","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9072:11:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9059:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9129:656:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9143:35:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9162:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9174:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9170:3:22"},"nodeType":"YulFunctionCall","src":"9170:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9158:3:22"},"nodeType":"YulFunctionCall","src":"9158:20:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9147:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9191:49:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9235:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"9205:29:22"},"nodeType":"YulFunctionCall","src":"9205:35:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9195:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9253:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9262:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9257:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9340:172:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9365:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9383:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9388:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9379:3:22"},"nodeType":"YulFunctionCall","src":"9379:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9373:5:22"},"nodeType":"YulFunctionCall","src":"9373:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9358:6:22"},"nodeType":"YulFunctionCall","src":"9358:42:22"},"nodeType":"YulExpressionStatement","src":"9358:42:22"},{"nodeType":"YulAssignment","src":"9417:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9431:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9439:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9427:3:22"},"nodeType":"YulFunctionCall","src":"9427:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9417:6:22"}]},{"nodeType":"YulAssignment","src":"9458:40:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9475:9:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9486:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9471:3:22"},"nodeType":"YulFunctionCall","src":"9471:27:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9458:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9287:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9290:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9284:2:22"},"nodeType":"YulFunctionCall","src":"9284:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9299:28:22","statements":[{"nodeType":"YulAssignment","src":"9301:24:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9310:1:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9313:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9306:3:22"},"nodeType":"YulFunctionCall","src":"9306:19:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9301:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"9280:3:22","statements":[]},"src":"9276:236:22"},{"body":{"nodeType":"YulBlock","src":"9560:166:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9605:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9610:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:22"},"nodeType":"YulFunctionCall","src":"9601:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9595:5:22"},"nodeType":"YulFunctionCall","src":"9595:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9582:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9645:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"9657:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9684:1:22","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"9687:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9680:3:22"},"nodeType":"YulFunctionCall","src":"9680:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"9696:3:22","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9676:3:22"},"nodeType":"YulFunctionCall","src":"9676:24:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9706:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9702:3:22"},"nodeType":"YulFunctionCall","src":"9702:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9672:3:22"},"nodeType":"YulFunctionCall","src":"9672:37:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9668:3:22"},"nodeType":"YulFunctionCall","src":"9668:42:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9653:3:22"},"nodeType":"YulFunctionCall","src":"9653:58:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9638:6:22"},"nodeType":"YulFunctionCall","src":"9638:74:22"},"nodeType":"YulExpressionStatement","src":"9638:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9531:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"9540:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9528:2:22"},"nodeType":"YulFunctionCall","src":"9528:19:22"},"nodeType":"YulIf","src":"9525:201:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9746:4:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9760:1:22","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"9763:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9756:3:22"},"nodeType":"YulFunctionCall","src":"9756:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"9772:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9752:3:22"},"nodeType":"YulFunctionCall","src":"9752:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9739:6:22"},"nodeType":"YulFunctionCall","src":"9739:36:22"},"nodeType":"YulExpressionStatement","src":"9739:36:22"}]},"nodeType":"YulCase","src":"9122:663:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9127:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"9802:234:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9816:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9829:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"9820:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9865:67:22","statements":[{"nodeType":"YulAssignment","src":"9883:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9902:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9907:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9898:3:22"},"nodeType":"YulFunctionCall","src":"9898:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9892:5:22"},"nodeType":"YulFunctionCall","src":"9892:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9883:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"9846:6:22"},"nodeType":"YulIf","src":"9843:89:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9952:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10011:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"10018:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"9958:52:22"},"nodeType":"YulFunctionCall","src":"9958:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9945:6:22"},"nodeType":"YulFunctionCall","src":"9945:81:22"},"nodeType":"YulExpressionStatement","src":"9945:81:22"}]},"nodeType":"YulCase","src":"9794:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9102:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9110:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9099:2:22"},"nodeType":"YulFunctionCall","src":"9099:14:22"},"nodeType":"YulSwitch","src":"9092:944:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8771:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"8777:3:22","type":""}],"src":"8690:1352:22"},{"body":{"nodeType":"YulBlock","src":"10219:322:22","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10256:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"10264:9:22"}],"functionName":{"name":"abi_encode_enum_IssuerTier","nodeType":"YulIdentifier","src":"10229:26:22"},"nodeType":"YulFunctionCall","src":"10229:45:22"},"nodeType":"YulExpressionStatement","src":"10229:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10294:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10305:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10290:3:22"},"nodeType":"YulFunctionCall","src":"10290:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"10310:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10283:6:22"},"nodeType":"YulFunctionCall","src":"10283:30:22"},"nodeType":"YulExpressionStatement","src":"10283:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10333:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10329:3:22"},"nodeType":"YulFunctionCall","src":"10329:18:22"},{"name":"value2","nodeType":"YulIdentifier","src":"10349:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10322:6:22"},"nodeType":"YulFunctionCall","src":"10322:34:22"},"nodeType":"YulExpressionStatement","src":"10322:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10382:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10393:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10378:3:22"},"nodeType":"YulFunctionCall","src":"10378:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"10398:6:22"},{"name":"value2","nodeType":"YulIdentifier","src":"10406:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"10365:12:22"},"nodeType":"YulFunctionCall","src":"10365:48:22"},"nodeType":"YulExpressionStatement","src":"10365:48:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10437:9:22"},{"name":"value2","nodeType":"YulIdentifier","src":"10448:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10433:3:22"},"nodeType":"YulFunctionCall","src":"10433:22:22"},{"kind":"number","nodeType":"YulLiteral","src":"10457:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10429:3:22"},"nodeType":"YulFunctionCall","src":"10429:31:22"},{"kind":"number","nodeType":"YulLiteral","src":"10462:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10422:6:22"},"nodeType":"YulFunctionCall","src":"10422:42:22"},"nodeType":"YulExpressionStatement","src":"10422:42:22"},{"nodeType":"YulAssignment","src":"10473:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10489:9:22"},{"arguments":[{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10508:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"10516:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10504:3:22"},"nodeType":"YulFunctionCall","src":"10504:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10525:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10521:3:22"},"nodeType":"YulFunctionCall","src":"10521:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10500:3:22"},"nodeType":"YulFunctionCall","src":"10500:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10485:3:22"},"nodeType":"YulFunctionCall","src":"10485:45:22"},{"kind":"number","nodeType":"YulLiteral","src":"10532:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10481:3:22"},"nodeType":"YulFunctionCall","src":"10481:54:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10473:4:22"}]}]},"name":"abi_encode_tuple_t_enum$_IssuerTier_$7919_t_string_calldata_ptr__to_t_uint8_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10172:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10183:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10191:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10199:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10210:4:22","type":""}],"src":"10047:494:22"},{"body":{"nodeType":"YulBlock","src":"10720:241:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10748:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10730:6:22"},"nodeType":"YulFunctionCall","src":"10730:21:22"},"nodeType":"YulExpressionStatement","src":"10730:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10771:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10782:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10767:3:22"},"nodeType":"YulFunctionCall","src":"10767:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"10787:2:22","type":"","value":"51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10760:6:22"},"nodeType":"YulFunctionCall","src":"10760:30:22"},"nodeType":"YulExpressionStatement","src":"10760:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10810:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10821:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10806:3:22"},"nodeType":"YulFunctionCall","src":"10806:18:22"},{"hexValue":"49737375657252656769737472793a20536f6369616c206d656469612055524c","kind":"string","nodeType":"YulLiteral","src":"10826:34:22","type":"","value":"IssuerRegistry: Social media URL"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10799:6:22"},"nodeType":"YulFunctionCall","src":"10799:62:22"},"nodeType":"YulExpressionStatement","src":"10799:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10881:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10892:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10877:3:22"},"nodeType":"YulFunctionCall","src":"10877:18:22"},{"hexValue":"20616c72656164792072656769737465726564","kind":"string","nodeType":"YulLiteral","src":"10897:21:22","type":"","value":" already registered"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10870:6:22"},"nodeType":"YulFunctionCall","src":"10870:49:22"},"nodeType":"YulExpressionStatement","src":"10870:49:22"},{"nodeType":"YulAssignment","src":"10928:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10940:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10951:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10936:3:22"},"nodeType":"YulFunctionCall","src":"10936:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10928:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_15c2df89cc928a5defa8b99f77d32747c862880d54502d24b029d5f69b5180ea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10697:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10711:4:22","type":""}],"src":"10546:415:22"},{"body":{"nodeType":"YulBlock","src":"11140:231:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11157:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11168:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11150:6:22"},"nodeType":"YulFunctionCall","src":"11150:21:22"},"nodeType":"YulExpressionStatement","src":"11150:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11191:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11202:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11187:3:22"},"nodeType":"YulFunctionCall","src":"11187:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"11207:2:22","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11180:6:22"},"nodeType":"YulFunctionCall","src":"11180:30:22"},"nodeType":"YulExpressionStatement","src":"11180:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11230:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11241:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11226:3:22"},"nodeType":"YulFunctionCall","src":"11226:18:22"},{"hexValue":"49737375657252656769737472793a2043616c6c6572206973206e6f74206120","kind":"string","nodeType":"YulLiteral","src":"11246:34:22","type":"","value":"IssuerRegistry: Caller is not a "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11219:6:22"},"nodeType":"YulFunctionCall","src":"11219:62:22"},"nodeType":"YulExpressionStatement","src":"11219:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11301:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11312:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11297:3:22"},"nodeType":"YulFunctionCall","src":"11297:18:22"},{"hexValue":"543220697373756572","kind":"string","nodeType":"YulLiteral","src":"11317:11:22","type":"","value":"T2 issuer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11290:6:22"},"nodeType":"YulFunctionCall","src":"11290:39:22"},"nodeType":"YulExpressionStatement","src":"11290:39:22"},{"nodeType":"YulAssignment","src":"11338:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11350:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11361:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11346:3:22"},"nodeType":"YulFunctionCall","src":"11346:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11338:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_b25f10b81ebcff67eaeeddecc76e99eafb2276643d5aa3a26186ba20962164fa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11117:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11131:4:22","type":""}],"src":"10966:405:22"},{"body":{"nodeType":"YulBlock","src":"11479:1103:22","statements":[{"body":{"nodeType":"YulBlock","src":"11520:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11522:16:22"},"nodeType":"YulFunctionCall","src":"11522:18:22"},"nodeType":"YulExpressionStatement","src":"11522:18:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11495:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11500:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11492:2:22"},"nodeType":"YulFunctionCall","src":"11492:27:22"},"nodeType":"YulIf","src":"11489:53:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11595:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11633:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"11627:5:22"},"nodeType":"YulFunctionCall","src":"11627:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"11601:25:22"},"nodeType":"YulFunctionCall","src":"11601:38:22"},{"name":"len","nodeType":"YulIdentifier","src":"11641:3:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"11551:43:22"},"nodeType":"YulFunctionCall","src":"11551:94:22"},"nodeType":"YulExpressionStatement","src":"11551:94:22"},{"nodeType":"YulVariableDeclaration","src":"11654:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"11671:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"11658:9:22","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"11715:609:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11729:32:22","value":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11748:3:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11757:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11753:3:22"},"nodeType":"YulFunctionCall","src":"11753:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11744:3:22"},"nodeType":"YulFunctionCall","src":"11744:17:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"11733:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11774:49:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11818:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"11788:29:22"},"nodeType":"YulFunctionCall","src":"11788:35:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"11778:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11836:18:22","value":{"name":"srcOffset","nodeType":"YulIdentifier","src":"11845:9:22"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11840:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"11924:172:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11949:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11974:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11979:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11970:3:22"},"nodeType":"YulFunctionCall","src":"11970:19:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11957:12:22"},"nodeType":"YulFunctionCall","src":"11957:33:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11942:6:22"},"nodeType":"YulFunctionCall","src":"11942:49:22"},"nodeType":"YulExpressionStatement","src":"11942:49:22"},{"nodeType":"YulAssignment","src":"12008:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12022:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12030:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12018:3:22"},"nodeType":"YulFunctionCall","src":"12018:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12008:6:22"}]},{"nodeType":"YulAssignment","src":"12049:33:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12066:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"12077:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12062:3:22"},"nodeType":"YulFunctionCall","src":"12062:20:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12049:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11878:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"11881:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11875:2:22"},"nodeType":"YulFunctionCall","src":"11875:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11890:21:22","statements":[{"nodeType":"YulAssignment","src":"11892:17:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11901:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"11904:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11897:3:22"},"nodeType":"YulFunctionCall","src":"11897:12:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11892:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"11871:3:22","statements":[]},"src":"11867:229:22"},{"body":{"nodeType":"YulBlock","src":"12141:127:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12166:6:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12195:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12200:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12191:3:22"},"nodeType":"YulFunctionCall","src":"12191:19:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12178:12:22"},"nodeType":"YulFunctionCall","src":"12178:33:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12229:1:22","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"12232:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12225:3:22"},"nodeType":"YulFunctionCall","src":"12225:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"12238:3:22","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12221:3:22"},"nodeType":"YulFunctionCall","src":"12221:21:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12248:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12244:3:22"},"nodeType":"YulFunctionCall","src":"12244:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12217:3:22"},"nodeType":"YulFunctionCall","src":"12217:34:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12213:3:22"},"nodeType":"YulFunctionCall","src":"12213:39:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12174:3:22"},"nodeType":"YulFunctionCall","src":"12174:79:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12159:6:22"},"nodeType":"YulFunctionCall","src":"12159:95:22"},"nodeType":"YulExpressionStatement","src":"12159:95:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12115:7:22"},{"name":"len","nodeType":"YulIdentifier","src":"12124:3:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12112:2:22"},"nodeType":"YulFunctionCall","src":"12112:16:22"},"nodeType":"YulIf","src":"12109:159:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12288:4:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12302:1:22","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"12305:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12298:3:22"},"nodeType":"YulFunctionCall","src":"12298:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"12311:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12294:3:22"},"nodeType":"YulFunctionCall","src":"12294:19:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12281:6:22"},"nodeType":"YulFunctionCall","src":"12281:33:22"},"nodeType":"YulExpressionStatement","src":"12281:33:22"}]},"nodeType":"YulCase","src":"11708:616:22","value":{"kind":"number","nodeType":"YulLiteral","src":"11713:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12341:235:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12355:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12368:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12359:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"12401:74:22","statements":[{"nodeType":"YulAssignment","src":"12419:42:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12445:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12450:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12441:3:22"},"nodeType":"YulFunctionCall","src":"12441:19:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12428:12:22"},"nodeType":"YulFunctionCall","src":"12428:33:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12419:5:22"}]}]},"condition":{"name":"len","nodeType":"YulIdentifier","src":"12385:3:22"},"nodeType":"YulIf","src":"12382:93:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12495:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12554:5:22"},{"name":"len","nodeType":"YulIdentifier","src":"12561:3:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"12501:52:22"},"nodeType":"YulFunctionCall","src":"12501:64:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12488:6:22"},"nodeType":"YulFunctionCall","src":"12488:78:22"},"nodeType":"YulExpressionStatement","src":"12488:78:22"}]},"nodeType":"YulCase","src":"12333:243:22","value":"default"}],"expression":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11691:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11696:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11688:2:22"},"nodeType":"YulFunctionCall","src":"11688:11:22"},"nodeType":"YulSwitch","src":"11681:895:22"}]},"name":"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11459:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"11465:3:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"11470:3:22","type":""}],"src":"11376:1206:22"},{"body":{"nodeType":"YulBlock","src":"12726:150:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12736:27:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12756:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12750:5:22"},"nodeType":"YulFunctionCall","src":"12750:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12740:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12811:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12819:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12807:3:22"},"nodeType":"YulFunctionCall","src":"12807:17:22"},{"name":"pos","nodeType":"YulIdentifier","src":"12826:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"12831:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12772:34:22"},"nodeType":"YulFunctionCall","src":"12772:66:22"},"nodeType":"YulExpressionStatement","src":"12772:66:22"},{"nodeType":"YulAssignment","src":"12847:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12858:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"12863:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12854:3:22"},"nodeType":"YulFunctionCall","src":"12854:16:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12847:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12702:3:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12707:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12718:3:22","type":""}],"src":"12587:289:22"},{"body":{"nodeType":"YulBlock","src":"13036:159:22","statements":[{"nodeType":"YulAssignment","src":"13046:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13058:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13069:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13054:3:22"},"nodeType":"YulFunctionCall","src":"13054:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13046:4:22"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13108:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"13116:9:22"}],"functionName":{"name":"abi_encode_enum_IssuerTier","nodeType":"YulIdentifier","src":"13081:26:22"},"nodeType":"YulFunctionCall","src":"13081:45:22"},"nodeType":"YulExpressionStatement","src":"13081:45:22"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13162:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13174:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13185:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13170:3:22"},"nodeType":"YulFunctionCall","src":"13170:18:22"}],"functionName":{"name":"abi_encode_enum_IssuerTier","nodeType":"YulIdentifier","src":"13135:26:22"},"nodeType":"YulFunctionCall","src":"13135:54:22"},"nodeType":"YulExpressionStatement","src":"13135:54:22"}]},"name":"abi_encode_tuple_t_enum$_IssuerTier_$7919_t_enum$_IssuerTier_$7919__to_t_uint8_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12997:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13008:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13016:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13027:4:22","type":""}],"src":"12881:314:22"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_IssuerTier(value, pos)\n    {\n        if iszero(lt(value, 4))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_enum$_IssuerTier_$7919__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_IssuerTier(value0, headStart)\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_string_calldata(add(headStart, offset_2), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_string_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_struct$_IssuerData_$7934_memory_ptr__to_t_struct$_IssuerData_$7934_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), and(mload(value0), sub(shl(160, 1), 1)))\n        let memberValue0 := mload(add(value0, 32))\n        abi_encode_enum_IssuerTier(memberValue0, add(headStart, 64))\n        let memberValue0_1 := mload(add(value0, 64))\n        mstore(add(headStart, 96), 0xc0)\n        let tail_1 := abi_encode_string(memberValue0_1, add(headStart, 224))\n        let memberValue0_2 := mload(add(value0, 96))\n        mstore(add(headStart, 128), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_string(memberValue0_2, tail_1)\n        mstore(add(headStart, 160), mload(add(value0, 128)))\n        mstore(add(headStart, 0xc0), iszero(iszero(mload(add(value0, 160)))))\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_string_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_6ae16b7a678f64f31ff81d9de54c4761fbbe0c9d45a0070a756bf01323abdc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"IssuerRegistry: Caller is not an\")\n        mstore(add(headStart, 96), \" admin\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3d167a22411753196fb802f79a8ee1894b1ed2196cbac251acaf1a6dbfdb92e1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"IssuerRegistry: Not a registered\")\n        mstore(add(headStart, 96), \" issuer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_calldata_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_6291deb225596c25ca20a0f3313a25b9da7be5d90294e5fc9c4c0ba6f3095c56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"IssuerRegistry: Domain already r\")\n        mstore(add(headStart, 96), \"egistered\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_enum$_IssuerTier_$7919_t_string_calldata_ptr__to_t_uint8_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        abi_encode_enum_IssuerTier(value0, headStart)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), value2)\n        calldatacopy(add(headStart, 96), value1, value2)\n        mstore(add(add(headStart, value2), 96), 0)\n        tail := add(add(headStart, and(add(value2, 31), not(31))), 96)\n    }\n    function abi_encode_tuple_t_stringliteral_15c2df89cc928a5defa8b99f77d32747c862880d54502d24b029d5f69b5180ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"IssuerRegistry: Social media URL\")\n        mstore(add(headStart, 96), \" already registered\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b25f10b81ebcff67eaeeddecc76e99eafb2276643d5aa3a26186ba20962164fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"IssuerRegistry: Caller is not a \")\n        mstore(add(headStart, 96), \"T2 issuer\")\n        tail := add(headStart, 128)\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len)\n    {\n        if gt(len, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), len)\n        let srcOffset := 0\n        switch gt(len, 31)\n        case 1 {\n            let loopEnd := and(len, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, len)\n            {\n                sstore(dstPtr, and(calldataload(add(src, srcOffset)), not(shr(and(shl(3, len), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, len), 1))\n        }\n        default {\n            let value := 0\n            if len\n            {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, len))\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_enum$_IssuerTier_$7919_t_enum$_IssuerTier_$7919__to_t_uint8_t_uint8__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_enum_IssuerTier(value0, headStart)\n        abi_encode_enum_IssuerTier(value1, add(headStart, 32))\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88FD4A03 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCE21E1CB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCE21E1CB EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xDE222A9F EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xF52FA8E3 EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88FD4A03 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x96AE3709 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xAF221C59 EQ PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x62078D2D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x62078D2D EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x7A009135 EQ PUSH2 0x1B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1785F53C EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x1B76637E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x3DBF1DB3 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x4181186F EQ PUSH2 0x176 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x291 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x118 PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x160 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x118 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0x1154 JUMP JUMPDEST PUSH2 0x36F JUMP JUMPDEST PUSH2 0x118 PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x832 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x1C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST PUSH2 0x1DD PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x8EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST PUSH2 0x118 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x132B JUMP JUMPDEST PUSH2 0xACF JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x230 CALLDATASIZE PUSH1 0x4 PUSH2 0x137E JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST PUSH2 0x248 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x16D JUMP JUMPDEST PUSH2 0x1F7 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x137E JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0xD3C JUMP JUMPDEST PUSH2 0x118 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x11EE JUMP JUMPDEST PUSH2 0xD7A JUMP JUMPDEST PUSH2 0x299 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x328 JUMPI PUSH2 0x328 PUSH2 0x10C5 JUMP JUMPDEST SUB PUSH2 0x345 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x38C SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP8 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP9 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP7 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP TIMESTAMP PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP5 DUP6 ADD DUP2 SWAP1 MSTORE CALLER DUP5 MSTORE DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR DUP4 SSTORE SWAP4 DUP6 ADD MLOAD SWAP2 SWAP4 SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4B6 JUMPI PUSH2 0x4B6 PUSH2 0x10C5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x4CF SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x4E4 SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x2 SWAP1 PUSH2 0x51E SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE CALLER SWAP1 PUSH32 0x744B9FEA5666EA8B4537FD855CB825FA7FBE000660039896BB561038B15BDD8B SWAP1 PUSH2 0x582 SWAP1 PUSH1 0x3 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x5AF SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x631 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A20536F6369616C206D656469612055524C PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x8185B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP7 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP5 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP TIMESTAMP PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP5 DUP6 ADD DUP2 SWAP1 MSTORE CALLER DUP5 MSTORE DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR DUP4 SSTORE SWAP4 DUP6 ADD MLOAD SWAP2 SWAP4 SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x725 JUMPI PUSH2 0x725 PUSH2 0x10C5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x73E SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0x753 SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x794 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE CALLER SWAP1 PUSH32 0x744B9FEA5666EA8B4537FD855CB825FA7FBE000660039896BB561038B15BDD8B SWAP1 PUSH2 0x7F8 SWAP1 PUSH1 0x2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x80E PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x83A PUSH2 0x100A JUMP JUMPDEST PUSH2 0x844 PUSH1 0x0 PUSH2 0x1037 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8AB JUMPI PUSH2 0x8AB PUSH2 0x10C5 JUMP JUMPDEST SUB PUSH2 0x8C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x928 PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD SWAP4 DUP5 AND DUP4 MSTORE SWAP2 SWAP3 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x987 JUMPI PUSH2 0x987 PUSH2 0x10C5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x99B SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9C7 SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA14 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA14 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0xA2D SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA59 SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA89 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x13C0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x13 DUP2 MSTORE PUSH19 0x26B0B73AB0B6103B32B934B334B1B0BA34B7B7 PUSH1 0x69 SHL PUSH1 0x20 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP DUP3 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x60 SWAP1 SWAP6 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND DUP6 MSTORE SWAP5 DUP2 MSTORE SWAP3 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP6 AND DUP2 OR DUP3 SSTORE SWAP3 DUP6 ADD MLOAD SWAP1 SWAP4 SWAP1 SWAP3 DUP5 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND OR PUSH1 0x1 PUSH1 0xA0 SHL DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xBF0 JUMPI PUSH2 0xBF0 PUSH2 0x10C5 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xC09 SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xC1E SWAP1 DUP3 PUSH2 0x1545 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0x744B9FEA5666EA8B4537FD855CB825FA7FBE000660039896BB561038B15BDD8B SWAP1 PUSH2 0xC83 SWAP1 PUSH1 0x1 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0x1605 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA4 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCFD JUMPI PUSH2 0xCFD PUSH2 0x10C5 JUMP JUMPDEST EQ ISZERO DUP1 ISZERO PUSH2 0xCC0 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCA4 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH2 0xD44 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD6E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E9 JUMP JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0x1037 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDA7 JUMPI PUSH2 0xDA7 PUSH2 0x10C5 JUMP JUMPDEST EQ PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A2043616C6C6572206973206E6F74206120 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x2A191034B9B9BAB2B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE23 SWAP3 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E9 SWAP1 PUSH2 0x145D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV PUSH1 0xFF AND SWAP3 SWAP2 PUSH2 0xE87 SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEB3 SWAP1 PUSH2 0x14BC JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF00 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xED5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF00 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEE3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x3 PUSH1 0xA0 SHL OR DUP2 SSTORE SWAP4 SWAP5 POP POP PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 POP PUSH2 0xF3A SWAP1 POP DUP7 DUP9 DUP4 PUSH2 0x1642 JUMP JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE MLOAD PUSH1 0x2 SWAP1 PUSH2 0xF64 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x144D JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xFA8 SWAP2 SWAP1 PUSH2 0x1703 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE CALLER SWAP1 PUSH32 0x10A7378BEF7B5BF006F1EE936FB06480BE20CCDEA69DB1A4EF8AA15BE3745B77 SWAP1 PUSH2 0x582 SWAP1 DUP6 SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x109E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BE DUP3 PUSH2 0x1087 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x10F9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xCC0 DUP3 DUP5 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x111D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x114D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x116D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1191 DUP11 DUP4 DUP12 ADD PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B6 DUP11 DUP4 DUP12 ADD PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x11CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11DC DUP10 DUP3 DUP11 ADD PUSH2 0x110B JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x121C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1228 DUP9 DUP4 DUP10 ADD PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x124E DUP8 DUP3 DUP9 ADD PUSH2 0x110B JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1275 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x125D JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1296 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x125A JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD MSTORE DUP3 ADD MLOAD PUSH1 0x0 SWAP1 PUSH2 0x12D1 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x10DB JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x12EB PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x127E JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x1308 DUP3 DUP3 PUSH2 0x127E JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1349 DUP5 PUSH2 0x1087 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1365 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1371 DUP7 DUP3 DUP8 ADD PUSH2 0x110B JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B4 DUP6 DUP3 DUP7 ADD PUSH2 0x110B JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A2043616C6C6572206973206E6F7420616E PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x1030B236B4B7 PUSH1 0xD1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x27 SWAP1 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A204E6F7420612072656769737465726564 PUSH1 0x40 DUP3 ADD MSTORE PUSH7 0x1034B9B9BAB2B9 PUSH1 0xC9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x49737375657252656769737472793A20446F6D61696E20616C72656164792072 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x1959DA5CDD195C9959 PUSH1 0xBA SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14D0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1540 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x151D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x153C JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1529 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155F PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0x1573 DUP2 PUSH2 0x156D DUP5 SLOAD PUSH2 0x14BC JUMP JUMPDEST DUP5 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x15A8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1590 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x153C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x15D7 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x15B8 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x15F5 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x160F DUP2 DUP6 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP4 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 DUP2 DUP4 ADD PUSH1 0x60 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND ADD ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x165A JUMPI PUSH2 0x165A PUSH2 0x14A6 JUMP JUMPDEST PUSH2 0x166E DUP4 PUSH2 0x1668 DUP4 SLOAD PUSH2 0x14BC JUMP JUMPDEST DUP4 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP5 GT PUSH1 0x1 DUP2 EQ PUSH2 0x16A2 JUMPI PUSH1 0x0 DUP6 ISZERO PUSH2 0x168A JUMPI POP DUP4 DUP3 ADD CALLDATALOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP7 SWAP1 SHL OR DUP4 SSTORE PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP1 DUP4 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x16D3 JUMPI DUP7 DUP6 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x16B3 JUMP JUMPDEST POP DUP7 DUP3 LT ISZERO PUSH2 0x16F0 JUMPI PUSH1 0x0 NOT PUSH1 0xF8 DUP9 PUSH1 0x3 SHL AND SHR NOT DUP5 DUP8 ADD CALLDATALOAD AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP6 PUSH1 0x1 SHL ADD DUP4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1715 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x125A JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0x172D DUP3 DUP6 PUSH2 0x10DB JUMP JUMPDEST PUSH2 0x10BE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10DB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 0xC2 MSTORE8 LOG2 SWAP3 0xAF 0xD7 SAR SWAP16 PUSH19 0x53A23F478D2C2CE9259B10E3514CC71C8B3E02 0xBC 0x4D ORIGIN PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"278:8201:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1477:96;;;;;;:::i;:::-;;:::i;:::-;;8261:215;;;;;;:::i;:::-;;:::i;6668:130::-;;;;;;:::i;:::-;-1:-1:-1;;;;;6769:16:15;6739:10;6769:16;;;:8;:16;;;;;:21;-1:-1:-1;;;6769:21:15;;;;;6668:130;;;;;;;;:::i;:::-;;;;;;;;1861:951;;;;;;:::i;:::-;;:::i;3057:986::-;;;;;;:::i;:::-;;:::i;1274:92::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;7932:216:15:-;;;;;;:::i;:::-;;:::i;6951:132::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1638:85:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;4681:32:22;;;4663:51;;4651:2;4636:18;1638:85:0;4517:203:22;4245:554:15;;;;;;:::i;:::-;;:::i;7289:130::-;;;;;;:::i;:::-;;:::i;6329:175::-;;;;;;:::i;:::-;;:::i;:::-;;;5796:14:22;;5789:22;5771:41;;5759:2;5744:18;6329:175:15;5631:187:22;7663:156:15;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;5012:1115:15:-;;;;;;:::i;:::-;;:::i;1477:96::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1543:14:15::1;1560:5;1543:14:::0;;;:7:::1;:14;::::0;;;;:22;;-1:-1:-1;;1543:22:15::1;::::0;;1477:96::o;8261:215::-;1095:10;1087:19;;;;:7;:19;;;;;;;;1079:70;;;;-1:-1:-1;;;1079:70:15;;;;;;;:::i;:::-;;;;;;;;;8366:15:::1;-1:-1:-1::0;;;;;8341:16:15;::::1;;::::0;;;:8:::1;:16;::::0;;;;:21;-1:-1:-1;;;8341:21:15;::::1;;;:40;::::0;::::1;;;;;;:::i;:::-;::::0;8333:92:::1;;;;-1:-1:-1::0;;;8333:92:15::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8436:16:15::1;;::::0;;;8464:4:::1;8436:16;::::0;;;;;;;:25:::1;;:32:::0;;-1:-1:-1;;8436:32:15::1;::::0;;::::1;::::0;;8261:215::o;1861:951::-;2279:1;-1:-1:-1;;;;;2244:37:15;:15;2260:6;;2244:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;2244:23:15;:37;2236:91;;;;-1:-1:-1;;;2236:91:15;;;;;;;:::i;:::-;2402:238;;;;;;;;;2443:10;2402:238;;;;;2474:13;2402:238;;;;2508:10;;2402:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2402:238:15;;;-1:-1:-1;2402:238:15;;;;;;;;;;;;;;;;;;;;;;;;;;;2551:6;;;;;;2402:238;;2551:6;;;;2402:238;;;;;;;;-1:-1:-1;2402:238:15;;;-1:-1:-1;;2584:15:15;2402:238;;;;;;;;2624:4;2402:238;;;;;;;2388:10;2379:20;;;;;;;;:261;;;;-1:-1:-1;;;;;;2379:261:15;;-1:-1:-1;;;;;2379:261:15;;;;;;;;;;;;:20;;:261;;-1:-1:-1;2379:20:15;;-1:-1:-1;;;;;;2379:261:15;;-1:-1:-1;;;2379:261:15;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;2379:261:15;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2379:261:15;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2379:261:15;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2379:261:15;;;;;;;;;;2689:23;;2715:10;;2689:15;;:23;;2705:6;;;;2689:23;:::i;:::-;;;;;;;;;;;;;;:36;;-1:-1:-1;;;;;2689:36:15;;;;-1:-1:-1;;;;;;2689:36:15;;;;;;;;;;2766:10;;2751:53;;;;2778:13;;2793:10;;;;2751:53;:::i;:::-;;;;;;;;1861:951;;;;;;:::o;3057:986::-;3469:1;-1:-1:-1;;;;;3421:50:15;:20;3442:14;;3421:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;3421:36:15;:50;3413:114;;;;-1:-1:-1;;;3413:114:15;;10748:2:22;3413:114:15;;;10730:21:22;10787:2;10767:18;;;10760:30;10826:34;10806:18;;;10799:62;-1:-1:-1;;;10877:18:22;;;10870:49;10936:19;;3413:114:15;10546:415:22;3413:114:15;3602:246;;;;;;;;;3643:10;3602:246;;;;;3674:13;3602:246;;;;3708:10;;3602:246;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3602:246:15;;;-1:-1:-1;3602:246:15;;;;;;;;;;;;;;;;;;;;;;;;;;;3751:14;;;;;;3602:246;;3751:14;;;;3602:246;;;;;;;;-1:-1:-1;3602:246:15;;;-1:-1:-1;;3792:15:15;3602:246;;;;;;;;3832:4;3602:246;;;;;;;3588:10;3579:20;;;;;;;;:269;;;;-1:-1:-1;;;;;;3579:269:15;;-1:-1:-1;;;;;3579:269:15;;;;;;;;;;;;:20;;:269;;-1:-1:-1;3579:20:15;;-1:-1:-1;;;;;;3579:269:15;;-1:-1:-1;;;3579:269:15;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;3579:269:15;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3579:269:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3946:10;3907:20;3928:14;;3907:36;;;;;;;:::i;:::-;;;;;;;;;;;;;;:49;;-1:-1:-1;;;;;3907:49:15;;;;-1:-1:-1;;;;;;3907:49:15;;;;;;;;;;3997:10;;3982:53;;;;4009:13;;4024:10;;;;3982:53;:::i;:::-;;;;;;;;3057:986;;;;:::o;1274:92::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1337:14:15::1;;::::0;;;:7:::1;:14;::::0;;;;:21;;-1:-1:-1;;1337:21:15::1;1354:4;1337:21;::::0;;1274:92::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;7932:216:15:-;1095:10;1087:19;;;;:7;:19;;;;;;;;1079:70;;;;-1:-1:-1;;;1079:70:15;;;;;;;:::i;:::-;8037:15:::1;-1:-1:-1::0;;;;;8012:16:15;::::1;;::::0;;;:8:::1;:16;::::0;;;;:21;-1:-1:-1;;;8012:21:15;::::1;;;:40;::::0;::::1;;;;;;:::i;:::-;::::0;8004:92:::1;;;;-1:-1:-1::0;;;8004:92:15::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8107:16:15::1;8135:5;8107:16:::0;;;:8:::1;:16;::::0;;;;:25:::1;;:33:::0;;-1:-1:-1;;8107:33:15::1;::::0;;7932:216::o;6951:132::-;7022:17;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7022:17:15;-1:-1:-1;;;;;7059:16:15;;;;;;;:8;:16;;;;;;;;;7052:23;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7052:23:15;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7052:23:15;;;-1:-1:-1;;7052:23:15;;;;;;;;;;;;;;;;;;;;;;;6951:132;-1:-1:-1;;6951:132:15:o;4245:554::-;1095:10;1087:19;;;;:7;:19;;;;;;;;1079:70;;;;-1:-1:-1;;;1079:70:15;;;;;;;:::i;:::-;4445:260:::1;::::0;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;4445:260:15;::::1;::::0;;::::1;::::0;::::1;4520:17;4445:260;;;;4558:10;;4445:260;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;4445:260:15;;;-1:-1:-1;;4445:260:15::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;4445:260:15::1;::::0;;::::1;::::0;;;;;;::::1;::::0;;;;4649:15:::1;4445:260:::0;;;;4689:4:::1;4445:260:::0;;;;;;;-1:-1:-1;;;;;4419:23:15;;::::1;::::0;;;;;;;:286;;;;;::::1;-1:-1:-1::0;;;;;;4419:286:15;::::1;::::0;::::1;::::0;;;;::::1;::::0;:23;;:286;;:23;;-1:-1:-1;;;;;;;4419:286:15;;;;-1:-1:-1;;;4419:286:15;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;4419:286:15::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;4419:286:15::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;4419:286:15::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;4419:286:15::1;::::0;::::1;;::::0;;;::::1;::::0;;4731:60:::1;::::0;-1:-1:-1;;;;;4731:60:15;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;;4780:10:15;;;;4731:60:::1;:::i;:::-;;;;;;;;4245:554:::0;;;:::o;7289:130::-;7361:7;7388:15;7404:6;;7388:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;7388:23:15;;-1:-1:-1;7289:130:15;;;;;:::o;6329:175::-;6403:4;;-1:-1:-1;;;;;6427:16:15;;;;;;:8;:16;;;;;:21;-1:-1:-1;;;6427:21:15;;;;:40;;;;;;;;:::i;:::-;;;:69;;;;-1:-1:-1;;;;;;;6471:16:15;;;;;:8;:16;;;;;:25;;;;;;6329:175::o;7663:156::-;7748:7;7775:20;7796:14;;7775:36;;;;;;;:::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4663:51:22::0;4636:18;;2672:31:0::1;4517:203:22::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;5012:1115:15:-;5223:13;5203:10;5194:20;;;;:8;:20;;;;;:25;-1:-1:-1;;;5194:25:15;;;;:42;;;;;;;;:::i;:::-;;5186:96;;;;-1:-1:-1;;;5186:96:15;;11168:2:22;5186:96:15;;;11150:21:22;11207:2;11187:18;;;11180:30;11246:34;11226:18;;;11219:62;-1:-1:-1;;;11297:18:22;;;11290:39;11346:19;;5186:96:15;10966:405:22;5186:96:15;5397:1;-1:-1:-1;;;;;5362:37:15;:15;5378:6;;5362:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;5362:23:15;:37;5354:91;;;;-1:-1:-1;;;5354:91:15;;;;;;;:::i;:::-;5533:10;5503:18;5524:20;;;:8;:20;;;;;:25;;5596:37;;;;5560:73;;-1:-1:-1;;;5524:25:15;;;;;;5503:18;5560:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5694:10:15;5685:20;;;;:8;:20;;;;;:41;;-1:-1:-1;;;;5685:41:15;-1:-1:-1;;;5685:41:15;;;5560:73;;-1:-1:-1;;5737:37:15;;;;;-1:-1:-1;5737:46:15;;-1:-1:-1;5777:6:15;;5737:37;:46;:::i;:::-;-1:-1:-1;5803:10:15;5794:20;;;;:8;:20;;;;;;;5828:15;5794:31;;;;:49;5892:23;:15;;:23;;5908:6;;;;5892:23;:::i;:::-;;;;;;;;;;;;;;:36;;;;;-1:-1:-1;;;;;5892:36:15;;;;;-1:-1:-1;;;;;5892:36:15;;;;;;6041:1;5989:20;6010:19;5989:41;;;;;;:::i;:::-;;;;;;;;;;;;;;:54;;-1:-1:-1;;;;;5989:54:15;;;;-1:-1:-1;;;;;;5989:54:15;;;;;;;;;;6084:10;;6069:50;;;;6096:7;;6105:13;;6069:50;:::i;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:7;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:7;1901:40:0;;;4663:51:22;4636:18;;1901:40:0;4517:203:22;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:173:22:-;82:20;;-1:-1:-1;;;;;131:31:22;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:22:o;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:238;597:1;590:5;587:12;577:143;;642:10;637:3;633:20;630:1;623:31;677:4;674:1;667:15;705:4;702:1;695:15;577:143;729:18;;515:238::o;758:210::-;905:2;890:18;;917:45;894:9;944:6;917:45;:::i;973:348::-;1025:8;1035:6;1089:3;1082:4;1074:6;1070:17;1066:27;1056:55;;1107:1;1104;1097:12;1056:55;-1:-1:-1;1130:20:22;;1173:18;1162:30;;1159:50;;;1205:1;1202;1195:12;1159:50;1242:4;1234:6;1230:17;1218:29;;1294:3;1287:4;1278:6;1270;1266:19;1262:30;1259:39;1256:59;;;1311:1;1308;1301:12;1256:59;973:348;;;;;:::o;1326:1010::-;1439:6;1447;1455;1463;1471;1479;1532:2;1520:9;1511:7;1507:23;1503:32;1500:52;;;1548:1;1545;1538:12;1500:52;1588:9;1575:23;1617:18;1658:2;1650:6;1647:14;1644:34;;;1674:1;1671;1664:12;1644:34;1713:59;1764:7;1755:6;1744:9;1740:22;1713:59;:::i;:::-;1791:8;;-1:-1:-1;1687:85:22;-1:-1:-1;1879:2:22;1864:18;;1851:32;;-1:-1:-1;1895:16:22;;;1892:36;;;1924:1;1921;1914:12;1892:36;1963:61;2016:7;2005:8;1994:9;1990:24;1963:61;:::i;:::-;2043:8;;-1:-1:-1;1937:87:22;-1:-1:-1;2131:2:22;2116:18;;2103:32;;-1:-1:-1;2147:16:22;;;2144:36;;;2176:1;2173;2166:12;2144:36;;2215:61;2268:7;2257:8;2246:9;2242:24;2215:61;:::i;:::-;1326:1010;;;;-1:-1:-1;1326:1010:22;;-1:-1:-1;1326:1010:22;;2295:8;;1326:1010;-1:-1:-1;;;1326:1010:22:o;2341:721::-;2433:6;2441;2449;2457;2510:2;2498:9;2489:7;2485:23;2481:32;2478:52;;;2526:1;2523;2516:12;2478:52;2566:9;2553:23;2595:18;2636:2;2628:6;2625:14;2622:34;;;2652:1;2649;2642:12;2622:34;2691:59;2742:7;2733:6;2722:9;2718:22;2691:59;:::i;:::-;2769:8;;-1:-1:-1;2665:85:22;-1:-1:-1;2857:2:22;2842:18;;2829:32;;-1:-1:-1;2873:16:22;;;2870:36;;;2902:1;2899;2892:12;2870:36;;2941:61;2994:7;2983:8;2972:9;2968:24;2941:61;:::i;:::-;2341:721;;;;-1:-1:-1;3021:8:22;-1:-1:-1;;;;2341:721:22:o;3067:250::-;3152:1;3162:113;3176:6;3173:1;3170:13;3162:113;;;3252:11;;;3246:18;3233:11;;;3226:39;3198:2;3191:10;3162:113;;;-1:-1:-1;;3309:1:22;3291:16;;3284:27;3067:250::o;3322:271::-;3364:3;3402:5;3396:12;3429:6;3424:3;3417:19;3445:76;3514:6;3507:4;3502:3;3498:14;3491:4;3484:5;3480:16;3445:76;:::i;:::-;3575:2;3554:15;-1:-1:-1;;3550:29:22;3541:39;;;;3582:4;3537:50;;3322:271;-1:-1:-1;;3322:271:22:o;3598:914::-;3783:2;3765:21;;;3826:13;;-1:-1:-1;;;;;3822:39:22;3802:18;;;3795:67;3897:15;;3891:22;-1:-1:-1;;3922:60:22;3978:2;3963:18;;3891:22;3922:60;:::i;:::-;;4031:2;4023:6;4019:15;4013:22;4071:4;4066:2;4055:9;4051:18;4044:32;4099:54;4148:3;4137:9;4133:19;4117:14;4099:54;:::i;:::-;4085:68;;4202:2;4194:6;4190:15;4184:22;4275:2;4271:7;4259:9;4251:6;4247:22;4243:36;4237:3;4226:9;4222:19;4215:65;4303:41;4337:6;4321:14;4303:41;:::i;:::-;4289:55;;;4399:3;4391:6;4387:16;4381:23;4375:3;4364:9;4360:19;4353:52;4475:3;4467:6;4463:16;4457:23;4450:31;4443:39;4436:4;4425:9;4421:20;4414:69;4500:6;4492:14;;;3598:914;;;;:::o;4725:485::-;4805:6;4813;4821;4874:2;4862:9;4853:7;4849:23;4845:32;4842:52;;;4890:1;4887;4880:12;4842:52;4913:29;4932:9;4913:29;:::i;:::-;4903:39;;4993:2;4982:9;4978:18;4965:32;5020:18;5012:6;5009:30;5006:50;;;5052:1;5049;5042:12;5006:50;5091:59;5142:7;5133:6;5122:9;5118:22;5091:59;:::i;:::-;4725:485;;5169:8;;-1:-1:-1;5065:85:22;;-1:-1:-1;;;;4725:485:22:o;5215:411::-;5286:6;5294;5347:2;5335:9;5326:7;5322:23;5318:32;5315:52;;;5363:1;5360;5353:12;5315:52;5403:9;5390:23;5436:18;5428:6;5425:30;5422:50;;;5468:1;5465;5458:12;5422:50;5507:59;5558:7;5549:6;5538:9;5534:22;5507:59;:::i;:::-;5585:8;;5481:85;;-1:-1:-1;5215:411:22;-1:-1:-1;;;;5215:411:22:o;5823:402::-;6025:2;6007:21;;;6064:2;6044:18;;;6037:30;6103:34;6098:2;6083:18;;6076:62;-1:-1:-1;;;6169:2:22;6154:18;;6147:36;6215:3;6200:19;;5823:402::o;6230:403::-;6432:2;6414:21;;;6471:2;6451:18;;;6444:30;6510:34;6505:2;6490:18;;6483:62;-1:-1:-1;;;6576:2:22;6561:18;;6554:37;6623:3;6608:19;;6230:403::o;6638:273::-;6823:6;6815;6810:3;6797:33;6779:3;6849:16;;6874:13;;;6849:16;6638:273;-1:-1:-1;6638:273:22:o;6916:405::-;7118:2;7100:21;;;7157:2;7137:18;;;7130:30;7196:34;7191:2;7176:18;;7169:62;-1:-1:-1;;;7262:2:22;7247:18;;7240:39;7311:3;7296:19;;6916:405::o;7326:127::-;7387:10;7382:3;7378:20;7375:1;7368:31;7418:4;7415:1;7408:15;7442:4;7439:1;7432:15;7458:380;7537:1;7533:12;;;;7580;;;7601:61;;7655:4;7647:6;7643:17;7633:27;;7601:61;7708:2;7700:6;7697:14;7677:18;7674:38;7671:161;;7754:10;7749:3;7745:20;7742:1;7735:31;7789:4;7786:1;7779:15;7817:4;7814:1;7807:15;7671:161;;7458:380;;;:::o;7969:545::-;8071:2;8066:3;8063:11;8060:448;;;8107:1;8132:5;8128:2;8121:17;8177:4;8173:2;8163:19;8247:2;8235:10;8231:19;8228:1;8224:27;8218:4;8214:38;8283:4;8271:10;8268:20;8265:47;;;-1:-1:-1;8306:4:22;8265:47;8361:2;8356:3;8352:12;8349:1;8345:20;8339:4;8335:31;8325:41;;8416:82;8434:2;8427:5;8424:13;8416:82;;;8479:17;;;8460:1;8449:13;8416:82;;;8420:3;;;8060:448;7969:545;;;:::o;8690:1352::-;8816:3;8810:10;8843:18;8835:6;8832:30;8829:56;;;8865:18;;:::i;:::-;8894:97;8984:6;8944:38;8976:4;8970:11;8944:38;:::i;:::-;8938:4;8894:97;:::i;:::-;9046:4;;9110:2;9099:14;;9127:1;9122:663;;;;9829:1;9846:6;9843:89;;;-1:-1:-1;9898:19:22;;;9892:26;9843:89;-1:-1:-1;;8647:1:22;8643:11;;;8639:24;8635:29;8625:40;8671:1;8667:11;;;8622:57;9945:81;;9092:944;;9122:663;7916:1;7909:14;;;7953:4;7940:18;;-1:-1:-1;;9158:20:22;;;9276:236;9290:7;9287:1;9284:14;9276:236;;;9379:19;;;9373:26;9358:42;;9471:27;;;;9439:1;9427:14;;;;9306:19;;9276:236;;;9280:3;9540:6;9531:7;9528:19;9525:201;;;9601:19;;;9595:26;-1:-1:-1;;9684:1:22;9680:14;;;9696:3;9676:24;9672:37;9668:42;9653:58;9638:74;;9525:201;-1:-1:-1;;;;;9772:1:22;9756:14;;;9752:22;9739:36;;-1:-1:-1;8690:1352:22:o;10047:494::-;10229:45;10264:9;10256:6;10229:45;:::i;:::-;10310:2;10305;10294:9;10290:18;10283:30;10349:6;10344:2;10333:9;10329:18;10322:34;10406:6;10398;10393:2;10382:9;10378:18;10365:48;10462:1;10433:22;;;10457:2;10429:31;;;10422:42;;;;10525:2;10504:15;;;-1:-1:-1;;10500:29:22;10485:45;10481:54;;10047:494;-1:-1:-1;;10047:494:22:o;11376:1206::-;11500:18;11495:3;11492:27;11489:53;;;11522:18;;:::i;:::-;11551:94;11641:3;11601:38;11633:4;11627:11;11601:38;:::i;:::-;11595:4;11551:94;:::i;:::-;11671:1;11696:2;11691:3;11688:11;11713:1;11708:616;;;;12368:1;12385:3;12382:93;;;-1:-1:-1;12441:19:22;;;12428:33;12382:93;-1:-1:-1;;8647:1:22;8643:11;;;8639:24;8635:29;8625:40;8671:1;8667:11;;;8622:57;12488:78;;11681:895;;11708:616;7916:1;7909:14;;;7953:4;7940:18;;-1:-1:-1;;11744:17:22;;;11845:9;11867:229;11881:7;11878:1;11875:14;11867:229;;;11970:19;;;11957:33;11942:49;;12077:4;12062:20;;;;12030:1;12018:14;;;;11897:12;11867:229;;;11871:3;12124;12115:7;12112:16;12109:159;;;12248:1;12244:6;12238:3;12232;12229:1;12225:11;12221:21;12217:34;12213:39;12200:9;12195:3;12191:19;12178:33;12174:79;12166:6;12159:95;12109:159;;;12311:1;12305:3;12302:1;12298:11;12294:19;12288:4;12281:33;11681:895;;;11376:1206;;;:::o;12587:289::-;12718:3;12756:6;12750:13;12772:66;12831:6;12826:3;12819:4;12811:6;12807:17;12772:66;:::i;:::-;12854:16;;;;;12587:289;-1:-1:-1;;12587:289:22:o;12881:314::-;13069:2;13054:18;;13081:45;13058:9;13108:6;13081:45;:::i;:::-;13135:54;13185:2;13174:9;13170:18;13162:6;13135:54;:::i"},"methodIdentifiers":{"addAdmin(address)":"70480275","deactivateIssuer(address)":"7a009135","getDomainIssuer(string)":"af221c59","getIssuerData(address)":"88fd4a03","getIssuerTier(address)":"3dbf1db3","getSocialMediaIssuer(string)":"de222a9f","isVerifiedIssuer(address)":"ce21e1cb","manualVerifyIssuer(address,string)":"96ae3709","owner()":"8da5cb5b","reactivateIssuer(address)":"1b76637e","removeAdmin(address)":"1785f53c","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToT1(string,string)":"f52fa8e3","verifyIssuerT1(string,string,string)":"4181186f","verifyIssuerT2(string,string)":"62078d2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"fromTier\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"toTier\",\"type\":\"uint8\"}],\"name\":\"IssuerUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"IssuerVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"deactivateIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"}],\"name\":\"getDomainIssuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"getIssuerData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuerAddress\",\"type\":\"address\"},{\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationData\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"verifiedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct IIssuerRegistry.IssuerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"getIssuerTier\",\"outputs\":[{\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"socialMediaUrl\",\"type\":\"string\"}],\"name\":\"getSocialMediaIssuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"isVerifiedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"issuerName\",\"type\":\"string\"}],\"name\":\"manualVerifyIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"reactivateIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationData\",\"type\":\"string\"}],\"name\":\"upgradeToT1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"issuerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationData\",\"type\":\"string\"}],\"name\":\"verifyIssuerT1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"issuerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"socialMediaUrl\",\"type\":\"string\"}],\"name\":\"verifyIssuerT2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the issuer registry for verifying certificate issuers\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"IssuerUpgraded(address,uint8,uint8)\":{\"details\":\"Event emitted when an issuer is upgraded\"},\"IssuerVerified(address,uint8,string)\":{\"details\":\"Event emitted when an issuer is verified\"}},\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Add an admin\",\"params\":{\"admin\":\"The address to add as admin\"}},\"constructor\":{\"details\":\"Constructor for IssuerRegistry\"},\"deactivateIssuer(address)\":{\"details\":\"Deactivates an issuer\",\"params\":{\"issuer\":\"The address to deactivate\"}},\"getDomainIssuer(string)\":{\"details\":\"Checks if a domain is registered\",\"params\":{\"domain\":\"The domain to check\"},\"returns\":{\"_0\":\"The address associated with the domain, or address(0) if not registered\"}},\"getIssuerData(address)\":{\"details\":\"Gets the data for an issuer\",\"params\":{\"issuer\":\"The address to get data for\"},\"returns\":{\"_0\":\"The issuer data\"}},\"getIssuerTier(address)\":{\"details\":\"Gets the tier level of an issuer\",\"params\":{\"issuer\":\"The address to check\"},\"returns\":{\"_0\":\"The tier level of the issuer\"}},\"getSocialMediaIssuer(string)\":{\"details\":\"Checks if a social media URL is registered\",\"params\":{\"socialMediaUrl\":\"The social media URL to check\"},\"returns\":{\"_0\":\"The address associated with the social media URL, or address(0) if not registered\"}},\"isVerifiedIssuer(address)\":{\"details\":\"Checks if an address is a verified issuer\",\"params\":{\"issuer\":\"The address to check\"},\"returns\":{\"_0\":\"True if the address is a verified issuer, false otherwise\"}},\"manualVerifyIssuer(address,string)\":{\"details\":\"Manually verifies an issuer (only admin)\",\"params\":{\"issuerAddress\":\"The address to be verified\",\"issuerName\":\"The name of the issuer organization\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reactivateIssuer(address)\":{\"details\":\"Reactivates an issuer\",\"params\":{\"issuer\":\"The address to reactivate\"}},\"removeAdmin(address)\":{\"details\":\"Remove an admin\",\"params\":{\"admin\":\"The address to remove as admin\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToT1(string,string)\":{\"details\":\"Upgrades an issuer from T2 to T1\",\"params\":{\"domain\":\"The domain name used for verification\",\"verificationData\":\"Additional data used in verification process\"}},\"verifyIssuerT1(string,string,string)\":{\"details\":\"Verifies an issuer with T1 verification (DNS)\",\"params\":{\"domain\":\"The domain name used for verification\",\"issuerName\":\"The name of the issuer organization\",\"verificationData\":\"Additional data used in verification process\"}},\"verifyIssuerT2(string,string)\":{\"details\":\"Verifies an issuer with T2 verification (social media)\",\"params\":{\"issuerName\":\"The name of the issuer organization\",\"socialMediaUrl\":\"The URL of the social media post used for verification\"}}},\"title\":\"IssuerRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IssuerRegistry.sol\":\"IssuerRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/IssuerRegistry.sol\":{\"keccak256\":\"0x6752eed8128c6cee7d7be56e295e54cc4db06bfc8aaedca16040ea7104f1748e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5e53f48d02c51be7ab28d9e39d0da023885eee6bf0542df137580d216be0ca1\",\"dweb:/ipfs/QmQHb3moe8EVTVwLWCNXgK8RrJXca43TKeHuYk5iRmvQsx\"]},\"contracts/interfaces/IIssuerRegistry.sol\":{\"keccak256\":\"0x3d4eaf5e4545526a1ba065452ba5d8a986342828803436e1c9d9020befbce6bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee0cb27c5966fd7125528d6e070d0cdfeca0b597c0c1fb08b65e2f284cb59382\",\"dweb:/ipfs/QmbF5okc21wwwpgRMHLR5zEj3HuegPVZs82NFK8fvyiUR5\"]}},\"version\":1}"}},"contracts/SoulboundNFT.sol":{"SoulboundNFT":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"bytes32","name":"merkleRoot","type":"bytes32"},{"internalType":"address","name":"issuerRegistry","type":"address"},{"internalType":"string","name":"baseTokenURI","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"SoulboundToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"}],"name":"CertificateMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getCertificateData","outputs":[{"internalType":"address","name":"issuer","type":"address"},{"internalType":"uint8","name":"issuerLevel","type":"uint8"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"issuedTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getIssuedAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMerkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"isEligible","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"issuerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"mintCertificate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newBaseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"newMerkleRoot","type":"bytes32"}],"name":"setMerkleRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_354":{"entryPoint":null,"id":354,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7075":{"entryPoint":null,"id":7075,"parameterSlots":5,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":204,"id":146,"parameterSlots":1,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":308,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_bytes32t_addresst_string_memory_ptr_fromMemory":{"entryPoint":483,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":732,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":815,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":672,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":286,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4786:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:22"},"nodeType":"YulFunctionCall","src":"66:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:22"},"nodeType":"YulFunctionCall","src":"56:31:22"},"nodeType":"YulExpressionStatement","src":"56:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:22"},"nodeType":"YulFunctionCall","src":"96:15:22"},"nodeType":"YulExpressionStatement","src":"96:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:22"},"nodeType":"YulFunctionCall","src":"120:15:22"},"nodeType":"YulExpressionStatement","src":"120:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:22"},{"body":{"nodeType":"YulBlock","src":"210:776:22","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:22"},"nodeType":"YulFunctionCall","src":"261:12:22"},"nodeType":"YulExpressionStatement","src":"261:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:22"},"nodeType":"YulFunctionCall","src":"234:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:22"},"nodeType":"YulFunctionCall","src":"230:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:22"},"nodeType":"YulFunctionCall","src":"223:35:22"},"nodeType":"YulIf","src":"220:55:22"},{"nodeType":"YulVariableDeclaration","src":"284:23:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:22"},"nodeType":"YulFunctionCall","src":"294:13:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:22","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:22"},"nodeType":"YulFunctionCall","src":"330:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:22"},"nodeType":"YulFunctionCall","src":"326:18:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:22"},"nodeType":"YulFunctionCall","src":"369:18:22"},"nodeType":"YulExpressionStatement","src":"369:18:22"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:22"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:22"},"nodeType":"YulFunctionCall","src":"356:10:22"},"nodeType":"YulIf","src":"353:36:22"},{"nodeType":"YulVariableDeclaration","src":"398:17:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:22"},"nodeType":"YulFunctionCall","src":"408:7:22"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:22"},"nodeType":"YulFunctionCall","src":"438:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:22"},"nodeType":"YulFunctionCall","src":"498:13:22"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:22"},"nodeType":"YulFunctionCall","src":"494:22:22"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:22","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:22"},"nodeType":"YulFunctionCall","src":"490:31:22"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:22"},"nodeType":"YulFunctionCall","src":"486:40:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:22"},"nodeType":"YulFunctionCall","src":"474:53:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:22"},"nodeType":"YulFunctionCall","src":"588:18:22"},"nodeType":"YulExpressionStatement","src":"588:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:22"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:22"},"nodeType":"YulFunctionCall","src":"542:18:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:22"},"nodeType":"YulFunctionCall","src":"562:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:22"},"nodeType":"YulFunctionCall","src":"539:46:22"},"nodeType":"YulIf","src":"536:72:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:22"},"nodeType":"YulFunctionCall","src":"617:22:22"},"nodeType":"YulExpressionStatement","src":"617:22:22"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:22"},"nodeType":"YulFunctionCall","src":"648:18:22"},"nodeType":"YulExpressionStatement","src":"648:18:22"},{"nodeType":"YulVariableDeclaration","src":"675:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:22","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:22"},"nodeType":"YulFunctionCall","src":"737:12:22"},"nodeType":"YulExpressionStatement","src":"737:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:22"},"nodeType":"YulFunctionCall","src":"708:15:22"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:22"},"nodeType":"YulFunctionCall","src":"704:24:22"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:22"},"nodeType":"YulFunctionCall","src":"701:33:22"},"nodeType":"YulIf","src":"698:53:22"},{"nodeType":"YulVariableDeclaration","src":"760:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:22","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:22"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:22"},"nodeType":"YulFunctionCall","src":"850:14:22"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:22"},"nodeType":"YulFunctionCall","src":"846:23:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:22"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:22"},"nodeType":"YulFunctionCall","src":"881:14:22"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:22"},"nodeType":"YulFunctionCall","src":"877:23:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:22"},"nodeType":"YulFunctionCall","src":"871:30:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:22"},"nodeType":"YulFunctionCall","src":"839:63:22"},"nodeType":"YulExpressionStatement","src":"839:63:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:22"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:22"},"nodeType":"YulFunctionCall","src":"787:9:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:22","statements":[{"nodeType":"YulAssignment","src":"799:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:22"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:22"},"nodeType":"YulFunctionCall","src":"804:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:22","statements":[]},"src":"779:133:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"936:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"944:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"932:3:22"},"nodeType":"YulFunctionCall","src":"932:15:22"},{"name":"_4","nodeType":"YulIdentifier","src":"949:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"928:3:22"},"nodeType":"YulFunctionCall","src":"928:24:22"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"921:6:22"},"nodeType":"YulFunctionCall","src":"921:35:22"},"nodeType":"YulExpressionStatement","src":"921:35:22"},{"nodeType":"YulAssignment","src":"965:15:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"974:6:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"965:5:22"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:22","type":""}],"src":"146:840:22"},{"body":{"nodeType":"YulBlock","src":"1170:817:22","statements":[{"body":{"nodeType":"YulBlock","src":"1217:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1226:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1229:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1219:6:22"},"nodeType":"YulFunctionCall","src":"1219:12:22"},"nodeType":"YulExpressionStatement","src":"1219:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1191:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1187:3:22"},"nodeType":"YulFunctionCall","src":"1187:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1212:3:22","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1183:3:22"},"nodeType":"YulFunctionCall","src":"1183:33:22"},"nodeType":"YulIf","src":"1180:53:22"},{"nodeType":"YulVariableDeclaration","src":"1242:30:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1262:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1256:5:22"},"nodeType":"YulFunctionCall","src":"1256:16:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1246:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1281:28:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1299:2:22","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1303:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1295:3:22"},"nodeType":"YulFunctionCall","src":"1295:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"1307:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1291:3:22"},"nodeType":"YulFunctionCall","src":"1291:18:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1285:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1336:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1345:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1348:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1338:6:22"},"nodeType":"YulFunctionCall","src":"1338:12:22"},"nodeType":"YulExpressionStatement","src":"1338:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1324:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1332:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1321:2:22"},"nodeType":"YulFunctionCall","src":"1321:14:22"},"nodeType":"YulIf","src":"1318:34:22"},{"nodeType":"YulAssignment","src":"1361:71:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1404:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"1415:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1400:3:22"},"nodeType":"YulFunctionCall","src":"1400:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1424:7:22"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1371:28:22"},"nodeType":"YulFunctionCall","src":"1371:61:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1361:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1441:41:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1467:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1478:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1463:3:22"},"nodeType":"YulFunctionCall","src":"1463:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:22"},"nodeType":"YulFunctionCall","src":"1457:25:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1445:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1511:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1520:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1523:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1513:6:22"},"nodeType":"YulFunctionCall","src":"1513:12:22"},"nodeType":"YulExpressionStatement","src":"1513:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1497:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1507:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1494:2:22"},"nodeType":"YulFunctionCall","src":"1494:16:22"},"nodeType":"YulIf","src":"1491:36:22"},{"nodeType":"YulAssignment","src":"1536:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1579:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1590:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1575:3:22"},"nodeType":"YulFunctionCall","src":"1575:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1601:7:22"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1546:28:22"},"nodeType":"YulFunctionCall","src":"1546:63:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1536:6:22"}]},{"nodeType":"YulAssignment","src":"1618:35:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1638:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1649:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1634:3:22"},"nodeType":"YulFunctionCall","src":"1634:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1628:5:22"},"nodeType":"YulFunctionCall","src":"1628:25:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1618:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1662:38:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1685:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1696:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1681:3:22"},"nodeType":"YulFunctionCall","src":"1681:18:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1675:5:22"},"nodeType":"YulFunctionCall","src":"1675:25:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1666:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1763:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1772:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1775:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1765:6:22"},"nodeType":"YulFunctionCall","src":"1765:12:22"},"nodeType":"YulExpressionStatement","src":"1765:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1722:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1733:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1748:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1753:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1744:3:22"},"nodeType":"YulFunctionCall","src":"1744:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"1757:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1740:3:22"},"nodeType":"YulFunctionCall","src":"1740:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1729:3:22"},"nodeType":"YulFunctionCall","src":"1729:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1719:2:22"},"nodeType":"YulFunctionCall","src":"1719:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1712:6:22"},"nodeType":"YulFunctionCall","src":"1712:50:22"},"nodeType":"YulIf","src":"1709:70:22"},{"nodeType":"YulAssignment","src":"1788:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"1798:5:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1788:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"1812:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1838:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1849:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1834:3:22"},"nodeType":"YulFunctionCall","src":"1834:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1828:5:22"},"nodeType":"YulFunctionCall","src":"1828:26:22"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"1816:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1883:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1892:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1895:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1885:6:22"},"nodeType":"YulFunctionCall","src":"1885:12:22"},"nodeType":"YulExpressionStatement","src":"1885:12:22"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"1869:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1879:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1866:2:22"},"nodeType":"YulFunctionCall","src":"1866:16:22"},"nodeType":"YulIf","src":"1863:36:22"},{"nodeType":"YulAssignment","src":"1908:73:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1951:9:22"},{"name":"offset_2","nodeType":"YulIdentifier","src":"1962:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:22"},"nodeType":"YulFunctionCall","src":"1947:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1973:7:22"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1918:28:22"},"nodeType":"YulFunctionCall","src":"1918:63:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"1908:6:22"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_bytes32t_addresst_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1104:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1115:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1127:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1135:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1143:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1151:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1159:6:22","type":""}],"src":"991:996:22"},{"body":{"nodeType":"YulBlock","src":"2047:325:22","statements":[{"nodeType":"YulAssignment","src":"2057:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2071:1:22","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2074:4:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2067:3:22"},"nodeType":"YulFunctionCall","src":"2067:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2057:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"2088:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2118:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"2124:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2114:3:22"},"nodeType":"YulFunctionCall","src":"2114:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2092:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2165:31:22","statements":[{"nodeType":"YulAssignment","src":"2167:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2181:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2189:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2177:3:22"},"nodeType":"YulFunctionCall","src":"2177:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2167:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2145:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2138:6:22"},"nodeType":"YulFunctionCall","src":"2138:26:22"},"nodeType":"YulIf","src":"2135:61:22"},{"body":{"nodeType":"YulBlock","src":"2255:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2276:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2283:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2288:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2279:3:22"},"nodeType":"YulFunctionCall","src":"2279:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2269:6:22"},"nodeType":"YulFunctionCall","src":"2269:31:22"},"nodeType":"YulExpressionStatement","src":"2269:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2320:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2323:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2313:6:22"},"nodeType":"YulFunctionCall","src":"2313:15:22"},"nodeType":"YulExpressionStatement","src":"2313:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2348:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2351:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2341:6:22"},"nodeType":"YulFunctionCall","src":"2341:15:22"},"nodeType":"YulExpressionStatement","src":"2341:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2211:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2234:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2242:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2231:2:22"},"nodeType":"YulFunctionCall","src":"2231:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2208:2:22"},"nodeType":"YulFunctionCall","src":"2208:38:22"},"nodeType":"YulIf","src":"2205:161:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2027:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2036:6:22","type":""}],"src":"1992:380:22"},{"body":{"nodeType":"YulBlock","src":"2433:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2450:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2453:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2443:6:22"},"nodeType":"YulFunctionCall","src":"2443:14:22"},"nodeType":"YulExpressionStatement","src":"2443:14:22"},{"nodeType":"YulAssignment","src":"2466:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2484:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2487:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2474:9:22"},"nodeType":"YulFunctionCall","src":"2474:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2466:4:22"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2416:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2424:4:22","type":""}],"src":"2377:121:22"},{"body":{"nodeType":"YulBlock","src":"2584:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"2617:425:22","statements":[{"nodeType":"YulVariableDeclaration","src":"2631:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"2641:1:22","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2635:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2662:2:22"},{"name":"array","nodeType":"YulIdentifier","src":"2666:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2655:6:22"},"nodeType":"YulFunctionCall","src":"2655:17:22"},"nodeType":"YulExpressionStatement","src":"2655:17:22"},{"nodeType":"YulVariableDeclaration","src":"2685:31:22","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2707:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"2711:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2697:9:22"},"nodeType":"YulFunctionCall","src":"2697:19:22"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2689:4:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2729:57:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2752:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2762:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2769:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"2781:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2765:3:22"},"nodeType":"YulFunctionCall","src":"2765:19:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2758:3:22"},"nodeType":"YulFunctionCall","src":"2758:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2748:3:22"},"nodeType":"YulFunctionCall","src":"2748:38:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2733:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"2823:23:22","statements":[{"nodeType":"YulAssignment","src":"2825:19:22","value":{"name":"data","nodeType":"YulIdentifier","src":"2840:4:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2825:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2805:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"2817:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2802:2:22"},"nodeType":"YulFunctionCall","src":"2802:20:22"},"nodeType":"YulIf","src":"2799:47:22"},{"nodeType":"YulVariableDeclaration","src":"2859:41:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2873:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2883:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2890:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2895:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2886:3:22"},"nodeType":"YulFunctionCall","src":"2886:12:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2879:3:22"},"nodeType":"YulFunctionCall","src":"2879:20:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2869:3:22"},"nodeType":"YulFunctionCall","src":"2869:31:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2863:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2913:24:22","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2926:11:22"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2917:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3011:21:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3020:5:22"},{"name":"_1","nodeType":"YulIdentifier","src":"3027:2:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3013:6:22"},"nodeType":"YulFunctionCall","src":"3013:17:22"},"nodeType":"YulExpressionStatement","src":"3013:17:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2961:5:22"},{"name":"_2","nodeType":"YulIdentifier","src":"2968:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2958:2:22"},"nodeType":"YulFunctionCall","src":"2958:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2972:26:22","statements":[{"nodeType":"YulAssignment","src":"2974:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2987:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"2994:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2983:3:22"},"nodeType":"YulFunctionCall","src":"2983:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2974:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"2954:3:22","statements":[]},"src":"2950:82:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2600:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"2605:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2597:2:22"},"nodeType":"YulFunctionCall","src":"2597:11:22"},"nodeType":"YulIf","src":"2594:448:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2556:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"2563:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2568:10:22","type":""}],"src":"2503:545:22"},{"body":{"nodeType":"YulBlock","src":"3138:81:22","statements":[{"nodeType":"YulAssignment","src":"3148:65:22","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3163:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3181:1:22","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"3184:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3177:3:22"},"nodeType":"YulFunctionCall","src":"3177:11:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3194:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3190:3:22"},"nodeType":"YulFunctionCall","src":"3190:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3173:3:22"},"nodeType":"YulFunctionCall","src":"3173:24:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3169:3:22"},"nodeType":"YulFunctionCall","src":"3169:29:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3159:3:22"},"nodeType":"YulFunctionCall","src":"3159:40:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3205:1:22","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"3208:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3201:3:22"},"nodeType":"YulFunctionCall","src":"3201:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3156:2:22"},"nodeType":"YulFunctionCall","src":"3156:57:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3148:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3115:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"3121:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3129:4:22","type":""}],"src":"3053:166:22"},{"body":{"nodeType":"YulBlock","src":"3320:1256:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3330:24:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3350:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3344:5:22"},"nodeType":"YulFunctionCall","src":"3344:10:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3334:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3397:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3399:16:22"},"nodeType":"YulFunctionCall","src":"3399:18:22"},"nodeType":"YulExpressionStatement","src":"3399:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3369:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3385:2:22","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3389:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3381:3:22"},"nodeType":"YulFunctionCall","src":"3381:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"3393:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3377:3:22"},"nodeType":"YulFunctionCall","src":"3377:18:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3366:2:22"},"nodeType":"YulFunctionCall","src":"3366:30:22"},"nodeType":"YulIf","src":"3363:56:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3472:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3510:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3504:5:22"},"nodeType":"YulFunctionCall","src":"3504:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3478:25:22"},"nodeType":"YulFunctionCall","src":"3478:38:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"3518:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3428:43:22"},"nodeType":"YulFunctionCall","src":"3428:97:22"},"nodeType":"YulExpressionStatement","src":"3428:97:22"},{"nodeType":"YulVariableDeclaration","src":"3534:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3551:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3538:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3561:23:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3580:4:22","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3565:11:22","type":""}]},{"nodeType":"YulAssignment","src":"3593:24:22","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3606:11:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3593:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3663:656:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3677:35:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3696:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3708:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3704:3:22"},"nodeType":"YulFunctionCall","src":"3704:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3692:3:22"},"nodeType":"YulFunctionCall","src":"3692:20:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3681:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3725:49:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3769:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3739:29:22"},"nodeType":"YulFunctionCall","src":"3739:35:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3729:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3787:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3796:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3791:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3874:172:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3899:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3917:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3922:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3913:3:22"},"nodeType":"YulFunctionCall","src":"3913:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3907:5:22"},"nodeType":"YulFunctionCall","src":"3907:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3892:6:22"},"nodeType":"YulFunctionCall","src":"3892:42:22"},"nodeType":"YulExpressionStatement","src":"3892:42:22"},{"nodeType":"YulAssignment","src":"3951:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3965:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3973:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3961:3:22"},"nodeType":"YulFunctionCall","src":"3961:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3951:6:22"}]},{"nodeType":"YulAssignment","src":"3992:40:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4009:9:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4020:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4005:3:22"},"nodeType":"YulFunctionCall","src":"4005:27:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3992:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3821:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3824:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3818:2:22"},"nodeType":"YulFunctionCall","src":"3818:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3833:28:22","statements":[{"nodeType":"YulAssignment","src":"3835:24:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3844:1:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3847:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3840:3:22"},"nodeType":"YulFunctionCall","src":"3840:19:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3835:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"3814:3:22","statements":[]},"src":"3810:236:22"},{"body":{"nodeType":"YulBlock","src":"4094:166:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4112:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4139:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4144:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4135:3:22"},"nodeType":"YulFunctionCall","src":"4135:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4129:5:22"},"nodeType":"YulFunctionCall","src":"4129:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4116:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4179:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4191:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4218:1:22","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"4221:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4214:3:22"},"nodeType":"YulFunctionCall","src":"4214:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"4230:3:22","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4210:3:22"},"nodeType":"YulFunctionCall","src":"4210:24:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4240:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4236:3:22"},"nodeType":"YulFunctionCall","src":"4236:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4206:3:22"},"nodeType":"YulFunctionCall","src":"4206:37:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4202:3:22"},"nodeType":"YulFunctionCall","src":"4202:42:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4187:3:22"},"nodeType":"YulFunctionCall","src":"4187:58:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4172:6:22"},"nodeType":"YulFunctionCall","src":"4172:74:22"},"nodeType":"YulExpressionStatement","src":"4172:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4065:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"4074:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4062:2:22"},"nodeType":"YulFunctionCall","src":"4062:19:22"},"nodeType":"YulIf","src":"4059:201:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4280:4:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:22","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4297:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4290:3:22"},"nodeType":"YulFunctionCall","src":"4290:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"4306:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:22"},"nodeType":"YulFunctionCall","src":"4286:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4273:6:22"},"nodeType":"YulFunctionCall","src":"4273:36:22"},"nodeType":"YulExpressionStatement","src":"4273:36:22"}]},"nodeType":"YulCase","src":"3656:663:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3661:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4336:234:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4350:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4363:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4354:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4399:67:22","statements":[{"nodeType":"YulAssignment","src":"4417:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4436:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4441:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4432:3:22"},"nodeType":"YulFunctionCall","src":"4432:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4426:5:22"},"nodeType":"YulFunctionCall","src":"4426:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4417:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4380:6:22"},"nodeType":"YulIf","src":"4377:89:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4486:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4545:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"4552:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4492:52:22"},"nodeType":"YulFunctionCall","src":"4492:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4479:6:22"},"nodeType":"YulFunctionCall","src":"4479:81:22"},"nodeType":"YulExpressionStatement","src":"4479:81:22"}]},"nodeType":"YulCase","src":"4328:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3636:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3644:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3633:2:22"},"nodeType":"YulFunctionCall","src":"3633:14:22"},"nodeType":"YulSwitch","src":"3626:944:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3305:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"3311:3:22","type":""}],"src":"3224:1352:22"},{"body":{"nodeType":"YulBlock","src":"4682:102:22","statements":[{"nodeType":"YulAssignment","src":"4692:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4704:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:22"},"nodeType":"YulFunctionCall","src":"4700:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4692:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4734:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4749:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4765:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4770:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4761:3:22"},"nodeType":"YulFunctionCall","src":"4761:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"4774:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4757:3:22"},"nodeType":"YulFunctionCall","src":"4757:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4745:3:22"},"nodeType":"YulFunctionCall","src":"4745:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4727:6:22"},"nodeType":"YulFunctionCall","src":"4727:51:22"},"nodeType":"YulExpressionStatement","src":"4727:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4651:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4662:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4673:4:22","type":""}],"src":"4581:203:22"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_bytes32t_addresst_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n        let value := mload(add(headStart, 96))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value3 := value\n        let offset_2 := mload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_string_fromMemory(add(headStart, offset_2), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2052 CODESIZE SUB DUP1 PUSH3 0x2052 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1E3 JUMP JUMPDEST CALLER DUP6 DUP6 PUSH1 0x0 PUSH3 0x45 DUP4 DUP3 PUSH3 0x32F JUMP JUMPDEST POP PUSH1 0x1 PUSH3 0x54 DUP3 DUP3 PUSH3 0x32F JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x86 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x91 DUP2 PUSH3 0xCC JUMP JUMPDEST POP PUSH1 0x9 DUP4 SWAP1 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0xB PUSH3 0xC0 DUP3 DUP3 PUSH3 0x32F JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x3FB JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x163 JUMPI PUSH3 0x163 PUSH3 0x11E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x18E JUMPI PUSH3 0x18E PUSH3 0x11E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1CF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1B0 JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x222 DUP10 DUP4 DUP11 ADD PUSH3 0x134 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x239 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x247 DUP10 DUP4 DUP11 ADD PUSH3 0x134 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD SWAP2 SWAP8 POP SWAP6 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 EQ PUSH3 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x80 DUP9 ADD MLOAD SWAP2 SWAP4 POP DUP1 DUP3 GT ISZERO PUSH3 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x293 DUP9 DUP3 DUP10 ADD PUSH3 0x134 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2B5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x32A JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x305 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x326 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x311 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x34B JUMPI PUSH3 0x34B PUSH3 0x11E JUMP JUMPDEST PUSH3 0x363 DUP2 PUSH3 0x35C DUP5 SLOAD PUSH3 0x2A0 JUMP JUMPDEST DUP5 PUSH3 0x2DC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x39B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x382 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x326 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3CC JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3AB JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3EB JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1C47 DUP1 PUSH3 0x40B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BF32270 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xEE3DE9C5 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xC18B065E EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xC4B3D052 EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BF32270 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xA4E2EE11 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x49590657 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x31494BBB EQ PUSH2 0x208 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH1 0x9 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x1867 JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST PUSH2 0x18B PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x18B PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3C7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3DC SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x408 SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x455 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x455 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x438 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46A DUP3 PUSH2 0xCD2 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x493 DUP3 DUP3 CALLER PUSH2 0xD0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D3 DUP4 DUP4 CALLER PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH2 0x537 DUP6 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x59F SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5CB SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x618 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x618 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP2 DUP3 ADD MSTORE DUP3 MLOAD SWAP2 DUP4 ADD MLOAD SWAP1 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP10 SWAP1 SWAP9 POP SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x67E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x77D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x68B PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0xB PUSH2 0x493 DUP3 DUP3 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP3 PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6F2 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x6FC PUSH1 0x0 PUSH2 0xDD5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70B DUP5 DUP5 DUP5 PUSH2 0x827 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x3DC SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH2 0x493 CALLER DUP4 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x745 DUP3 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1950 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x788 DUP5 DUP5 DUP5 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x521 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7DB DUP6 PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH2 0x81E DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x9 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0xFF1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xCE21E1CB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xCE21E1CB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C626F756E644E46543A2043616C6C6572206973206E6F742061207665 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3934B334B2B21034B9B9BAB2B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x901 DUP5 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C626F756E644E46543A20526563697069656E74206973206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6C696769626C65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x3DBF1DB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3DBF1DB3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0x9DC DUP4 PUSH2 0x1ADD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH2 0x9EE DUP7 DUP3 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA1A JUMPI PUSH2 0xA1A PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB PUSH2 0xA2D DUP5 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA3E SWAP3 SWAP2 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE SWAP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0xFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xAB1 SWAP1 DUP3 PUSH2 0x19DF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP4 SWAP2 SWAP1 DUP10 AND SWAP1 PUSH32 0xA37C4DF4D408FB32A449F1F05D2D288B7097EE26ECD7BE996D720BA17E39ABAF SWAP1 PUSH1 0x0 SWAP1 LOG4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB26 DUP3 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xB88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C626F756E644E46543A2055524920717565727920666F72206E6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3C34B9BA32B73A103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xBA4 SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBD0 SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBF2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC62 DUP3 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1950 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC9C PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xCCF DUP2 PUSH2 0xDD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x67E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD47 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E105749 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81E DUP6 DUP6 DUP6 PUSH2 0x129E JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD83 JUMPI POP PUSH1 0x7 SLOAD DUP3 GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE59 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xFEA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xF08 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF43 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF40 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFAC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF71 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1095 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1013 JUMPI PUSH2 0x1013 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1055 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x108D DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFF6 JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D8 DUP4 DUP4 PUSH1 0x0 PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1112 DUP4 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1132 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x115C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1166 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x126E JUMPI PUSH1 0x0 PUSH2 0x11BC DUP5 PUSH2 0xCD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11E8 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11FB JUMPI POP PUSH2 0x11F9 DUP2 DUP5 PUSH2 0xC29 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1224 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST DUP2 ISZERO PUSH2 0x126C JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x12CB JUMPI PUSH2 0x12CB DUP2 DUP5 DUP7 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1309 JUMPI PUSH2 0x12E8 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1338 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x13D6 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1402 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1420 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1438 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x144C JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x145E JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3C7 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x147A DUP4 DUP4 DUP4 PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x70B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x150D JUMPI POP PUSH2 0x150D DUP5 DUP5 PUSH2 0xC29 JUMP JUMPDEST DUP1 PUSH2 0x70B JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1569 DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x158B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1573 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x15AC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1569 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1624 DUP4 PUSH2 0x15EC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1650 DUP5 PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP PUSH2 0x165E PUSH1 0x20 DUP6 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x169B SWAP1 DUP4 ADD DUP6 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DD PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1705 JUMPI PUSH2 0x1705 PUSH2 0x16AC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x171E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1569 DUP3 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17BA DUP5 PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x180F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184C DUP4 PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x185C DUP2 PUSH2 0x1822 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1886 DUP6 PUSH2 0x15EC JUMP JUMPDEST SWAP4 POP PUSH2 0x1894 PUSH1 0x20 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x18C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D7 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18FF DUP4 PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP PUSH2 0x190D PUSH1 0x20 DUP5 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x192A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x194A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x536F756C626F756E644E46543A20517565727920666F72206E6F6E6578697374 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x19C0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFE8 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19CC JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19F9 JUMPI PUSH2 0x19F9 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x1A07 DUP5 SLOAD PUSH2 0x1916 JUMP JUMPDEST DUP5 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1A42 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1A2A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A71 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1A52 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1A8F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1569 DUP2 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1AFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1B28 DUP2 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1B40 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1B55 JUMPI PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1B84 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1B7B JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1B62 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x1B98 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1570 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BD4 SWAP1 DUP4 ADD DUP5 PUSH2 0x1594 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1569 DUP2 PUSH2 0x1536 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9E194AB20D6DB0286A8E1BA5 POP 0xE7 ADDMOD 0xD XOR DUP5 DUP8 0x27 INVALID 0x2E SELFBALANCE SWAP12 PUSH29 0x9F3F2EE9F71864736F6C63430008140033000000000000000000000000 ","sourceMap":"462:7783:16:-:0;;;1639:344;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1846:10;1824:4;1830:6;1446:5:2;:13;1824:4:16;1446:5:2;:13;:::i;:::-;-1:-1:-1;1469:7:2;:17;1479:7;1469;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;4727:51:22;4700:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1869:11:16::2;:24:::0;;;1904:15:::2;:32:::0;;-1:-1:-1;;;;;;1904:32:16::2;-1:-1:-1::0;;;;;1904:32:16;::::2;;::::0;;1947:13:::2;:28;1963:12:::0;1947:13;:28:::2;:::i;:::-;;1639:344:::0;;;;;462:7783;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:22:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:22;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:22;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:22:o;991:996::-;1127:6;1135;1143;1151;1159;1212:3;1200:9;1191:7;1187:23;1183:33;1180:53;;;1229:1;1226;1219:12;1180:53;1256:16;;-1:-1:-1;;;;;1321:14:22;;;1318:34;;;1348:1;1345;1338:12;1318:34;1371:61;1424:7;1415:6;1404:9;1400:22;1371:61;:::i;:::-;1361:71;;1478:2;1467:9;1463:18;1457:25;1441:41;;1507:2;1497:8;1494:16;1491:36;;;1523:1;1520;1513:12;1491:36;1546:63;1601:7;1590:8;1579:9;1575:24;1546:63;:::i;:::-;1649:2;1634:18;;1628:25;1696:2;1681:18;;1675:25;1536:73;;-1:-1:-1;1628:25:22;-1:-1:-1;1675:25:22;-1:-1:-1;;;;;;1729:31:22;;1719:42;;1709:70;;1775:1;1772;1765:12;1709:70;1849:3;1834:19;;1828:26;1798:5;;-1:-1:-1;1866:16:22;;;1863:36;;;1895:1;1892;1885:12;1863:36;;1918:63;1973:7;1962:8;1951:9;1947:24;1918:63;:::i;:::-;1908:73;;;991:996;;;;;;;;:::o;1992:380::-;2071:1;2067:12;;;;2114;;;2135:61;;2189:4;2181:6;2177:17;2167:27;;2135:61;2242:2;2234:6;2231:14;2211:18;2208:38;2205:161;;2288:10;2283:3;2279:20;2276:1;2269:31;2323:4;2320:1;2313:15;2351:4;2348:1;2341:15;2205:161;;1992:380;;;:::o;2503:545::-;2605:2;2600:3;2597:11;2594:448;;;2641:1;2666:5;2662:2;2655:17;2711:4;2707:2;2697:19;2781:2;2769:10;2765:19;2762:1;2758:27;2752:4;2748:38;2817:4;2805:10;2802:20;2799:47;;;-1:-1:-1;2840:4:22;2799:47;2895:2;2890:3;2886:12;2883:1;2879:20;2873:4;2869:31;2859:41;;2950:82;2968:2;2961:5;2958:13;2950:82;;;3013:17;;;2994:1;2983:13;2950:82;;;2954:3;;;2594:448;2503:545;;;:::o;3224:1352::-;3344:10;;-1:-1:-1;;;;;3366:30:22;;3363:56;;;3399:18;;:::i;:::-;3428:97;3518:6;3478:38;3510:4;3504:11;3478:38;:::i;:::-;3472:4;3428:97;:::i;:::-;3580:4;;3644:2;3633:14;;3661:1;3656:663;;;;4363:1;4380:6;4377:89;;;-1:-1:-1;4432:19:22;;;4426:26;4377:89;-1:-1:-1;;3181:1:22;3177:11;;;3173:24;3169:29;3159:40;3205:1;3201:11;;;3156:57;4479:81;;3626:944;;3656:663;2450:1;2443:14;;;2487:4;2474:18;;-1:-1:-1;;3692:20:22;;;3810:236;3824:7;3821:1;3818:14;3810:236;;;3913:19;;;3907:26;3892:42;;4005:27;;;;3973:1;3961:14;;;;3840:19;;3810:236;;;3814:3;4074:6;4065:7;4062:19;4059:201;;;4135:19;;;4129:26;-1:-1:-1;;4218:1:22;4214:14;;;4230:3;4210:24;4206:37;4202:42;4187:58;4172:74;;4059:201;-1:-1:-1;;;;;4306:1:22;4290:14;;;4286:22;4273:36;;-1:-1:-1;3224:1352:22:o;4581:203::-;462:7783:16;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1108":{"entryPoint":3339,"id":1108,"parameterSlots":3,"returnSlots":0},"@_approve_1174":{"entryPoint":4504,"id":1174,"parameterSlots":4,"returnSlots":0},"@_checkAuthorized_748":{"entryPoint":5231,"id":748,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3496,"id":84,"parameterSlots":0,"returnSlots":0},"@_exists_7421":{"entryPoint":3440,"id":7421,"parameterSlots":1,"returnSlots":1},"@_getApproved_675":{"entryPoint":null,"id":675,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_711":{"entryPoint":5331,"id":711,"parameterSlots":3,"returnSlots":1},"@_mint_904":{"entryPoint":4256,"id":904,"parameterSlots":2,"returnSlots":0},"@_msgSender_1493":{"entryPoint":null,"id":1493,"parameterSlots":0,"returnSlots":1},"@_ownerOf_662":{"entryPoint":null,"id":662,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1240":{"entryPoint":3282,"id":1240,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_1211":{"entryPoint":3623,"id":1211,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3541,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_7120":{"entryPoint":3352,"id":7120,"parameterSlots":3,"returnSlots":1},"@_update_854":{"entryPoint":4766,"id":854,"parameterSlots":3,"returnSlots":1},"@approve_505":{"entryPoint":1160,"id":505,"parameterSlots":2,"returnSlots":0},"@balanceOf_413":{"entryPoint":1698,"id":413,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1480":{"entryPoint":3782,"id":1480,"parameterSlots":5,"returnSlots":0},"@getApproved_522":{"entryPoint":1119,"id":522,"parameterSlots":1,"returnSlots":1},"@getCertificateData_7296":{"entryPoint":1319,"id":7296,"parameterSlots":1,"returnSlots":4},"@getIssuedAt_7338":{"entryPoint":3159,"id":7338,"parameterSlots":1,"returnSlots":1},"@getMerkleRoot_7395":{"entryPoint":null,"id":7395,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_555":{"entryPoint":3113,"id":555,"parameterSlots":2,"returnSlots":1},"@isEligible_7256":{"entryPoint":1941,"id":7256,"parameterSlots":3,"returnSlots":1},"@issuerOf_7317":{"entryPoint":1850,"id":7317,"parameterSlots":1,"returnSlots":1},"@leafFromAddress_8268":{"entryPoint":null,"id":8268,"parameterSlots":1,"returnSlots":1},"@log10_4454":{"entryPoint":5015,"id":4454,"parameterSlots":1,"returnSlots":1},"@mintCertificate_7229":{"entryPoint":2087,"id":7229,"parameterSlots":3,"returnSlots":1},"@mint_7137":{"entryPoint":1790,"id":7137,"parameterSlots":3,"returnSlots":1},"@name_435":{"entryPoint":973,"id":435,"parameterSlots":0,"returnSlots":1},"@ownerOf_426":{"entryPoint":1687,"id":426,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1770,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_619":{"entryPoint":1635,"id":619,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_649":{"entryPoint":1917,"id":649,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_538":{"entryPoint":1839,"id":538,"parameterSlots":2,"returnSlots":0},"@setBaseURI_7373":{"entryPoint":1667,"id":7373,"parameterSlots":1,"returnSlots":0},"@setMerkleRoot_7386":{"entryPoint":1811,"id":7386,"parameterSlots":1,"returnSlots":0},"@supportsInterface_2988":{"entryPoint":null,"id":2988,"parameterSlots":1,"returnSlots":1},"@supportsInterface_385":{"entryPoint":891,"id":385,"parameterSlots":1,"returnSlots":1},"@symbol_444":{"entryPoint":1824,"id":444,"parameterSlots":0,"returnSlots":1},"@toString_1677":{"entryPoint":4357,"id":1677,"parameterSlots":1,"returnSlots":1},"@tokenURI_7360":{"entryPoint":2843,"id":7360,"parameterSlots":1,"returnSlots":1},"@transferFrom_601":{"entryPoint":1175,"id":601,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":3220,"id":126,"parameterSlots":1,"returnSlots":0},"@verify_8252":{"entryPoint":4081,"id":8252,"parameterSlots":3,"returnSlots":1},"abi_decode_address":{"entryPoint":5612,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_string":{"entryPoint":5826,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6017,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6371,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5682,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6247,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_calldata_ptr":{"entryPoint":6044,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6192,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5640,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":6815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4":{"entryPoint":5452,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":7134,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_IssuerTier_$7919_fromMemory":{"entryPoint":6844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":5944,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6938,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":7073,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint8_t_string_memory_ptr_t_uint256__to_t_address_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":5742,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3a9b695377a749f7cd285668aa31af220b788a29aa468bc36431ca063f552c39__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_65c7ee8c8d90e7395d98b82afea606dddab7e7698cc9b9c4e7133434bd941fec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6c1335588a0b088cfb2ec509a8b78ba3968dfbda211a2f2fbf5b29ed2bd7748d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6480,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9d3f96f548042c9595ab469641935100bddfeff4ab1cebebda7ce0b95f6428f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6553,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":6623,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5488,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6422,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":6877,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x12":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":6916,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7163,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5804,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bool":{"entryPoint":6178,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":5430,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15336:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"58:87:22","statements":[{"body":{"nodeType":"YulBlock","src":"123:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"132:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"135:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"125:6:22"},"nodeType":"YulFunctionCall","src":"125:12:22"},"nodeType":"YulExpressionStatement","src":"125:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"81:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"92:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"108:10:22","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"99:3:22"},"nodeType":"YulFunctionCall","src":"99:20:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"88:3:22"},"nodeType":"YulFunctionCall","src":"88:32:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"78:2:22"},"nodeType":"YulFunctionCall","src":"78:43:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"71:6:22"},"nodeType":"YulFunctionCall","src":"71:51:22"},"nodeType":"YulIf","src":"68:71:22"}]},"name":"validator_revert_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"47:5:22","type":""}],"src":"14:131:22"},{"body":{"nodeType":"YulBlock","src":"219:176:22","statements":[{"body":{"nodeType":"YulBlock","src":"265:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"274:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"277:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"267:6:22"},"nodeType":"YulFunctionCall","src":"267:12:22"},"nodeType":"YulExpressionStatement","src":"267:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"240:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"249:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"236:3:22"},"nodeType":"YulFunctionCall","src":"236:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"261:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"232:3:22"},"nodeType":"YulFunctionCall","src":"232:32:22"},"nodeType":"YulIf","src":"229:52:22"},{"nodeType":"YulVariableDeclaration","src":"290:36:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"316:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"303:12:22"},"nodeType":"YulFunctionCall","src":"303:23:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"294:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"359:5:22"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"335:23:22"},"nodeType":"YulFunctionCall","src":"335:30:22"},"nodeType":"YulExpressionStatement","src":"335:30:22"},{"nodeType":"YulAssignment","src":"374:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"384:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"185:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"196:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"208:6:22","type":""}],"src":"150:245:22"},{"body":{"nodeType":"YulBlock","src":"495:92:22","statements":[{"nodeType":"YulAssignment","src":"505:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"517:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"528:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"513:3:22"},"nodeType":"YulFunctionCall","src":"513:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"505:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"547:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"572:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"565:6:22"},"nodeType":"YulFunctionCall","src":"565:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"558:6:22"},"nodeType":"YulFunctionCall","src":"558:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"540:6:22"},"nodeType":"YulFunctionCall","src":"540:41:22"},"nodeType":"YulExpressionStatement","src":"540:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"464:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"475:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"486:4:22","type":""}],"src":"400:187:22"},{"body":{"nodeType":"YulBlock","src":"658:184:22","statements":[{"nodeType":"YulVariableDeclaration","src":"668:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"677:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"672:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"737:63:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"762:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"767:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"758:3:22"},"nodeType":"YulFunctionCall","src":"758:11:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"781:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"786:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:22"},"nodeType":"YulFunctionCall","src":"777:11:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"771:5:22"},"nodeType":"YulFunctionCall","src":"771:18:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"751:6:22"},"nodeType":"YulFunctionCall","src":"751:39:22"},"nodeType":"YulExpressionStatement","src":"751:39:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"698:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"701:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"695:2:22"},"nodeType":"YulFunctionCall","src":"695:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"709:19:22","statements":[{"nodeType":"YulAssignment","src":"711:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"720:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"723:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:22"},"nodeType":"YulFunctionCall","src":"716:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"711:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"691:3:22","statements":[]},"src":"687:113:22"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"820:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"825:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:22"},"nodeType":"YulFunctionCall","src":"816:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:22"},"nodeType":"YulFunctionCall","src":"809:27:22"},"nodeType":"YulExpressionStatement","src":"809:27:22"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"636:3:22","type":""},{"name":"dst","nodeType":"YulTypedName","src":"641:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"646:6:22","type":""}],"src":"592:250:22"},{"body":{"nodeType":"YulBlock","src":"897:221:22","statements":[{"nodeType":"YulVariableDeclaration","src":"907:26:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"927:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"921:5:22"},"nodeType":"YulFunctionCall","src":"921:12:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"911:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"949:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"954:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"942:6:22"},"nodeType":"YulFunctionCall","src":"942:19:22"},"nodeType":"YulExpressionStatement","src":"942:19:22"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1009:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"1016:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1005:3:22"},"nodeType":"YulFunctionCall","src":"1005:16:22"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1027:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"1032:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:22"},"nodeType":"YulFunctionCall","src":"1023:14:22"},{"name":"length","nodeType":"YulIdentifier","src":"1039:6:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"970:34:22"},"nodeType":"YulFunctionCall","src":"970:76:22"},"nodeType":"YulExpressionStatement","src":"970:76:22"},{"nodeType":"YulAssignment","src":"1055:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1070:3:22"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1083:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1091:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1079:3:22"},"nodeType":"YulFunctionCall","src":"1079:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1100:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1096:3:22"},"nodeType":"YulFunctionCall","src":"1096:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1075:3:22"},"nodeType":"YulFunctionCall","src":"1075:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1066:3:22"},"nodeType":"YulFunctionCall","src":"1066:39:22"},{"kind":"number","nodeType":"YulLiteral","src":"1107:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:22"},"nodeType":"YulFunctionCall","src":"1062:50:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1055:3:22"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"874:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"881:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"889:3:22","type":""}],"src":"847:271:22"},{"body":{"nodeType":"YulBlock","src":"1244:99:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1261:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1272:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1254:6:22"},"nodeType":"YulFunctionCall","src":"1254:21:22"},"nodeType":"YulExpressionStatement","src":"1254:21:22"},{"nodeType":"YulAssignment","src":"1284:53:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1310:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1322:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1333:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1318:3:22"},"nodeType":"YulFunctionCall","src":"1318:18:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1292:17:22"},"nodeType":"YulFunctionCall","src":"1292:45:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1284:4:22"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1213:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1224:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1235:4:22","type":""}],"src":"1123:220:22"},{"body":{"nodeType":"YulBlock","src":"1418:110:22","statements":[{"body":{"nodeType":"YulBlock","src":"1464:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1476:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1466:6:22"},"nodeType":"YulFunctionCall","src":"1466:12:22"},"nodeType":"YulExpressionStatement","src":"1466:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1439:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1448:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1435:3:22"},"nodeType":"YulFunctionCall","src":"1435:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1431:3:22"},"nodeType":"YulFunctionCall","src":"1431:32:22"},"nodeType":"YulIf","src":"1428:52:22"},{"nodeType":"YulAssignment","src":"1489:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1512:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1499:12:22"},"nodeType":"YulFunctionCall","src":"1499:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1489:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1384:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1395:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1407:6:22","type":""}],"src":"1348:180:22"},{"body":{"nodeType":"YulBlock","src":"1634:102:22","statements":[{"nodeType":"YulAssignment","src":"1644:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1656:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1667:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1652:3:22"},"nodeType":"YulFunctionCall","src":"1652:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1644:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1686:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1701:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1717:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1722:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1713:3:22"},"nodeType":"YulFunctionCall","src":"1713:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"1726:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1709:3:22"},"nodeType":"YulFunctionCall","src":"1709:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1697:3:22"},"nodeType":"YulFunctionCall","src":"1697:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1679:6:22"},"nodeType":"YulFunctionCall","src":"1679:51:22"},"nodeType":"YulExpressionStatement","src":"1679:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1603:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1614:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1625:4:22","type":""}],"src":"1533:203:22"},{"body":{"nodeType":"YulBlock","src":"1790:124:22","statements":[{"nodeType":"YulAssignment","src":"1800:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1822:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1809:12:22"},"nodeType":"YulFunctionCall","src":"1809:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:22"}]},{"body":{"nodeType":"YulBlock","src":"1892:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1901:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1904:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1894:6:22"},"nodeType":"YulFunctionCall","src":"1894:12:22"},"nodeType":"YulExpressionStatement","src":"1894:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1851:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1862:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1877:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1882:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1873:3:22"},"nodeType":"YulFunctionCall","src":"1873:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"1886:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1869:3:22"},"nodeType":"YulFunctionCall","src":"1869:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1858:3:22"},"nodeType":"YulFunctionCall","src":"1858:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1848:2:22"},"nodeType":"YulFunctionCall","src":"1848:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1841:6:22"},"nodeType":"YulFunctionCall","src":"1841:50:22"},"nodeType":"YulIf","src":"1838:70:22"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1769:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1780:5:22","type":""}],"src":"1741:173:22"},{"body":{"nodeType":"YulBlock","src":"2006:167:22","statements":[{"body":{"nodeType":"YulBlock","src":"2052:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2064:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2054:6:22"},"nodeType":"YulFunctionCall","src":"2054:12:22"},"nodeType":"YulExpressionStatement","src":"2054:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2027:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2036:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2023:3:22"},"nodeType":"YulFunctionCall","src":"2023:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2048:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2019:3:22"},"nodeType":"YulFunctionCall","src":"2019:32:22"},"nodeType":"YulIf","src":"2016:52:22"},{"nodeType":"YulAssignment","src":"2077:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2106:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2087:18:22"},"nodeType":"YulFunctionCall","src":"2087:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2077:6:22"}]},{"nodeType":"YulAssignment","src":"2125:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2152:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2148:3:22"},"nodeType":"YulFunctionCall","src":"2148:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2135:12:22"},"nodeType":"YulFunctionCall","src":"2135:32:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2125:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1964:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1975:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1987:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1995:6:22","type":""}],"src":"1919:254:22"},{"body":{"nodeType":"YulBlock","src":"2282:224:22","statements":[{"body":{"nodeType":"YulBlock","src":"2328:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2337:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2340:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2330:6:22"},"nodeType":"YulFunctionCall","src":"2330:12:22"},"nodeType":"YulExpressionStatement","src":"2330:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2303:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2312:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2299:3:22"},"nodeType":"YulFunctionCall","src":"2299:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2324:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2295:3:22"},"nodeType":"YulFunctionCall","src":"2295:32:22"},"nodeType":"YulIf","src":"2292:52:22"},{"nodeType":"YulAssignment","src":"2353:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2363:18:22"},"nodeType":"YulFunctionCall","src":"2363:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2353:6:22"}]},{"nodeType":"YulAssignment","src":"2401:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2434:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2445:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2430:3:22"},"nodeType":"YulFunctionCall","src":"2430:18:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2411:18:22"},"nodeType":"YulFunctionCall","src":"2411:38:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2401:6:22"}]},{"nodeType":"YulAssignment","src":"2458:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2485:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2496:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2481:3:22"},"nodeType":"YulFunctionCall","src":"2481:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2468:12:22"},"nodeType":"YulFunctionCall","src":"2468:32:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2458:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2232:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2243:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2255:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2263:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2271:6:22","type":""}],"src":"2178:328:22"},{"body":{"nodeType":"YulBlock","src":"2712:267:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2744:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2760:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2765:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2756:3:22"},"nodeType":"YulFunctionCall","src":"2756:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2769:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2752:3:22"},"nodeType":"YulFunctionCall","src":"2752:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2740:3:22"},"nodeType":"YulFunctionCall","src":"2740:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2722:6:22"},"nodeType":"YulFunctionCall","src":"2722:51:22"},"nodeType":"YulExpressionStatement","src":"2722:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2793:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2804:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2789:3:22"},"nodeType":"YulFunctionCall","src":"2789:18:22"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2813:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2821:4:22","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2809:3:22"},"nodeType":"YulFunctionCall","src":"2809:17:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2782:6:22"},"nodeType":"YulFunctionCall","src":"2782:45:22"},"nodeType":"YulExpressionStatement","src":"2782:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2847:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2858:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2843:3:22"},"nodeType":"YulFunctionCall","src":"2843:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"2863:3:22","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2836:6:22"},"nodeType":"YulFunctionCall","src":"2836:31:22"},"nodeType":"YulExpressionStatement","src":"2836:31:22"},{"nodeType":"YulAssignment","src":"2876:54:22","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2902:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2914:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2925:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2910:3:22"},"nodeType":"YulFunctionCall","src":"2910:19:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2884:17:22"},"nodeType":"YulFunctionCall","src":"2884:46:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2876:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2950:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2961:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2946:3:22"},"nodeType":"YulFunctionCall","src":"2946:18:22"},{"name":"value3","nodeType":"YulIdentifier","src":"2966:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2939:6:22"},"nodeType":"YulFunctionCall","src":"2939:34:22"},"nodeType":"YulExpressionStatement","src":"2939:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint8_t_string_memory_ptr_t_uint256__to_t_address_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2657:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2668:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2676:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2684:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2692:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2703:4:22","type":""}],"src":"2511:468:22"},{"body":{"nodeType":"YulBlock","src":"3085:76:22","statements":[{"nodeType":"YulAssignment","src":"3095:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3107:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3118:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3103:3:22"},"nodeType":"YulFunctionCall","src":"3103:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3095:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3137:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"3148:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3130:6:22"},"nodeType":"YulFunctionCall","src":"3130:25:22"},"nodeType":"YulExpressionStatement","src":"3130:25:22"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3054:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3065:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3076:4:22","type":""}],"src":"2984:177:22"},{"body":{"nodeType":"YulBlock","src":"3198:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3215:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3222:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3227:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3218:3:22"},"nodeType":"YulFunctionCall","src":"3218:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3208:6:22"},"nodeType":"YulFunctionCall","src":"3208:31:22"},"nodeType":"YulExpressionStatement","src":"3208:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3255:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3258:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3248:6:22"},"nodeType":"YulFunctionCall","src":"3248:15:22"},"nodeType":"YulExpressionStatement","src":"3248:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3279:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3282:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3272:6:22"},"nodeType":"YulFunctionCall","src":"3272:15:22"},"nodeType":"YulExpressionStatement","src":"3272:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3166:127:22"},{"body":{"nodeType":"YulBlock","src":"3373:557:22","statements":[{"nodeType":"YulVariableDeclaration","src":"3383:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"3393:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3387:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3438:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3440:16:22"},"nodeType":"YulFunctionCall","src":"3440:18:22"},"nodeType":"YulExpressionStatement","src":"3440:18:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3426:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"3434:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3423:2:22"},"nodeType":"YulFunctionCall","src":"3423:14:22"},"nodeType":"YulIf","src":"3420:40:22"},{"nodeType":"YulVariableDeclaration","src":"3469:17:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3483:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3479:3:22"},"nodeType":"YulFunctionCall","src":"3479:7:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3473:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3495:23:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3515:2:22","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3509:5:22"},"nodeType":"YulFunctionCall","src":"3509:9:22"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3499:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3527:73:22","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3549:6:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3573:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3581:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3569:3:22"},"nodeType":"YulFunctionCall","src":"3569:15:22"},{"name":"_2","nodeType":"YulIdentifier","src":"3586:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3565:3:22"},"nodeType":"YulFunctionCall","src":"3565:24:22"},{"kind":"number","nodeType":"YulLiteral","src":"3591:2:22","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3561:3:22"},"nodeType":"YulFunctionCall","src":"3561:33:22"},{"name":"_2","nodeType":"YulIdentifier","src":"3596:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3557:3:22"},"nodeType":"YulFunctionCall","src":"3557:42:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3545:3:22"},"nodeType":"YulFunctionCall","src":"3545:55:22"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3531:10:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"3659:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3661:16:22"},"nodeType":"YulFunctionCall","src":"3661:18:22"},"nodeType":"YulExpressionStatement","src":"3661:18:22"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3618:10:22"},{"name":"_1","nodeType":"YulIdentifier","src":"3630:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3615:2:22"},"nodeType":"YulFunctionCall","src":"3615:18:22"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3638:10:22"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3650:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3635:2:22"},"nodeType":"YulFunctionCall","src":"3635:22:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3612:2:22"},"nodeType":"YulFunctionCall","src":"3612:46:22"},"nodeType":"YulIf","src":"3609:72:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3697:2:22","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3701:10:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3690:6:22"},"nodeType":"YulFunctionCall","src":"3690:22:22"},"nodeType":"YulExpressionStatement","src":"3690:22:22"},{"nodeType":"YulAssignment","src":"3721:15:22","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3730:6:22"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3721:5:22"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3752:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"3760:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3745:6:22"},"nodeType":"YulFunctionCall","src":"3745:22:22"},"nodeType":"YulExpressionStatement","src":"3745:22:22"},{"body":{"nodeType":"YulBlock","src":"3805:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3817:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3807:6:22"},"nodeType":"YulFunctionCall","src":"3807:12:22"},"nodeType":"YulExpressionStatement","src":"3807:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3786:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"3791:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3782:3:22"},"nodeType":"YulFunctionCall","src":"3782:16:22"},{"name":"end","nodeType":"YulIdentifier","src":"3800:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3779:2:22"},"nodeType":"YulFunctionCall","src":"3779:25:22"},"nodeType":"YulIf","src":"3776:45:22"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3847:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3855:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3843:3:22"},"nodeType":"YulFunctionCall","src":"3843:17:22"},{"name":"src","nodeType":"YulIdentifier","src":"3862:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"3867:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3830:12:22"},"nodeType":"YulFunctionCall","src":"3830:44:22"},"nodeType":"YulExpressionStatement","src":"3830:44:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3898:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"3906:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3894:3:22"},"nodeType":"YulFunctionCall","src":"3894:19:22"},{"kind":"number","nodeType":"YulLiteral","src":"3915:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3890:3:22"},"nodeType":"YulFunctionCall","src":"3890:30:22"},{"kind":"number","nodeType":"YulLiteral","src":"3922:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3883:6:22"},"nodeType":"YulFunctionCall","src":"3883:41:22"},"nodeType":"YulExpressionStatement","src":"3883:41:22"}]},"name":"abi_decode_available_length_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3342:3:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"3347:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3355:3:22","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3363:5:22","type":""}],"src":"3298:632:22"},{"body":{"nodeType":"YulBlock","src":"4015:371:22","statements":[{"body":{"nodeType":"YulBlock","src":"4061:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4070:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4073:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4063:6:22"},"nodeType":"YulFunctionCall","src":"4063:12:22"},"nodeType":"YulExpressionStatement","src":"4063:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4036:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4045:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4032:3:22"},"nodeType":"YulFunctionCall","src":"4032:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4057:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4028:3:22"},"nodeType":"YulFunctionCall","src":"4028:32:22"},"nodeType":"YulIf","src":"4025:52:22"},{"nodeType":"YulVariableDeclaration","src":"4086:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4113:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4100:12:22"},"nodeType":"YulFunctionCall","src":"4100:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4090:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4166:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4175:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4178:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4168:6:22"},"nodeType":"YulFunctionCall","src":"4168:12:22"},"nodeType":"YulExpressionStatement","src":"4168:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4138:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"4146:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4135:2:22"},"nodeType":"YulFunctionCall","src":"4135:30:22"},"nodeType":"YulIf","src":"4132:50:22"},{"nodeType":"YulVariableDeclaration","src":"4191:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4205:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4216:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4201:3:22"},"nodeType":"YulFunctionCall","src":"4201:22:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4195:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4271:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4280:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4283:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4273:6:22"},"nodeType":"YulFunctionCall","src":"4273:12:22"},"nodeType":"YulExpressionStatement","src":"4273:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4250:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"4254:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4246:3:22"},"nodeType":"YulFunctionCall","src":"4246:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4261:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4242:3:22"},"nodeType":"YulFunctionCall","src":"4242:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4235:6:22"},"nodeType":"YulFunctionCall","src":"4235:35:22"},"nodeType":"YulIf","src":"4232:55:22"},{"nodeType":"YulAssignment","src":"4296:84:22","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4345:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"4349:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4341:3:22"},"nodeType":"YulFunctionCall","src":"4341:11:22"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"4367:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4354:12:22"},"nodeType":"YulFunctionCall","src":"4354:16:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4372:7:22"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"4306:34:22"},"nodeType":"YulFunctionCall","src":"4306:74:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4296:6:22"}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3981:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3992:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4004:6:22","type":""}],"src":"3935:451:22"},{"body":{"nodeType":"YulBlock","src":"4461:116:22","statements":[{"body":{"nodeType":"YulBlock","src":"4507:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4516:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4519:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4509:6:22"},"nodeType":"YulFunctionCall","src":"4509:12:22"},"nodeType":"YulExpressionStatement","src":"4509:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4482:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4491:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4478:3:22"},"nodeType":"YulFunctionCall","src":"4478:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4503:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4474:3:22"},"nodeType":"YulFunctionCall","src":"4474:32:22"},"nodeType":"YulIf","src":"4471:52:22"},{"nodeType":"YulAssignment","src":"4532:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4561:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4542:18:22"},"nodeType":"YulFunctionCall","src":"4542:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4532:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4427:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4438:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4450:6:22","type":""}],"src":"4391:186:22"},{"body":{"nodeType":"YulBlock","src":"4683:76:22","statements":[{"nodeType":"YulAssignment","src":"4693:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4705:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4716:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4701:3:22"},"nodeType":"YulFunctionCall","src":"4701:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4693:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4735:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"4746:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4728:6:22"},"nodeType":"YulFunctionCall","src":"4728:25:22"},"nodeType":"YulExpressionStatement","src":"4728:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4652:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4663:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4674:4:22","type":""}],"src":"4582:177:22"},{"body":{"nodeType":"YulBlock","src":"4886:567:22","statements":[{"body":{"nodeType":"YulBlock","src":"4932:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4941:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4944:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4934:6:22"},"nodeType":"YulFunctionCall","src":"4934:12:22"},"nodeType":"YulExpressionStatement","src":"4934:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"4916:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4903:3:22"},"nodeType":"YulFunctionCall","src":"4903:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"4928:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4899:3:22"},"nodeType":"YulFunctionCall","src":"4899:32:22"},"nodeType":"YulIf","src":"4896:52:22"},{"nodeType":"YulAssignment","src":"4957:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4986:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4967:18:22"},"nodeType":"YulFunctionCall","src":"4967:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4957:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"5005:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5036:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5047:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5032:3:22"},"nodeType":"YulFunctionCall","src":"5032:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5019:12:22"},"nodeType":"YulFunctionCall","src":"5019:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5009:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5060:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5070:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5064:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5115:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5124:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5127:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5117:6:22"},"nodeType":"YulFunctionCall","src":"5117:12:22"},"nodeType":"YulExpressionStatement","src":"5117:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5103:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5111:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5100:2:22"},"nodeType":"YulFunctionCall","src":"5100:14:22"},"nodeType":"YulIf","src":"5097:34:22"},{"nodeType":"YulVariableDeclaration","src":"5140:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5154:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5165:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5150:3:22"},"nodeType":"YulFunctionCall","src":"5150:22:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5144:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5220:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5229:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5232:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5222:6:22"},"nodeType":"YulFunctionCall","src":"5222:12:22"},"nodeType":"YulExpressionStatement","src":"5222:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5199:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"5203:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5195:3:22"},"nodeType":"YulFunctionCall","src":"5195:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5210:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5191:3:22"},"nodeType":"YulFunctionCall","src":"5191:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5184:6:22"},"nodeType":"YulFunctionCall","src":"5184:35:22"},"nodeType":"YulIf","src":"5181:55:22"},{"nodeType":"YulVariableDeclaration","src":"5245:30:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5272:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5259:12:22"},"nodeType":"YulFunctionCall","src":"5259:16:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5249:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5302:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5311:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5314:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5304:6:22"},"nodeType":"YulFunctionCall","src":"5304:12:22"},"nodeType":"YulExpressionStatement","src":"5304:12:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5290:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5298:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5287:2:22"},"nodeType":"YulFunctionCall","src":"5287:14:22"},"nodeType":"YulIf","src":"5284:34:22"},{"body":{"nodeType":"YulBlock","src":"5376:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5385:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5388:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5378:6:22"},"nodeType":"YulFunctionCall","src":"5378:12:22"},"nodeType":"YulExpressionStatement","src":"5378:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5341:2:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5349:1:22","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"5352:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5345:3:22"},"nodeType":"YulFunctionCall","src":"5345:14:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5337:3:22"},"nodeType":"YulFunctionCall","src":"5337:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5362:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5333:3:22"},"nodeType":"YulFunctionCall","src":"5333:32:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5367:7:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5330:2:22"},"nodeType":"YulFunctionCall","src":"5330:45:22"},"nodeType":"YulIf","src":"5327:65:22"},{"nodeType":"YulAssignment","src":"5401:21:22","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5415:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"5419:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5411:3:22"},"nodeType":"YulFunctionCall","src":"5411:11:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5401:6:22"}]},{"nodeType":"YulAssignment","src":"5431:16:22","value":{"name":"length","nodeType":"YulIdentifier","src":"5441:6:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5431:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4836:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4847:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4859:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4867:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4875:6:22","type":""}],"src":"4764:689:22"},{"body":{"nodeType":"YulBlock","src":"5528:110:22","statements":[{"body":{"nodeType":"YulBlock","src":"5574:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5583:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5586:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5576:6:22"},"nodeType":"YulFunctionCall","src":"5576:12:22"},"nodeType":"YulExpressionStatement","src":"5576:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5549:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5558:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5545:3:22"},"nodeType":"YulFunctionCall","src":"5545:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5570:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5541:3:22"},"nodeType":"YulFunctionCall","src":"5541:32:22"},"nodeType":"YulIf","src":"5538:52:22"},{"nodeType":"YulAssignment","src":"5599:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5622:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5609:12:22"},"nodeType":"YulFunctionCall","src":"5609:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5599:6:22"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5494:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5505:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5517:6:22","type":""}],"src":"5458:180:22"},{"body":{"nodeType":"YulBlock","src":"5685:76:22","statements":[{"body":{"nodeType":"YulBlock","src":"5739:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5748:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5751:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5741:6:22"},"nodeType":"YulFunctionCall","src":"5741:12:22"},"nodeType":"YulExpressionStatement","src":"5741:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5708:5:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5729:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5722:6:22"},"nodeType":"YulFunctionCall","src":"5722:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5715:6:22"},"nodeType":"YulFunctionCall","src":"5715:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5705:2:22"},"nodeType":"YulFunctionCall","src":"5705:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5698:6:22"},"nodeType":"YulFunctionCall","src":"5698:40:22"},"nodeType":"YulIf","src":"5695:60:22"}]},"name":"validator_revert_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5674:5:22","type":""}],"src":"5643:118:22"},{"body":{"nodeType":"YulBlock","src":"5850:231:22","statements":[{"body":{"nodeType":"YulBlock","src":"5896:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5905:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5908:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5898:6:22"},"nodeType":"YulFunctionCall","src":"5898:12:22"},"nodeType":"YulExpressionStatement","src":"5898:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5871:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5880:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5867:3:22"},"nodeType":"YulFunctionCall","src":"5867:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5892:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5863:3:22"},"nodeType":"YulFunctionCall","src":"5863:32:22"},"nodeType":"YulIf","src":"5860:52:22"},{"nodeType":"YulAssignment","src":"5921:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5950:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5931:18:22"},"nodeType":"YulFunctionCall","src":"5931:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5921:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"5969:45:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5999:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6010:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5995:3:22"},"nodeType":"YulFunctionCall","src":"5995:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5982:12:22"},"nodeType":"YulFunctionCall","src":"5982:32:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5973:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6045:5:22"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"6023:21:22"},"nodeType":"YulFunctionCall","src":"6023:28:22"},"nodeType":"YulExpressionStatement","src":"6023:28:22"},{"nodeType":"YulAssignment","src":"6060:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"6070:5:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6060:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5808:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5819:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5831:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5839:6:22","type":""}],"src":"5766:315:22"},{"body":{"nodeType":"YulBlock","src":"6216:537:22","statements":[{"body":{"nodeType":"YulBlock","src":"6263:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6272:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6275:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6265:6:22"},"nodeType":"YulFunctionCall","src":"6265:12:22"},"nodeType":"YulExpressionStatement","src":"6265:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6237:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6246:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6233:3:22"},"nodeType":"YulFunctionCall","src":"6233:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6258:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6229:3:22"},"nodeType":"YulFunctionCall","src":"6229:33:22"},"nodeType":"YulIf","src":"6226:53:22"},{"nodeType":"YulAssignment","src":"6288:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6317:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6298:18:22"},"nodeType":"YulFunctionCall","src":"6298:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6288:6:22"}]},{"nodeType":"YulAssignment","src":"6336:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6369:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6380:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6365:3:22"},"nodeType":"YulFunctionCall","src":"6365:18:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6346:18:22"},"nodeType":"YulFunctionCall","src":"6346:38:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6336:6:22"}]},{"nodeType":"YulAssignment","src":"6393:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6420:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6431:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6416:3:22"},"nodeType":"YulFunctionCall","src":"6416:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6403:12:22"},"nodeType":"YulFunctionCall","src":"6403:32:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6393:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"6444:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6475:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6486:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6471:3:22"},"nodeType":"YulFunctionCall","src":"6471:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6458:12:22"},"nodeType":"YulFunctionCall","src":"6458:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6448:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6533:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6542:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6545:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6535:6:22"},"nodeType":"YulFunctionCall","src":"6535:12:22"},"nodeType":"YulExpressionStatement","src":"6535:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6505:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6513:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6502:2:22"},"nodeType":"YulFunctionCall","src":"6502:30:22"},"nodeType":"YulIf","src":"6499:50:22"},{"nodeType":"YulVariableDeclaration","src":"6558:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6572:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"6583:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6568:3:22"},"nodeType":"YulFunctionCall","src":"6568:22:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6562:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6638:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6647:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6650:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6640:6:22"},"nodeType":"YulFunctionCall","src":"6640:12:22"},"nodeType":"YulExpressionStatement","src":"6640:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6617:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"6621:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6613:3:22"},"nodeType":"YulFunctionCall","src":"6613:13:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6628:7:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6609:3:22"},"nodeType":"YulFunctionCall","src":"6609:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6602:6:22"},"nodeType":"YulFunctionCall","src":"6602:35:22"},"nodeType":"YulIf","src":"6599:55:22"},{"nodeType":"YulAssignment","src":"6663:84:22","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6712:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"6716:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6708:3:22"},"nodeType":"YulFunctionCall","src":"6708:11:22"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"6734:2:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6721:12:22"},"nodeType":"YulFunctionCall","src":"6721:16:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6739:7:22"}],"functionName":{"name":"abi_decode_available_length_string","nodeType":"YulIdentifier","src":"6673:34:22"},"nodeType":"YulFunctionCall","src":"6673:74:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6663:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6158:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6169:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6181:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6189:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6197:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6205:6:22","type":""}],"src":"6086:667:22"},{"body":{"nodeType":"YulBlock","src":"6845:173:22","statements":[{"body":{"nodeType":"YulBlock","src":"6891:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6900:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6903:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6893:6:22"},"nodeType":"YulFunctionCall","src":"6893:12:22"},"nodeType":"YulExpressionStatement","src":"6893:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6866:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"6875:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6862:3:22"},"nodeType":"YulFunctionCall","src":"6862:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"6887:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6858:3:22"},"nodeType":"YulFunctionCall","src":"6858:32:22"},"nodeType":"YulIf","src":"6855:52:22"},{"nodeType":"YulAssignment","src":"6916:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6945:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6926:18:22"},"nodeType":"YulFunctionCall","src":"6926:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6916:6:22"}]},{"nodeType":"YulAssignment","src":"6964:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6997:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7008:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6993:3:22"},"nodeType":"YulFunctionCall","src":"6993:18:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6974:18:22"},"nodeType":"YulFunctionCall","src":"6974:38:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6964:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6803:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6814:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6826:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6834:6:22","type":""}],"src":"6758:260:22"},{"body":{"nodeType":"YulBlock","src":"7078:325:22","statements":[{"nodeType":"YulAssignment","src":"7088:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7102:1:22","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7105:4:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7098:3:22"},"nodeType":"YulFunctionCall","src":"7098:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7088:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"7119:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7149:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"7155:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7145:3:22"},"nodeType":"YulFunctionCall","src":"7145:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7123:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"7196:31:22","statements":[{"nodeType":"YulAssignment","src":"7198:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7212:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7220:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7208:3:22"},"nodeType":"YulFunctionCall","src":"7208:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7198:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7176:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7169:6:22"},"nodeType":"YulFunctionCall","src":"7169:26:22"},"nodeType":"YulIf","src":"7166:61:22"},{"body":{"nodeType":"YulBlock","src":"7286:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7307:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7314:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7319:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7310:3:22"},"nodeType":"YulFunctionCall","src":"7310:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7300:6:22"},"nodeType":"YulFunctionCall","src":"7300:31:22"},"nodeType":"YulExpressionStatement","src":"7300:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7351:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7354:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7344:6:22"},"nodeType":"YulFunctionCall","src":"7344:15:22"},"nodeType":"YulExpressionStatement","src":"7344:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7379:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7382:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7372:6:22"},"nodeType":"YulFunctionCall","src":"7372:15:22"},"nodeType":"YulExpressionStatement","src":"7372:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7242:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7265:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"7273:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7262:2:22"},"nodeType":"YulFunctionCall","src":"7262:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7239:2:22"},"nodeType":"YulFunctionCall","src":"7239:38:22"},"nodeType":"YulIf","src":"7236:161:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7058:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7067:6:22","type":""}],"src":"7023:380:22"},{"body":{"nodeType":"YulBlock","src":"7565:218:22","statements":[{"nodeType":"YulAssignment","src":"7575:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7587:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7598:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7583:3:22"},"nodeType":"YulFunctionCall","src":"7583:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7575:4:22"}]},{"nodeType":"YulVariableDeclaration","src":"7610:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7628:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7633:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7624:3:22"},"nodeType":"YulFunctionCall","src":"7624:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"7637:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7620:3:22"},"nodeType":"YulFunctionCall","src":"7620:19:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7614:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7655:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7670:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"7678:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7666:3:22"},"nodeType":"YulFunctionCall","src":"7666:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7648:6:22"},"nodeType":"YulFunctionCall","src":"7648:34:22"},"nodeType":"YulExpressionStatement","src":"7648:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7702:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7713:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7698:3:22"},"nodeType":"YulFunctionCall","src":"7698:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"7718:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7691:6:22"},"nodeType":"YulFunctionCall","src":"7691:34:22"},"nodeType":"YulExpressionStatement","src":"7691:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7745:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7756:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7741:3:22"},"nodeType":"YulFunctionCall","src":"7741:18:22"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7765:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"7773:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7761:3:22"},"nodeType":"YulFunctionCall","src":"7761:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7734:6:22"},"nodeType":"YulFunctionCall","src":"7734:43:22"},"nodeType":"YulExpressionStatement","src":"7734:43:22"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7518:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7529:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7537:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7545:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7556:4:22","type":""}],"src":"7408:375:22"},{"body":{"nodeType":"YulBlock","src":"7962:231:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7979:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7990:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7972:6:22"},"nodeType":"YulFunctionCall","src":"7972:21:22"},"nodeType":"YulExpressionStatement","src":"7972:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8013:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8024:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8009:3:22"},"nodeType":"YulFunctionCall","src":"8009:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"8029:2:22","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8002:6:22"},"nodeType":"YulFunctionCall","src":"8002:30:22"},"nodeType":"YulExpressionStatement","src":"8002:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8052:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8063:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8048:3:22"},"nodeType":"YulFunctionCall","src":"8048:18:22"},{"hexValue":"536f756c626f756e644e46543a20517565727920666f72206e6f6e6578697374","kind":"string","nodeType":"YulLiteral","src":"8068:34:22","type":"","value":"SoulboundNFT: Query for nonexist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8041:6:22"},"nodeType":"YulFunctionCall","src":"8041:62:22"},"nodeType":"YulExpressionStatement","src":"8041:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8123:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8134:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8119:3:22"},"nodeType":"YulFunctionCall","src":"8119:18:22"},{"hexValue":"656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"8139:11:22","type":"","value":"ent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8112:6:22"},"nodeType":"YulFunctionCall","src":"8112:39:22"},"nodeType":"YulExpressionStatement","src":"8112:39:22"},{"nodeType":"YulAssignment","src":"8160:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8172:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8183:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8168:3:22"},"nodeType":"YulFunctionCall","src":"8168:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8160:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_6c1335588a0b088cfb2ec509a8b78ba3968dfbda211a2f2fbf5b29ed2bd7748d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7939:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7953:4:22","type":""}],"src":"7788:405:22"},{"body":{"nodeType":"YulBlock","src":"8254:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8271:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8274:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8264:6:22"},"nodeType":"YulFunctionCall","src":"8264:14:22"},"nodeType":"YulExpressionStatement","src":"8264:14:22"},{"nodeType":"YulAssignment","src":"8287:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8305:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8308:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8295:9:22"},"nodeType":"YulFunctionCall","src":"8295:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8287:4:22"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8237:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8245:4:22","type":""}],"src":"8198:121:22"},{"body":{"nodeType":"YulBlock","src":"8405:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"8438:425:22","statements":[{"nodeType":"YulVariableDeclaration","src":"8452:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"8462:1:22","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8456:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8483:2:22"},{"name":"array","nodeType":"YulIdentifier","src":"8487:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8476:6:22"},"nodeType":"YulFunctionCall","src":"8476:17:22"},"nodeType":"YulExpressionStatement","src":"8476:17:22"},{"nodeType":"YulVariableDeclaration","src":"8506:31:22","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8528:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"8532:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8518:9:22"},"nodeType":"YulFunctionCall","src":"8518:19:22"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"8510:4:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8550:57:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8573:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8583:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8590:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"8602:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8586:3:22"},"nodeType":"YulFunctionCall","src":"8586:19:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8579:3:22"},"nodeType":"YulFunctionCall","src":"8579:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8569:3:22"},"nodeType":"YulFunctionCall","src":"8569:38:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8554:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8644:23:22","statements":[{"nodeType":"YulAssignment","src":"8646:19:22","value":{"name":"data","nodeType":"YulIdentifier","src":"8661:4:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8646:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8626:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"8638:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8623:2:22"},"nodeType":"YulFunctionCall","src":"8623:20:22"},"nodeType":"YulIf","src":"8620:47:22"},{"nodeType":"YulVariableDeclaration","src":"8680:41:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8694:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8704:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8711:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8716:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8707:3:22"},"nodeType":"YulFunctionCall","src":"8707:12:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8700:3:22"},"nodeType":"YulFunctionCall","src":"8700:20:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8690:3:22"},"nodeType":"YulFunctionCall","src":"8690:31:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8684:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8734:24:22","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"8747:11:22"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"8738:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8832:21:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8841:5:22"},{"name":"_1","nodeType":"YulIdentifier","src":"8848:2:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8834:6:22"},"nodeType":"YulFunctionCall","src":"8834:17:22"},"nodeType":"YulExpressionStatement","src":"8834:17:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8782:5:22"},{"name":"_2","nodeType":"YulIdentifier","src":"8789:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8779:2:22"},"nodeType":"YulFunctionCall","src":"8779:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8793:26:22","statements":[{"nodeType":"YulAssignment","src":"8795:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8808:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"8815:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8804:3:22"},"nodeType":"YulFunctionCall","src":"8804:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8795:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"8775:3:22","statements":[]},"src":"8771:82:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8421:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"8426:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8418:2:22"},"nodeType":"YulFunctionCall","src":"8418:11:22"},"nodeType":"YulIf","src":"8415:448:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8377:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"8384:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8389:10:22","type":""}],"src":"8324:545:22"},{"body":{"nodeType":"YulBlock","src":"8959:81:22","statements":[{"nodeType":"YulAssignment","src":"8969:65:22","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8984:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9002:1:22","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"9005:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8998:3:22"},"nodeType":"YulFunctionCall","src":"8998:11:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9015:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9011:3:22"},"nodeType":"YulFunctionCall","src":"9011:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8994:3:22"},"nodeType":"YulFunctionCall","src":"8994:24:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8990:3:22"},"nodeType":"YulFunctionCall","src":"8990:29:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8980:3:22"},"nodeType":"YulFunctionCall","src":"8980:40:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9026:1:22","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"9029:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9022:3:22"},"nodeType":"YulFunctionCall","src":"9022:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8977:2:22"},"nodeType":"YulFunctionCall","src":"8977:57:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"8969:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8936:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"8942:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"8950:4:22","type":""}],"src":"8874:166:22"},{"body":{"nodeType":"YulBlock","src":"9141:1256:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9151:24:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9171:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9165:5:22"},"nodeType":"YulFunctionCall","src":"9165:10:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9155:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9218:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9220:16:22"},"nodeType":"YulFunctionCall","src":"9220:18:22"},"nodeType":"YulExpressionStatement","src":"9220:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9190:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9198:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9187:2:22"},"nodeType":"YulFunctionCall","src":"9187:30:22"},"nodeType":"YulIf","src":"9184:56:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9293:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9331:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9325:5:22"},"nodeType":"YulFunctionCall","src":"9325:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9299:25:22"},"nodeType":"YulFunctionCall","src":"9299:38:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"9339:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"9249:43:22"},"nodeType":"YulFunctionCall","src":"9249:97:22"},"nodeType":"YulExpressionStatement","src":"9249:97:22"},{"nodeType":"YulVariableDeclaration","src":"9355:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9372:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9359:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9382:23:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9401:4:22","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"9386:11:22","type":""}]},{"nodeType":"YulAssignment","src":"9414:24:22","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9427:11:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9414:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9484:656:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9498:35:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9517:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9529:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9525:3:22"},"nodeType":"YulFunctionCall","src":"9525:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9513:3:22"},"nodeType":"YulFunctionCall","src":"9513:20:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9502:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9546:49:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9590:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"9560:29:22"},"nodeType":"YulFunctionCall","src":"9560:35:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9550:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9608:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9617:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9612:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"9695:172:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9720:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9738:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9743:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9734:3:22"},"nodeType":"YulFunctionCall","src":"9734:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9728:5:22"},"nodeType":"YulFunctionCall","src":"9728:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9713:6:22"},"nodeType":"YulFunctionCall","src":"9713:42:22"},"nodeType":"YulExpressionStatement","src":"9713:42:22"},{"nodeType":"YulAssignment","src":"9772:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9786:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9794:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9782:3:22"},"nodeType":"YulFunctionCall","src":"9782:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9772:6:22"}]},{"nodeType":"YulAssignment","src":"9813:40:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9830:9:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9841:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9826:3:22"},"nodeType":"YulFunctionCall","src":"9826:27:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9813:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9642:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9645:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9639:2:22"},"nodeType":"YulFunctionCall","src":"9639:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9654:28:22","statements":[{"nodeType":"YulAssignment","src":"9656:24:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9665:1:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"9668:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9661:3:22"},"nodeType":"YulFunctionCall","src":"9661:19:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9656:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"9635:3:22","statements":[]},"src":"9631:236:22"},{"body":{"nodeType":"YulBlock","src":"9915:166:22","statements":[{"nodeType":"YulVariableDeclaration","src":"9933:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9960:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9965:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9956:3:22"},"nodeType":"YulFunctionCall","src":"9956:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9950:5:22"},"nodeType":"YulFunctionCall","src":"9950:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9937:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10000:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10012:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10039:1:22","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"10042:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10035:3:22"},"nodeType":"YulFunctionCall","src":"10035:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"10051:3:22","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10031:3:22"},"nodeType":"YulFunctionCall","src":"10031:24:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10061:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10057:3:22"},"nodeType":"YulFunctionCall","src":"10057:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"10027:3:22"},"nodeType":"YulFunctionCall","src":"10027:37:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10023:3:22"},"nodeType":"YulFunctionCall","src":"10023:42:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10008:3:22"},"nodeType":"YulFunctionCall","src":"10008:58:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9993:6:22"},"nodeType":"YulFunctionCall","src":"9993:74:22"},"nodeType":"YulExpressionStatement","src":"9993:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9886:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"9895:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9883:2:22"},"nodeType":"YulFunctionCall","src":"9883:19:22"},"nodeType":"YulIf","src":"9880:201:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10101:4:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10115:1:22","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"10118:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10111:3:22"},"nodeType":"YulFunctionCall","src":"10111:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"10127:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10107:3:22"},"nodeType":"YulFunctionCall","src":"10107:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10094:6:22"},"nodeType":"YulFunctionCall","src":"10094:36:22"},"nodeType":"YulExpressionStatement","src":"10094:36:22"}]},"nodeType":"YulCase","src":"9477:663:22","value":{"kind":"number","nodeType":"YulLiteral","src":"9482:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10157:234:22","statements":[{"nodeType":"YulVariableDeclaration","src":"10171:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"10184:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10175:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"10220:67:22","statements":[{"nodeType":"YulAssignment","src":"10238:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10257:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10262:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10253:3:22"},"nodeType":"YulFunctionCall","src":"10253:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10247:5:22"},"nodeType":"YulFunctionCall","src":"10247:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10238:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10201:6:22"},"nodeType":"YulIf","src":"10198:89:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10307:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10366:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"10373:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10313:52:22"},"nodeType":"YulFunctionCall","src":"10313:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10300:6:22"},"nodeType":"YulFunctionCall","src":"10300:81:22"},"nodeType":"YulExpressionStatement","src":"10300:81:22"}]},"nodeType":"YulCase","src":"10149:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9457:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"9465:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9454:2:22"},"nodeType":"YulFunctionCall","src":"9454:14:22"},"nodeType":"YulSwitch","src":"9447:944:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9126:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"9132:3:22","type":""}],"src":"9045:1352:22"},{"body":{"nodeType":"YulBlock","src":"10480:167:22","statements":[{"body":{"nodeType":"YulBlock","src":"10526:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10535:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10538:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10528:6:22"},"nodeType":"YulFunctionCall","src":"10528:12:22"},"nodeType":"YulExpressionStatement","src":"10528:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10501:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"10510:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10497:3:22"},"nodeType":"YulFunctionCall","src":"10497:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"10522:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10493:3:22"},"nodeType":"YulFunctionCall","src":"10493:32:22"},"nodeType":"YulIf","src":"10490:52:22"},{"nodeType":"YulVariableDeclaration","src":"10551:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10570:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10564:5:22"},"nodeType":"YulFunctionCall","src":"10564:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10555:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10611:5:22"}],"functionName":{"name":"validator_revert_bool","nodeType":"YulIdentifier","src":"10589:21:22"},"nodeType":"YulFunctionCall","src":"10589:28:22"},"nodeType":"YulExpressionStatement","src":"10589:28:22"},{"nodeType":"YulAssignment","src":"10626:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"10636:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10626:6:22"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10446:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10457:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10469:6:22","type":""}],"src":"10402:245:22"},{"body":{"nodeType":"YulBlock","src":"10826:235:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10843:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10854:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10836:6:22"},"nodeType":"YulFunctionCall","src":"10836:21:22"},"nodeType":"YulExpressionStatement","src":"10836:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10877:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10888:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10873:3:22"},"nodeType":"YulFunctionCall","src":"10873:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"10893:2:22","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10866:6:22"},"nodeType":"YulFunctionCall","src":"10866:30:22"},"nodeType":"YulExpressionStatement","src":"10866:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10916:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10927:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10912:3:22"},"nodeType":"YulFunctionCall","src":"10912:18:22"},{"hexValue":"536f756c626f756e644e46543a2043616c6c6572206973206e6f742061207665","kind":"string","nodeType":"YulLiteral","src":"10932:34:22","type":"","value":"SoulboundNFT: Caller is not a ve"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10905:6:22"},"nodeType":"YulFunctionCall","src":"10905:62:22"},"nodeType":"YulExpressionStatement","src":"10905:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10987:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10998:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10983:3:22"},"nodeType":"YulFunctionCall","src":"10983:18:22"},{"hexValue":"72696669656420697373756572","kind":"string","nodeType":"YulLiteral","src":"11003:15:22","type":"","value":"rified issuer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10976:6:22"},"nodeType":"YulFunctionCall","src":"10976:43:22"},"nodeType":"YulExpressionStatement","src":"10976:43:22"},{"nodeType":"YulAssignment","src":"11028:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11040:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11051:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11036:3:22"},"nodeType":"YulFunctionCall","src":"11036:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11028:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_9d3f96f548042c9595ab469641935100bddfeff4ab1cebebda7ce0b95f6428f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10803:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10817:4:22","type":""}],"src":"10652:409:22"},{"body":{"nodeType":"YulBlock","src":"11240:229:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11257:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11268:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11250:6:22"},"nodeType":"YulFunctionCall","src":"11250:21:22"},"nodeType":"YulExpressionStatement","src":"11250:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11291:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11302:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11287:3:22"},"nodeType":"YulFunctionCall","src":"11287:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"11307:2:22","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11280:6:22"},"nodeType":"YulFunctionCall","src":"11280:30:22"},"nodeType":"YulExpressionStatement","src":"11280:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11330:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11341:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11326:3:22"},"nodeType":"YulFunctionCall","src":"11326:18:22"},{"hexValue":"536f756c626f756e644e46543a20526563697069656e74206973206e6f742065","kind":"string","nodeType":"YulLiteral","src":"11346:34:22","type":"","value":"SoulboundNFT: Recipient is not e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11319:6:22"},"nodeType":"YulFunctionCall","src":"11319:62:22"},"nodeType":"YulExpressionStatement","src":"11319:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11401:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11412:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11397:3:22"},"nodeType":"YulFunctionCall","src":"11397:18:22"},{"hexValue":"6c696769626c65","kind":"string","nodeType":"YulLiteral","src":"11417:9:22","type":"","value":"ligible"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11390:6:22"},"nodeType":"YulFunctionCall","src":"11390:37:22"},"nodeType":"YulExpressionStatement","src":"11390:37:22"},{"nodeType":"YulAssignment","src":"11436:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11448:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"11459:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11444:3:22"},"nodeType":"YulFunctionCall","src":"11444:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11436:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a9b695377a749f7cd285668aa31af220b788a29aa468bc36431ca063f552c39__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11217:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11231:4:22","type":""}],"src":"11066:403:22"},{"body":{"nodeType":"YulBlock","src":"11570:179:22","statements":[{"body":{"nodeType":"YulBlock","src":"11616:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11625:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11628:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11618:6:22"},"nodeType":"YulFunctionCall","src":"11618:12:22"},"nodeType":"YulExpressionStatement","src":"11618:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11591:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"11600:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11587:3:22"},"nodeType":"YulFunctionCall","src":"11587:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"11612:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11583:3:22"},"nodeType":"YulFunctionCall","src":"11583:32:22"},"nodeType":"YulIf","src":"11580:52:22"},{"nodeType":"YulVariableDeclaration","src":"11641:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11660:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11654:5:22"},"nodeType":"YulFunctionCall","src":"11654:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11645:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"11703:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11712:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11715:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11705:6:22"},"nodeType":"YulFunctionCall","src":"11705:12:22"},"nodeType":"YulExpressionStatement","src":"11705:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11692:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11699:1:22","type":"","value":"4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11689:2:22"},"nodeType":"YulFunctionCall","src":"11689:12:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11682:6:22"},"nodeType":"YulFunctionCall","src":"11682:20:22"},"nodeType":"YulIf","src":"11679:40:22"},{"nodeType":"YulAssignment","src":"11728:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"11738:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11728:6:22"}]}]},"name":"abi_decode_tuple_t_enum$_IssuerTier_$7919_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11536:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11547:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11559:6:22","type":""}],"src":"11474:275:22"},{"body":{"nodeType":"YulBlock","src":"11801:185:22","statements":[{"body":{"nodeType":"YulBlock","src":"11840:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11861:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11868:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"11873:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11864:3:22"},"nodeType":"YulFunctionCall","src":"11864:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11854:6:22"},"nodeType":"YulFunctionCall","src":"11854:31:22"},"nodeType":"YulExpressionStatement","src":"11854:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11905:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11908:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11898:6:22"},"nodeType":"YulFunctionCall","src":"11898:15:22"},"nodeType":"YulExpressionStatement","src":"11898:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11933:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11936:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11926:6:22"},"nodeType":"YulFunctionCall","src":"11926:15:22"},"nodeType":"YulExpressionStatement","src":"11926:15:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11817:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11828:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11824:3:22"},"nodeType":"YulFunctionCall","src":"11824:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11814:2:22"},"nodeType":"YulFunctionCall","src":"11814:17:22"},"nodeType":"YulIf","src":"11811:140:22"},{"nodeType":"YulAssignment","src":"11960:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11971:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11978:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11967:3:22"},"nodeType":"YulFunctionCall","src":"11967:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"11960:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11783:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"11793:3:22","type":""}],"src":"11754:232:22"},{"body":{"nodeType":"YulBlock","src":"12023:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12040:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12047:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"12052:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12043:3:22"},"nodeType":"YulFunctionCall","src":"12043:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12033:6:22"},"nodeType":"YulFunctionCall","src":"12033:31:22"},"nodeType":"YulExpressionStatement","src":"12033:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12080:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12083:4:22","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12073:6:22"},"nodeType":"YulFunctionCall","src":"12073:15:22"},"nodeType":"YulExpressionStatement","src":"12073:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12104:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12107:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12097:6:22"},"nodeType":"YulFunctionCall","src":"12097:15:22"},"nodeType":"YulExpressionStatement","src":"12097:15:22"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11991:127:22"},{"body":{"nodeType":"YulBlock","src":"12307:836:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12317:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12328:1:22","type":"","value":"0"},"variables":[{"name":"ret","nodeType":"YulTypedName","src":"12321:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12338:30:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12361:6:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12355:5:22"},"nodeType":"YulFunctionCall","src":"12355:13:22"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"12342:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12377:50:22","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12417:9:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12391:25:22"},"nodeType":"YulFunctionCall","src":"12391:36:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12381:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12436:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12446:1:22","type":"","value":"1"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12440:2:22","type":""}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12497:126:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12518:3:22"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12527:9:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12542:3:22","type":"","value":"255"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12538:3:22"},"nodeType":"YulFunctionCall","src":"12538:8:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12523:3:22"},"nodeType":"YulFunctionCall","src":"12523:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12511:6:22"},"nodeType":"YulFunctionCall","src":"12511:37:22"},"nodeType":"YulExpressionStatement","src":"12511:37:22"},{"nodeType":"YulAssignment","src":"12561:52:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12572:3:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12581:6:22"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12603:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12596:6:22"},"nodeType":"YulFunctionCall","src":"12596:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12589:6:22"},"nodeType":"YulFunctionCall","src":"12589:22:22"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"12577:3:22"},"nodeType":"YulFunctionCall","src":"12577:35:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12568:3:22"},"nodeType":"YulFunctionCall","src":"12568:45:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12561:3:22"}]}]},"nodeType":"YulCase","src":"12490:133:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12495:1:22","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"12639:349:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12660:1:22","type":"","value":"0"},{"name":"value0","nodeType":"YulIdentifier","src":"12663:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12653:6:22"},"nodeType":"YulFunctionCall","src":"12653:17:22"},"nodeType":"YulExpressionStatement","src":"12653:17:22"},{"nodeType":"YulVariableDeclaration","src":"12683:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12693:4:22","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"12687:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12710:31:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12735:1:22","type":"","value":"0"},{"name":"_2","nodeType":"YulIdentifier","src":"12738:2:22"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"12725:9:22"},"nodeType":"YulFunctionCall","src":"12725:16:22"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"12714:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12754:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12763:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12758:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"12831:111:22","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12860:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"12865:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12856:3:22"},"nodeType":"YulFunctionCall","src":"12856:11:22"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"12875:7:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12869:5:22"},"nodeType":"YulFunctionCall","src":"12869:14:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12849:6:22"},"nodeType":"YulFunctionCall","src":"12849:35:22"},"nodeType":"YulExpressionStatement","src":"12849:35:22"},{"nodeType":"YulAssignment","src":"12901:27:22","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"12916:7:22"},{"name":"_1","nodeType":"YulIdentifier","src":"12925:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12912:3:22"},"nodeType":"YulFunctionCall","src":"12912:16:22"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"12901:7:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12788:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"12791:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12785:2:22"},"nodeType":"YulFunctionCall","src":"12785:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12799:19:22","statements":[{"nodeType":"YulAssignment","src":"12801:15:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12810:1:22"},{"name":"_2","nodeType":"YulIdentifier","src":"12813:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12806:3:22"},"nodeType":"YulFunctionCall","src":"12806:10:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12801:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"12781:3:22","statements":[]},"src":"12777:165:22"},{"nodeType":"YulAssignment","src":"12955:23:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12966:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"12971:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12962:3:22"},"nodeType":"YulFunctionCall","src":"12962:16:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12955:3:22"}]}]},"nodeType":"YulCase","src":"12632:356:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12637:1:22","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"12467:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"12478:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12463:3:22"},"nodeType":"YulFunctionCall","src":"12463:18:22"},"nodeType":"YulSwitch","src":"12456:532:22"},{"nodeType":"YulVariableDeclaration","src":"12997:29:22","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13019:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13013:5:22"},"nodeType":"YulFunctionCall","src":"13013:13:22"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"13001:8:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13074:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13082:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13070:3:22"},"nodeType":"YulFunctionCall","src":"13070:17:22"},{"name":"ret","nodeType":"YulIdentifier","src":"13089:3:22"},{"name":"length_1","nodeType":"YulIdentifier","src":"13094:8:22"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13035:34:22"},"nodeType":"YulFunctionCall","src":"13035:68:22"},"nodeType":"YulExpressionStatement","src":"13035:68:22"},{"nodeType":"YulAssignment","src":"13112:25:22","value":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"13123:3:22"},{"name":"length_1","nodeType":"YulIdentifier","src":"13128:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13119:3:22"},"nodeType":"YulFunctionCall","src":"13119:18:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13112:3:22"}]}]},"name":"abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12275:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12280:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12288:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12299:3:22","type":""}],"src":"12123:1020:22"},{"body":{"nodeType":"YulBlock","src":"13322:235:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13339:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13350:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13332:6:22"},"nodeType":"YulFunctionCall","src":"13332:21:22"},"nodeType":"YulExpressionStatement","src":"13332:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13373:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13384:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13369:3:22"},"nodeType":"YulFunctionCall","src":"13369:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"13389:2:22","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13362:6:22"},"nodeType":"YulFunctionCall","src":"13362:30:22"},"nodeType":"YulExpressionStatement","src":"13362:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13412:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13423:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13408:3:22"},"nodeType":"YulFunctionCall","src":"13408:18:22"},{"hexValue":"536f756c626f756e644e46543a2055524920717565727920666f72206e6f6e65","kind":"string","nodeType":"YulLiteral","src":"13428:34:22","type":"","value":"SoulboundNFT: URI query for none"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13401:6:22"},"nodeType":"YulFunctionCall","src":"13401:62:22"},"nodeType":"YulExpressionStatement","src":"13401:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13483:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13494:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13479:3:22"},"nodeType":"YulFunctionCall","src":"13479:18:22"},{"hexValue":"78697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"13499:15:22","type":"","value":"xistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13472:6:22"},"nodeType":"YulFunctionCall","src":"13472:43:22"},"nodeType":"YulExpressionStatement","src":"13472:43:22"},{"nodeType":"YulAssignment","src":"13524:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13536:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13547:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13532:3:22"},"nodeType":"YulFunctionCall","src":"13532:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_65c7ee8c8d90e7395d98b82afea606dddab7e7698cc9b9c4e7133434bd941fec__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13299:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13313:4:22","type":""}],"src":"13148:409:22"},{"body":{"nodeType":"YulBlock","src":"13765:286:22","statements":[{"nodeType":"YulVariableDeclaration","src":"13775:29:22","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13793:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13798:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13789:3:22"},"nodeType":"YulFunctionCall","src":"13789:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"13802:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13785:3:22"},"nodeType":"YulFunctionCall","src":"13785:19:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"13779:2:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13820:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13835:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"13843:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13831:3:22"},"nodeType":"YulFunctionCall","src":"13831:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13813:6:22"},"nodeType":"YulFunctionCall","src":"13813:34:22"},"nodeType":"YulExpressionStatement","src":"13813:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13867:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13878:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13863:3:22"},"nodeType":"YulFunctionCall","src":"13863:18:22"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13887:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"13895:2:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13883:3:22"},"nodeType":"YulFunctionCall","src":"13883:15:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13856:6:22"},"nodeType":"YulFunctionCall","src":"13856:43:22"},"nodeType":"YulExpressionStatement","src":"13856:43:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13919:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13930:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13915:3:22"},"nodeType":"YulFunctionCall","src":"13915:18:22"},{"name":"value2","nodeType":"YulIdentifier","src":"13935:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13908:6:22"},"nodeType":"YulFunctionCall","src":"13908:34:22"},"nodeType":"YulExpressionStatement","src":"13908:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13962:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13973:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13958:3:22"},"nodeType":"YulFunctionCall","src":"13958:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"13978:3:22","type":"","value":"128"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13951:6:22"},"nodeType":"YulFunctionCall","src":"13951:31:22"},"nodeType":"YulExpressionStatement","src":"13951:31:22"},{"nodeType":"YulAssignment","src":"13991:54:22","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"14017:6:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14029:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"14040:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14025:3:22"},"nodeType":"YulFunctionCall","src":"14025:19:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13999:17:22"},"nodeType":"YulFunctionCall","src":"13999:46:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13991:4:22"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13710:9:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"13721:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13729:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13737:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13745:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13756:4:22","type":""}],"src":"13562:489:22"},{"body":{"nodeType":"YulBlock","src":"14136:169:22","statements":[{"body":{"nodeType":"YulBlock","src":"14182:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14191:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14194:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14184:6:22"},"nodeType":"YulFunctionCall","src":"14184:12:22"},"nodeType":"YulExpressionStatement","src":"14184:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14157:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"14166:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14153:3:22"},"nodeType":"YulFunctionCall","src":"14153:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"14178:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14149:3:22"},"nodeType":"YulFunctionCall","src":"14149:32:22"},"nodeType":"YulIf","src":"14146:52:22"},{"nodeType":"YulVariableDeclaration","src":"14207:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14226:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14220:5:22"},"nodeType":"YulFunctionCall","src":"14220:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14211:5:22","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14269:5:22"}],"functionName":{"name":"validator_revert_bytes4","nodeType":"YulIdentifier","src":"14245:23:22"},"nodeType":"YulFunctionCall","src":"14245:30:22"},"nodeType":"YulExpressionStatement","src":"14245:30:22"},{"nodeType":"YulAssignment","src":"14284:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"14294:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14284:6:22"}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14102:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14113:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14125:6:22","type":""}],"src":"14056:249:22"},{"body":{"nodeType":"YulBlock","src":"14429:110:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14446:3:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14459:2:22","type":"","value":"96"},{"name":"value0","nodeType":"YulIdentifier","src":"14463:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14455:3:22"},"nodeType":"YulFunctionCall","src":"14455:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14476:26:22","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"14472:3:22"},"nodeType":"YulFunctionCall","src":"14472:31:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14451:3:22"},"nodeType":"YulFunctionCall","src":"14451:53:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14439:6:22"},"nodeType":"YulFunctionCall","src":"14439:66:22"},"nodeType":"YulExpressionStatement","src":"14439:66:22"},{"nodeType":"YulAssignment","src":"14514:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14525:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"14530:2:22","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14521:3:22"},"nodeType":"YulFunctionCall","src":"14521:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14514:3:22"}]}]},"name":"abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14405:3:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14410:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14421:3:22","type":""}],"src":"14310:229:22"},{"body":{"nodeType":"YulBlock","src":"14576:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14593:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14600:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14605:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14596:3:22"},"nodeType":"YulFunctionCall","src":"14596:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14586:6:22"},"nodeType":"YulFunctionCall","src":"14586:31:22"},"nodeType":"YulExpressionStatement","src":"14586:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14633:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14636:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14626:6:22"},"nodeType":"YulFunctionCall","src":"14626:15:22"},"nodeType":"YulExpressionStatement","src":"14626:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14657:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14660:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14650:6:22"},"nodeType":"YulFunctionCall","src":"14650:15:22"},"nodeType":"YulExpressionStatement","src":"14650:15:22"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14544:127:22"},{"body":{"nodeType":"YulBlock","src":"14823:100:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14840:3:22"},{"name":"value0","nodeType":"YulIdentifier","src":"14845:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14833:6:22"},"nodeType":"YulFunctionCall","src":"14833:19:22"},"nodeType":"YulExpressionStatement","src":"14833:19:22"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14872:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"14877:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14868:3:22"},"nodeType":"YulFunctionCall","src":"14868:12:22"},{"name":"value1","nodeType":"YulIdentifier","src":"14882:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14861:6:22"},"nodeType":"YulFunctionCall","src":"14861:28:22"},"nodeType":"YulExpressionStatement","src":"14861:28:22"},{"nodeType":"YulAssignment","src":"14898:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14909:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"14914:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14905:3:22"},"nodeType":"YulFunctionCall","src":"14905:12:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14898:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14791:3:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14796:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14804:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14815:3:22","type":""}],"src":"14676:247:22"},{"body":{"nodeType":"YulBlock","src":"14960:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14977:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14984:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"14989:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"14980:3:22"},"nodeType":"YulFunctionCall","src":"14980:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14970:6:22"},"nodeType":"YulFunctionCall","src":"14970:31:22"},"nodeType":"YulExpressionStatement","src":"14970:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15017:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15020:4:22","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15010:6:22"},"nodeType":"YulFunctionCall","src":"15010:15:22"},"nodeType":"YulExpressionStatement","src":"15010:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15041:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15044:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15034:6:22"},"nodeType":"YulFunctionCall","src":"15034:15:22"},"nodeType":"YulExpressionStatement","src":"15034:15:22"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"14928:127:22"},{"body":{"nodeType":"YulBlock","src":"15189:145:22","statements":[{"nodeType":"YulAssignment","src":"15199:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15211:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15222:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15207:3:22"},"nodeType":"YulFunctionCall","src":"15207:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15199:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15241:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15256:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15272:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"15277:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"15268:3:22"},"nodeType":"YulFunctionCall","src":"15268:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"15281:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15264:3:22"},"nodeType":"YulFunctionCall","src":"15264:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15252:3:22"},"nodeType":"YulFunctionCall","src":"15252:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15234:6:22"},"nodeType":"YulFunctionCall","src":"15234:51:22"},"nodeType":"YulExpressionStatement","src":"15234:51:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15305:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"15316:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15301:3:22"},"nodeType":"YulFunctionCall","src":"15301:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"15321:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15294:6:22"},"nodeType":"YulFunctionCall","src":"15294:34:22"},"nodeType":"YulExpressionStatement","src":"15294:34:22"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15150:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15161:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15169:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15180:4:22","type":""}],"src":"15060:274:22"}]},"contents":"{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_t_uint8_t_string_memory_ptr_t_uint256__to_t_address_t_uint8_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), 128)\n        tail := abi_encode_string(value2, add(headStart, 128))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value0 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_6c1335588a0b088cfb2ec509a8b78ba3968dfbda211a2f2fbf5b29ed2bd7748d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"SoulboundNFT: Query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9d3f96f548042c9595ab469641935100bddfeff4ab1cebebda7ce0b95f6428f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"SoulboundNFT: Caller is not a ve\")\n        mstore(add(headStart, 96), \"rified issuer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3a9b695377a749f7cd285668aa31af220b788a29aa468bc36431ca063f552c39__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"SoulboundNFT: Recipient is not e\")\n        mstore(add(headStart, 96), \"ligible\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_enum$_IssuerTier_$7919_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(lt(value, 4)) { revert(0, 0) }\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_string_storage_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, _1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, _2)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), ret, length_1)\n        end := add(ret, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_65c7ee8c8d90e7395d98b82afea606dddab7e7698cc9b9c4e7133434bd941fec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"SoulboundNFT: URI query for none\")\n        mstore(add(headStart, 96), \"xistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 20)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        end := add(pos, 64)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7BF32270 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xEE3DE9C5 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xC18B065E EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xC4B3D052 EQ PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7BF32270 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x7CB64759 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xA4E2EE11 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42842E0E GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x49590657 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x31494BBB EQ PUSH2 0x208 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x154C JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1608 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x497 JUMP JUMPDEST PUSH2 0x21B PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x197 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x166E JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x1632 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST PUSH1 0x9 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x197 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x1738 JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x720 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1830 JUMP JUMPDEST PUSH2 0x72F JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x73A JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0x1867 JUMP JUMPDEST PUSH2 0x77D JUMP JUMPDEST PUSH2 0x18B PUSH2 0x317 CALLDATASIZE PUSH1 0x4 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x795 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x179C JUMP JUMPDEST PUSH2 0x827 JUMP JUMPDEST PUSH2 0x1A8 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0xB1B JUMP JUMPDEST PUSH2 0x18B PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x363 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0xC57 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x376 CALLDATASIZE PUSH1 0x4 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0xC94 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3C7 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3DC SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x408 SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x455 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x455 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x438 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46A DUP3 PUSH2 0xCD2 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3C7 JUMP JUMPDEST PUSH2 0x493 DUP3 DUP3 CALLER PUSH2 0xD0B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4D3 DUP4 DUP4 CALLER PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH2 0x537 DUP6 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP2 SWAP3 DUP5 ADD SWAP2 PUSH2 0x59F SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5CB SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x618 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5ED JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x618 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5FB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 SWAP2 DUP3 ADD MSTORE DUP3 MLOAD SWAP2 DUP4 ADD MLOAD SWAP1 DUP4 ADD MLOAD PUSH1 0x60 SWAP1 SWAP4 ADD MLOAD SWAP2 SWAP10 SWAP1 SWAP9 POP SWAP2 SWAP7 POP SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x67E DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x77D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x68B PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0xB PUSH2 0x493 DUP3 DUP3 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C7 DUP3 PUSH2 0xCD2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6F2 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x6FC PUSH1 0x0 PUSH2 0xDD5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70B DUP5 DUP5 DUP5 PUSH2 0x827 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x71B PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x3DC SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH2 0x493 CALLER DUP4 DUP4 PUSH2 0xE27 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x745 DUP3 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0x761 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1950 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x788 DUP5 DUP5 DUP5 PUSH2 0x497 JUMP JUMPDEST PUSH2 0x521 CALLER DUP6 DUP6 DUP6 DUP6 PUSH2 0xEC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7DB DUP6 PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x34 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST SWAP1 POP PUSH2 0x81E DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x9 SLOAD SWAP2 POP DUP5 SWAP1 POP PUSH2 0xFF1 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xCE21E1CB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xCE21E1CB SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x870 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x894 SWAP2 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C626F756E644E46543A2043616C6C6572206973206E6F742061207665 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3934B334B2B21034B9B9BAB2B9 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x901 DUP5 DUP5 DUP5 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C626F756E644E46543A20526563697069656E74206973206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6C696769626C65 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x3DBF1DB3 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x3DBF1DB3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x1ABC JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0x9DC DUP4 PUSH2 0x1ADD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH2 0x9EE DUP7 DUP3 PUSH2 0x10A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA1A JUMPI PUSH2 0xA1A PUSH2 0x1B04 JUMP JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xB PUSH2 0xA2D DUP5 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA3E SWAP3 SWAP2 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE SWAP1 DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE DUP3 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SLOAD SWAP3 DUP7 ADD MLOAD PUSH1 0xFF AND PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR OR DUP3 SSTORE DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xAB1 SWAP1 DUP3 PUSH2 0x19DF JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP2 DUP4 SWAP2 SWAP1 DUP10 AND SWAP1 PUSH32 0xA37C4DF4D408FB32A449F1F05D2D288B7097EE26ECD7BE996D720BA17E39ABAF SWAP1 PUSH1 0x0 SWAP1 LOG4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB26 DUP3 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xB88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F756C626F756E644E46543A2055524920717565727920666F72206E6F6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x3C34B9BA32B73A103A37B5B2B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0xBA4 SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBD0 SWAP1 PUSH2 0x1916 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBF2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC62 DUP3 PUSH2 0xD70 JUMP JUMPDEST PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BD SWAP1 PUSH2 0x1950 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xC9C PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0xCCF DUP2 PUSH2 0xDD5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH2 0x67E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD47 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xD65 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6E105749 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x81E DUP6 DUP6 DUP6 PUSH2 0x129E JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD83 JUMPI POP PUSH1 0x7 SLOAD DUP3 GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE59 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0xFEA JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xF08 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF43 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF40 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1BDE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFAC JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xF71 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xFE8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1095 JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1013 JUMPI PUSH2 0x1013 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1055 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 PUSH2 0x108D DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFF6 JUMP JUMPDEST POP SWAP1 SWAP3 EQ SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D8 DUP4 DUP4 PUSH1 0x0 PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1112 DUP4 PUSH2 0x1397 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1132 JUMPI PUSH2 0x1132 PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x115C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0x1166 JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x11AC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x126E JUMPI PUSH1 0x0 PUSH2 0x11BC DUP5 PUSH2 0xCD2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11E8 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x11FB JUMPI POP PUSH2 0x11F9 DUP2 DUP5 PUSH2 0xC29 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1224 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST DUP2 ISZERO PUSH2 0x126C JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x12CB JUMPI PUSH2 0x12CB DUP2 DUP5 DUP7 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1309 JUMPI PUSH2 0x12E8 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1198 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x1338 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0x13D6 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1402 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1420 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1438 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x144C JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x145E JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3C7 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x147A DUP4 DUP4 DUP4 PUSH2 0x14D3 JUMP JUMPDEST PUSH2 0x67E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x70B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x150D JUMPI POP PUSH2 0x150D DUP5 DUP5 PUSH2 0xC29 JUMP JUMPDEST DUP1 PUSH2 0x70B JUMPI POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1569 DUP2 PUSH2 0x1536 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x158B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1573 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x15AC DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1569 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1603 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x161B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1624 DUP4 PUSH2 0x15EC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1650 DUP5 PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP PUSH2 0x165E PUSH1 0x20 DUP6 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0xFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x169B SWAP1 DUP4 ADD DUP6 PUSH2 0x1594 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x16DD JUMPI PUSH2 0x16DD PUSH2 0x16AC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1705 JUMPI PUSH2 0x1705 PUSH2 0x16AC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x171E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1772 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x70B DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1569 DUP3 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17BA DUP5 PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x17FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x180F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1843 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184C DUP4 PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x185C DUP2 PUSH2 0x1822 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1886 DUP6 PUSH2 0x15EC JUMP JUMPDEST SWAP4 POP PUSH2 0x1894 PUSH1 0x20 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x18C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D7 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18FF DUP4 PUSH2 0x15EC JUMP JUMPDEST SWAP2 POP PUSH2 0x190D PUSH1 0x20 DUP5 ADD PUSH2 0x15EC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x192A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x194A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x536F756C626F756E644E46543A20517565727920666F72206E6F6E6578697374 PUSH1 0x40 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x19C0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFE8 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19CC JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19F9 JUMPI PUSH2 0x19F9 PUSH2 0x16AC JUMP JUMPDEST PUSH2 0x1A0D DUP2 PUSH2 0x1A07 DUP5 SLOAD PUSH2 0x1916 JUMP JUMPDEST DUP5 PUSH2 0x1999 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1A42 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1A2A JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A71 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1A52 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1A8F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1569 DUP2 PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ACE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x4 DUP2 LT PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1AFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 SLOAD PUSH2 0x1B28 DUP2 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1B40 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1B55 JUMPI PUSH2 0x1B84 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1B84 JUMP JUMPDEST DUP9 PUSH1 0x0 MSTORE PUSH1 0x20 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1B7B JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1B62 JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP POP POP POP DUP4 MLOAD PUSH2 0x1B98 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1570 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BD4 SWAP1 DUP4 ADD DUP5 PUSH2 0x1594 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1569 DUP2 PUSH2 0x1536 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0x9E194AB20D6DB0286A8E1BA5 POP 0xE7 ADDMOD 0xD XOR DUP5 DUP8 0x27 INVALID 0x2E SELFBALANCE SWAP12 PUSH29 0x9F3F2EE9F71864736F6C63430008140033000000000000000000000000 ","sourceMap":"462:7783:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:2;;;;;;:::i;:::-;;:::i;:::-;;;565:14:22;;558:22;540:41;;528:2;513:18;1560:300:2;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;3496:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:22;;;1679:51;;1667:2;1652:18;3496:154:2;1533:203:22;3322:113:2;;;;;;:::i;:::-;;:::i;:::-;;4142:578;;;;;;:::i;:::-;;:::i;5582:520:16:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;4786:132:2:-;;;;;;:::i;:::-;;:::i;7792:94:16:-;7867:11;;7792:94;;;3130:25:22;;;3118:2;3103:18;7792:94:16;2984:177:22;7343:110:16;;;;;;:::i;:::-;;:::i;2184:118:2:-;;;;;;:::i;:::-;;:::i;1919:208::-;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;2886:157:16:-;;;;;;:::i;:::-;;:::i;7569:111::-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2517:93:2;;;:::i;3717:144::-;;;;;;:::i;:::-;;:::i;6250:203:16:-;;;;;;:::i;:::-;;:::i;4984:233:2:-;;;;;;:::i;:::-;;:::i;4928:247:16:-;;;;;;:::i;:::-;;:::i;3335:1301::-;;;;;;:::i;:::-;;:::i;6999:225::-;;;;;;:::i;:::-;;:::i;3927:153:2:-;;;;;;:::i;:::-;;:::i;6627:208:16:-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1560:300:2:-;1662:4;-1:-1:-1;;;;;;1697:40:2;;-1:-1:-1;;;1697:40:2;;:104;;-1:-1:-1;;;;;;;1753:48:2;;-1:-1:-1;;;1753:48:2;1697:104;:156;;;-1:-1:-1;;;;;;;;;;862:40:10;;;1817:36:2;1678:175;1560:300;-1:-1:-1;;1560:300:2:o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;-1:-1:-1;6033:7:2;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:2;3622:21;5963:127;3322:113;3393:35;3402:2;3406:7;735:10:7;3393:8:2;:35::i;:::-;3322:113;;:::o;4142:578::-;-1:-1:-1;;;;;4236:16:2;;4232:87;;4275:33;;-1:-1:-1;;;4275:33:2;;4305:1;4275:33;;;1679:51:22;1652:18;;4275:33:2;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;735:10:7;4561:7:2;:34::i;:::-;4537:58;;4626:4;-1:-1:-1;;;;;4609:21:2;:13;-1:-1:-1;;;;;4609:21:2;;4605:109;;4653:50;;-1:-1:-1;;;4653:50:2;;-1:-1:-1;;;;;7666:15:22;;;4653:50:2;;;7648:34:22;7698:18;;;7691:34;;;7761:15;;7741:18;;;7734:43;7583:18;;4653:50:2;7408:375:22;4605:109:2;4222:498;4142:578;;;:::o;5582:520:16:-;5669:14;5694:17;5722:25;5758:23;5808:16;5816:7;5808;:16::i;:::-;5800:70;;;;-1:-1:-1;;;5800:70:16;;;;;;;:::i;:::-;5891:23;5917:22;;;:13;:22;;;;;;;;5891:48;;;;;;;;;-1:-1:-1;;;;;5891:48:16;;;;-1:-1:-1;;;5891:48:16;;;;;;;;;;;;;;;;5917:22;;5891:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5891:48:16;;;-1:-1:-1;;5891:48:16;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5891:48:16;;;;;;5982:11;;6008:16;;;;6039;;;;6070:13;;;;;5982:11;;6008:16;;-1:-1:-1;6039:16:16;;-1:-1:-1;6070:13:16;-1:-1:-1;5582:520:16;-1:-1:-1;;;5582:520:16:o;4786:132:2:-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;7343:110:16:-;1531:13:0;:11;:13::i;:::-;7419::16::1;:26;7435:10:::0;7419:13;:26:::1;:::i;2184:118:2:-:0;2247:7;2273:22;2287:7;2273:13;:22::i;1919:208::-;1982:7;-1:-1:-1;;;;;2005:19:2;;2001:87;;2047:30;;-1:-1:-1;;;2047:30:2;;2074:1;2047:30;;;1679:51:22;1652:18;;2047:30:2;1533:203:22;2001:87:2;-1:-1:-1;;;;;;2104:16:2;;;;;:9;:16;;;;;;;1919:208::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2886:157:16:-;2969:7;2996:39;3012:9;3023:11;;2996:15;:39::i;:::-;2989:46;2886:157;-1:-1:-1;;;;2886:157:16:o;7569:111::-;1531:13:0;:11;:13::i;:::-;7645:11:16::1;:27:::0;7569:111::o;2517:93:2:-;2564:13;2596:7;2589:14;;;;;:::i;3717:144::-;3802:52;735:10:7;3835:8:2;3845;3802:18;:52::i;6250:203:16:-;6308:7;6336:16;6344:7;6336;:16::i;:::-;6328:70;;;;-1:-1:-1;;;6328:70:16;;;;;;;:::i;:::-;-1:-1:-1;6416:22:16;;;;:13;:22;;;;;:29;-1:-1:-1;;;;;6416:29:16;;6250:203::o;4984:233:2:-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;735:10:7;5186:4:2;5192:2;5196:7;5205:4;5138:33;:72::i;4928:247:16:-;5029:4;5046:12;5061:38;5089:9;1637:22:21;;-1:-1:-1;;14459:2:22;14455:15;;;14451:53;1637:22:21;;;14439:66:22;1600:7:21;;14521:12:22;;1637:22:21;;;;;;;;;;;;1627:33;;;;;;1620:40;;1538:130;;;;5061:38:16;5046:53;;5117:50;5136:11;;5117:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5149:11:16;;;-1:-1:-1;5162:4:16;;-1:-1:-1;5117:18:16;:50::i;:::-;5110:57;4928:247;-1:-1:-1;;;;;4928:247:16:o;3335:1301::-;3534:15;;3518:61;;-1:-1:-1;;;3518:61:16;;3568:10;3518:61;;;1679:51:22;3436:7:16;;-1:-1:-1;;;;;3534:15:16;;3518:49;;1652:18:22;;3518:61:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3496:156;;;;-1:-1:-1;;;3496:156:16;;10854:2:22;3496:156:16;;;10836:21:22;10893:2;10873:18;;;10866:30;10932:34;10912:18;;;10905:62;-1:-1:-1;;;10983:18:22;;;10976:43;11036:19;;3496:156:16;10652:409:22;3496:156:16;3744:34;3755:9;3766:11;;3744:10;:34::i;:::-;3722:123;;;;-1:-1:-1;;;3722:123:16;;11268:2:22;3722:123:16;;;11250:21:22;11307:2;11287:18;;;11280:30;11346:34;11326:18;;;11319:62;-1:-1:-1;;;11397:18:22;;;11390:37;11444:19;;3722:123:16;11066:403:22;3722:123:16;3951:15;;3935:58;;-1:-1:-1;;;3935:58:16;;3982:10;3935:58;;;1679:51:22;3895:37:16;;-1:-1:-1;;;;;3951:15:16;;3935:46;;1652:18:22;;3935:58:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4045:15;:17;;3895:98;;-1:-1:-1;4045:15:16;:17;;;:::i;:::-;;;;-1:-1:-1;;4091:15:16;;4148:25;4154:9;4091:15;4148:5;:25::i;:::-;4254:264;;;;;;;;4289:10;-1:-1:-1;;;;;4254:264:16;;;;;4333:10;4327:17;;;;;;;;:::i;:::-;4254:264;;;;;;4396:13;4411:18;:7;:16;:18::i;:::-;4379:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4379:51:16;;;;;;;;;4254:264;;;4456:15;4379:51;4254:264;;;;;;;-1:-1:-1;;;;;4254:264:16;;;;;;;;;;-1:-1:-1;4229:22:16;;;:13;:22;;;;;:289;;;;;;;;;;-1:-1:-1;;;4229:289:16;-1:-1:-1;;;;;;4229:289:16;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4229:289:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4229:289:16;-1:-1:-1;;;;;4229:289:16;;;;;;4544:49;;4582:10;;4573:7;;4544:49;;;;;;-1:-1:-1;;4544:49:16;4621:7;3335:1301;-1:-1:-1;;;;;3335:1301:16:o;6999:225::-;7064:13;7098:16;7106:7;7098;:16::i;:::-;7090:74;;;;-1:-1:-1;;;7090:74:16;;13350:2:22;7090:74:16;;;13332:21:22;13389:2;13369:18;;;13362:30;13428:34;13408:18;;;13401:62;-1:-1:-1;;;13479:18:22;;;13472:43;13532:19;;7090:74:16;13148:409:22;7090:74:16;7182:22;;;;:13;:22;;;;;:34;;7175:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6999:225;;;:::o;3927:153:2:-;-1:-1:-1;;;;;4038:25:2;;;4015:4;4038:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3927:153::o;6627:208:16:-;6688:7;6716:16;6724:7;6716;:16::i;:::-;6708:70;;;;-1:-1:-1;;;6708:70:16;;;;;;;:::i;:::-;-1:-1:-1;6796:22:16;;;;:13;:22;;;;;:31;;;;6627:208::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1679:51:22::0;1652:18;;2672:31:0::1;1533:203:22::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;16212:241:2:-;16275:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:2;;16337:88;;16383:31;;-1:-1:-1;;;16383:31:2;;;;;3130:25:22;;;3103:18;;16383:31:2;2984:177:22;14492:120:2;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;2093:474:16:-;2180:7;5824:16:2;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:2;2410:18:16;;;;;:38;;-1:-1:-1;;;;;;2432:16:16;;;;2410:38;2406:94;;;2472:16;;-1:-1:-1;;;2472:16:16;;;;;;;;;;;2406:94;2527:32;2541:2;2545:7;2554:4;2527:13;:32::i;8076:166::-;8133:4;8157:12;;;;;:42;;;8184:15;;8173:7;:26;;8157:42;:77;;;;-1:-1:-1;;8232:1:16;5824:16:2;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:2;8203:31:16;;;8076:166::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:7;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:7;1901:40:0;;;1679:51:22;1652:18;;1901:40:0;1533:203:22;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;15665:312:2:-;-1:-1:-1;;;;;15772:22:2;;15768:91;;15817:31;;-1:-1:-1;;;15817:31:2;;-1:-1:-1;;;;;1697:32:22;;15817:31:2;;;1679:51:22;1652:18;;15817:31:2;1533:203:22;15768:91:2;-1:-1:-1;;;;;15868:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15868:46:2;;;;;;;;;;15929:41;;540::22;;;15929::2;;513:18:22;15929:41:2;;;;;;;15665:312;;;:::o;993:924:6:-;-1:-1:-1;;;;;1173:14:6;;;:18;1169:742;;1211:67;;-1:-1:-1;;;1211:67:6;;-1:-1:-1;;;;;1211:36:6;;;;;:67;;1248:8;;1258:4;;1264:7;;1273:4;;1211:67;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1211:67:6;;;;;;;;-1:-1:-1;;1211:67:6;;;;;;;;;;;;:::i;:::-;;;1207:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1568:6;:13;1585:1;1568:18;1564:323;;1672:39;;-1:-1:-1;;;1672:39:6;;-1:-1:-1;;;;;1697:32:22;;1672:39:6;;;1679:51:22;1652:18;;1672:39:6;1533:203:22;1564:323:6;1839:6;1833:13;1824:6;1820:2;1816:15;1809:38;1207:694;-1:-1:-1;;;;;;1325:51:6;;-1:-1:-1;;;1325:51:6;1321:182;;1445:39;;-1:-1:-1;;;1445:39:6;;-1:-1:-1;;;;;1697:32:22;;1445:39:6;;;1679:51:22;1652:18;;1445:39:6;1533:203:22;1321:182:6;1279:238;1207:694;993:924;;;;;:::o;513:828:21:-;638:4;678;638;695:525;719:5;:12;715:1;:16;695:525;;;753:20;776:5;782:1;776:8;;;;;;;;:::i;:::-;;;;;;;753:31;;821:12;805;:28;801:408;;958:44;;;;;;14833:19:22;;;14868:12;;;14861:28;;;14905:12;;958:44:21;;;;;;;;;;;;948:55;;;;;;933:70;;801:408;;;1148:44;;;;;;14833:19:22;;;14868:12;;;14861:28;;;14905:12;;1148:44:21;;;;;;;;;;;;1138:55;;;;;;1123:70;;801:408;-1:-1:-1;733:3:21;;;;:::i;:::-;;;;695:525;;;-1:-1:-1;1313:20:21;;;;513:828;-1:-1:-1;;;513:828:21:o;9978:327:2:-;-1:-1:-1;;;;;10045:16:2;;10041:87;;10084:33;;-1:-1:-1;;;10084:33:2;;10114:1;10084:33;;;1679:51:22;1652:18;;10084:33:2;1533:203:22;10041:87:2;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;-1:-1:-1;;;;;;10207:27:2;;;10203:96;;10257:31;;-1:-1:-1;;;10257:31:2;;10285:1;10257:31;;;1679:51:22;1652:18;;10257:31:2;1533:203:22;1308:632:9;1364:13;1413:14;1430:17;1441:5;1430:10;:17::i;:::-;1450:1;1430:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1488:18:9;-1:-1:-1;1465:41:9;-1:-1:-1;1595:28:9;;;1611:2;1595:28;1650:247;-1:-1:-1;;1681:5:9;-1:-1:-1;;;1780:2:9;1769:14;;1764:32;1681:5;1751:46;1841:2;1832:11;;;-1:-1:-1;1861:21:9;1650:247;1861:21;-1:-1:-1;1917:6:9;1308:632;-1:-1:-1;;;1308:632:9:o;14794:662:2:-;14954:9;:31;;;-1:-1:-1;;;;;;14967:18:2;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;-1:-1:-1;;;;;;15167:18:2;;;;;;:35;;;15198:4;-1:-1:-1;;;;;15189:13:2;:5;-1:-1:-1;;;;;15189:13:2;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15263:27;;-1:-1:-1;;;15263:27:2;;-1:-1:-1;;;;;1697:32:22;;15263:27:2;;;1679:51:22;1652:18;;15263:27:2;1533:203:22;15163:142:2;15323:9;15319:81;;;15377:7;15373:2;-1:-1:-1;;;;;15357:28:2;15366:5;-1:-1:-1;;;;;15357:28:2;;;;;;;;;;;15319:81;14987:423;14950:460;-1:-1:-1;;15420:24:2;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15420:29:2;-1:-1:-1;;;;;15420:29:2;;;;;;;;;;14794:662::o;8861:795::-;8947:7;5824:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5824:16:2;;;;9058:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;-1:-1:-1;;;;;9184:18:2;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;-1:-1:-1;;;;;9391:15:2;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9391:20:2;;;9180:256;-1:-1:-1;;;;;9450:16:2;;;9446:107;;-1:-1:-1;;;;;9510:13:2;;;;;;:9;:13;;;;;:18;;9527:1;9510:18;;;9446:107;9563:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9563:21:2;-1:-1:-1;;;;;9563:21:2;;;;;;;;;9600:27;;9563:16;;9600:27;;;;;;;9645:4;8861:795;-1:-1:-1;;;;8861:795:2:o;29154:916:12:-;29207:7;;-1:-1:-1;;;29282:17:12;;29278:103;;-1:-1:-1;;;29319:17:12;;;-1:-1:-1;29364:2:12;29354:12;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;-1:-1:-1;29480:2:12;29470:12;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;-1:-1:-1;29596:2:12;29586:12;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;-1:-1:-1;29710:1:12;29700:11;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;-1:-1:-1;29823:1:12;29813:11;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;-1:-1:-1;29936:1:12;29926:11;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;30057:6;29154:916;-1:-1:-1;;29154:916:12:o;7105:368:2:-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;-1:-1:-1;;;;;7275:19:2;;7271:186;;7321:31;;-1:-1:-1;;;7321:31:2;;;;;3130:25:22;;;3103:18;;7321:31:2;2984:177:22;7271:186:2;7398:44;;-1:-1:-1;;;7398:44:2;;-1:-1:-1;;;;;15252:32:22;;7398:44:2;;;15234:51:22;15301:18;;;15294:34;;;15207:18;;7398:44:2;15060:274:22;6401:272:2;6504:4;-1:-1:-1;;;;;6539:21:2;;;;;;:127;;;6586:7;-1:-1:-1;;;;;6577:16:2;:5;-1:-1:-1;;;;;6577:16:2;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:88;;;-1:-1:-1;;6033:7:2;6059:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6059:24:2;;;6633:32;;;;;-1:-1:-1;6401:272:2:o;14:131:22:-;-1:-1:-1;;;;;;88:32:22;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;:::-;384:5;150:245;-1:-1:-1;;;150:245:22:o;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:22;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:22;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:22:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:22;;1348:180;-1:-1:-1;1348:180:22:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:22;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:22:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:468::-;-1:-1:-1;;;;;2740:32:22;;2722:51;;2821:4;2809:17;;2804:2;2789:18;;2782:45;2863:3;2858:2;2843:18;;2836:31;;;-1:-1:-1;;2884:46:22;;2910:19;;2902:6;2884:46;:::i;:::-;2876:54;;2966:6;2961:2;2950:9;2946:18;2939:34;2511:468;;;;;;;:::o;3166:127::-;3227:10;3222:3;3218:20;3215:1;3208:31;3258:4;3255:1;3248:15;3282:4;3279:1;3272:15;3298:632;3363:5;3393:18;3434:2;3426:6;3423:14;3420:40;;;3440:18;;:::i;:::-;3515:2;3509:9;3483:2;3569:15;;-1:-1:-1;;3565:24:22;;;3591:2;3561:33;3557:42;3545:55;;;3615:18;;;3635:22;;;3612:46;3609:72;;;3661:18;;:::i;:::-;3701:10;3697:2;3690:22;3730:6;3721:15;;3760:6;3752;3745:22;3800:3;3791:6;3786:3;3782:16;3779:25;3776:45;;;3817:1;3814;3807:12;3776:45;3867:6;3862:3;3855:4;3847:6;3843:17;3830:44;3922:1;3915:4;3906:6;3898;3894:19;3890:30;3883:41;;;;3298:632;;;;;:::o;3935:451::-;4004:6;4057:2;4045:9;4036:7;4032:23;4028:32;4025:52;;;4073:1;4070;4063:12;4025:52;4113:9;4100:23;4146:18;4138:6;4135:30;4132:50;;;4178:1;4175;4168:12;4132:50;4201:22;;4254:4;4246:13;;4242:27;-1:-1:-1;4232:55:22;;4283:1;4280;4273:12;4232:55;4306:74;4372:7;4367:2;4354:16;4349:2;4345;4341:11;4306:74;:::i;4391:186::-;4450:6;4503:2;4491:9;4482:7;4478:23;4474:32;4471:52;;;4519:1;4516;4509:12;4471:52;4542:29;4561:9;4542:29;:::i;4764:689::-;4859:6;4867;4875;4928:2;4916:9;4907:7;4903:23;4899:32;4896:52;;;4944:1;4941;4934:12;4896:52;4967:29;4986:9;4967:29;:::i;:::-;4957:39;;5047:2;5036:9;5032:18;5019:32;5070:18;5111:2;5103:6;5100:14;5097:34;;;5127:1;5124;5117:12;5097:34;5165:6;5154:9;5150:22;5140:32;;5210:7;5203:4;5199:2;5195:13;5191:27;5181:55;;5232:1;5229;5222:12;5181:55;5272:2;5259:16;5298:2;5290:6;5287:14;5284:34;;;5314:1;5311;5304:12;5284:34;5367:7;5362:2;5352:6;5349:1;5345:14;5341:2;5337:23;5333:32;5330:45;5327:65;;;5388:1;5385;5378:12;5327:65;5419:2;5415;5411:11;5401:21;;5441:6;5431:16;;;;;4764:689;;;;;:::o;5643:118::-;5729:5;5722:13;5715:21;5708:5;5705:32;5695:60;;5751:1;5748;5741:12;5766:315;5831:6;5839;5892:2;5880:9;5871:7;5867:23;5863:32;5860:52;;;5908:1;5905;5898:12;5860:52;5931:29;5950:9;5931:29;:::i;:::-;5921:39;;6010:2;5999:9;5995:18;5982:32;6023:28;6045:5;6023:28;:::i;:::-;6070:5;6060:15;;;5766:315;;;;;:::o;6086:667::-;6181:6;6189;6197;6205;6258:3;6246:9;6237:7;6233:23;6229:33;6226:53;;;6275:1;6272;6265:12;6226:53;6298:29;6317:9;6298:29;:::i;:::-;6288:39;;6346:38;6380:2;6369:9;6365:18;6346:38;:::i;:::-;6336:48;;6431:2;6420:9;6416:18;6403:32;6393:42;;6486:2;6475:9;6471:18;6458:32;6513:18;6505:6;6502:30;6499:50;;;6545:1;6542;6535:12;6499:50;6568:22;;6621:4;6613:13;;6609:27;-1:-1:-1;6599:55:22;;6650:1;6647;6640:12;6599:55;6673:74;6739:7;6734:2;6721:16;6716:2;6712;6708:11;6673:74;:::i;:::-;6663:84;;;6086:667;;;;;;;:::o;6758:260::-;6826:6;6834;6887:2;6875:9;6866:7;6862:23;6858:32;6855:52;;;6903:1;6900;6893:12;6855:52;6926:29;6945:9;6926:29;:::i;:::-;6916:39;;6974:38;7008:2;6997:9;6993:18;6974:38;:::i;:::-;6964:48;;6758:260;;;;;:::o;7023:380::-;7102:1;7098:12;;;;7145;;;7166:61;;7220:4;7212:6;7208:17;7198:27;;7166:61;7273:2;7265:6;7262:14;7242:18;7239:38;7236:161;;7319:10;7314:3;7310:20;7307:1;7300:31;7354:4;7351:1;7344:15;7382:4;7379:1;7372:15;7236:161;;7023:380;;;:::o;7788:405::-;7990:2;7972:21;;;8029:2;8009:18;;;8002:30;8068:34;8063:2;8048:18;;8041:62;-1:-1:-1;;;8134:2:22;8119:18;;8112:39;8183:3;8168:19;;7788:405::o;8324:545::-;8426:2;8421:3;8418:11;8415:448;;;8462:1;8487:5;8483:2;8476:17;8532:4;8528:2;8518:19;8602:2;8590:10;8586:19;8583:1;8579:27;8573:4;8569:38;8638:4;8626:10;8623:20;8620:47;;;-1:-1:-1;8661:4:22;8620:47;8716:2;8711:3;8707:12;8704:1;8700:20;8694:4;8690:31;8680:41;;8771:82;8789:2;8782:5;8779:13;8771:82;;;8834:17;;;8815:1;8804:13;8771:82;;9045:1352;9171:3;9165:10;9198:18;9190:6;9187:30;9184:56;;;9220:18;;:::i;:::-;9249:97;9339:6;9299:38;9331:4;9325:11;9299:38;:::i;:::-;9293:4;9249:97;:::i;:::-;9401:4;;9465:2;9454:14;;9482:1;9477:663;;;;10184:1;10201:6;10198:89;;;-1:-1:-1;10253:19:22;;;10247:26;10198:89;-1:-1:-1;;9002:1:22;8998:11;;;8994:24;8990:29;8980:40;9026:1;9022:11;;;8977:57;10300:81;;9447:944;;9477:663;8271:1;8264:14;;;8308:4;8295:18;;-1:-1:-1;;9513:20:22;;;9631:236;9645:7;9642:1;9639:14;9631:236;;;9734:19;;;9728:26;9713:42;;9826:27;;;;9794:1;9782:14;;;;9661:19;;9631:236;;;9635:3;9895:6;9886:7;9883:19;9880:201;;;9956:19;;;9950:26;-1:-1:-1;;10039:1:22;10035:14;;;10051:3;10031:24;10027:37;10023:42;10008:58;9993:74;;9880:201;-1:-1:-1;;;;;10127:1:22;10111:14;;;10107:22;10094:36;;-1:-1:-1;9045:1352:22:o;10402:245::-;10469:6;10522:2;10510:9;10501:7;10497:23;10493:32;10490:52;;;10538:1;10535;10528:12;10490:52;10570:9;10564:16;10589:28;10611:5;10589:28;:::i;11474:275::-;11559:6;11612:2;11600:9;11591:7;11587:23;11583:32;11580:52;;;11628:1;11625;11618:12;11580:52;11660:9;11654:16;11699:1;11692:5;11689:12;11679:40;;11715:1;11712;11705:12;11754:232;11793:3;11814:17;;;11811:140;;11873:10;11868:3;11864:20;11861:1;11854:31;11908:4;11905:1;11898:15;11936:4;11933:1;11926:15;11811:140;-1:-1:-1;11978:1:22;11967:13;;11754:232::o;11991:127::-;12052:10;12047:3;12043:20;12040:1;12033:31;12083:4;12080:1;12073:15;12107:4;12104:1;12097:15;12123:1020;12299:3;12328:1;12361:6;12355:13;12391:36;12417:9;12391:36;:::i;:::-;12446:1;12463:18;;;12490:133;;;;12637:1;12632:356;;;;12456:532;;12490:133;-1:-1:-1;;12523:24:22;;12511:37;;12596:14;;12589:22;12577:35;;12568:45;;;-1:-1:-1;12490:133:22;;12632:356;12663:6;12660:1;12653:17;12693:4;12738:2;12735:1;12725:16;12763:1;12777:165;12791:6;12788:1;12785:13;12777:165;;;12869:14;;12856:11;;;12849:35;12912:16;;;;12806:10;;12777:165;;;12781:3;;;12971:6;12966:3;12962:16;12955:23;;12456:532;;;;;13019:6;13013:13;13035:68;13094:8;13089:3;13082:4;13074:6;13070:17;13035:68;:::i;:::-;13119:18;;12123:1020;-1:-1:-1;;;;12123:1020:22:o;13562:489::-;-1:-1:-1;;;;;13831:15:22;;;13813:34;;13883:15;;13878:2;13863:18;;13856:43;13930:2;13915:18;;13908:34;;;13978:3;13973:2;13958:18;;13951:31;;;13756:4;;13999:46;;14025:19;;14017:6;13999:46;:::i;:::-;13991:54;13562:489;-1:-1:-1;;;;;;13562:489:22:o;14056:249::-;14125:6;14178:2;14166:9;14157:7;14153:23;14149:32;14146:52;;;14194:1;14191;14184:12;14146:52;14226:9;14220:16;14245:30;14269:5;14245:30;:::i;14544:127::-;14605:10;14600:3;14596:20;14593:1;14586:31;14636:4;14633:1;14626:15;14660:4;14657:1;14650:15"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getCertificateData(uint256)":"31494bbb","getIssuedAt(uint256)":"ee3de9c5","getMerkleRoot()":"49590657","isApprovedForAll(address,address)":"e985e9c5","isEligible(address,bytes32[])":"c18b065e","issuerOf(uint256)":"a4e2ee11","mint(address,bytes32[])":"7bf32270","mintCertificate(address,bytes32[])":"c4b3d052","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setBaseURI(string)":"55f804b3","setMerkleRoot(bytes32)":"7cb64759","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"issuerRegistry\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoulboundToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"CertificateMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCertificateData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"issuerLevel\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issuedTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getIssuedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"isEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"issuerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mintCertificate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newMerkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of non-transferable (soulbound) NFTs for certificates\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"CertificateMinted(address,uint256,address)\":{\"details\":\"Event emitted when a certificate is minted\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor for the SoulboundNFT contract\",\"params\":{\"baseTokenURI\":\"Base URI for metadata\",\"issuerRegistry\":\"Address of the issuer registry contract\",\"merkleRoot\":\"Merkle root for whitelisting recipients\",\"name\":\"Name of the NFT collection\",\"symbol\":\"Symbol of the NFT collection\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getCertificateData(uint256)\":{\"details\":\"Gets the certificate data for a token ID\",\"params\":{\"tokenId\":\"The token ID to get data for\"},\"returns\":{\"issuedTimestamp\":\"The timestamp when the certificate was issued\",\"issuer\":\"The address of the certificate issuer\",\"issuerLevel\":\"The level of the issuer (T1, T2, etc.)\",\"metadataURI\":\"The URI for the certificate metadata\"}},\"getIssuedAt(uint256)\":{\"details\":\"Gets the issuance timestamp of a token\",\"params\":{\"tokenId\":\"The token ID\"},\"returns\":{\"_0\":\"The timestamp when the token was issued\"}},\"getMerkleRoot()\":{\"details\":\"Gets the current Merkle root\",\"returns\":{\"_0\":\"The current Merkle root\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isEligible(address,bytes32[])\":{\"details\":\"Checks if an address is eligible to claim a certificate\",\"params\":{\"merkleProof\":\"The Merkle proof to verify eligibility\",\"recipient\":\"The address to check eligibility for\"},\"returns\":{\"_0\":\"True if the address is eligible, false otherwise\"}},\"issuerOf(uint256)\":{\"details\":\"Gets the issuer of a token\",\"params\":{\"tokenId\":\"The token ID\"},\"returns\":{\"_0\":\"The address of the issuer\"}},\"mint(address,bytes32[])\":{\"details\":\"Alias for mintCertificate to maintain compatibility with frontend\",\"params\":{\"merkleProof\":\"The Merkle proof that verifies the recipient is eligible\",\"recipient\":\"The address that will receive the certificate\"},\"returns\":{\"_0\":\"The token ID of the minted certificate\"}},\"mintCertificate(address,bytes32[])\":{\"details\":\"Mints a new certificate to a recipient\",\"params\":{\"merkleProof\":\"The Merkle proof that verifies the recipient is eligible\",\"recipient\":\"The address that will receive the certificate\"},\"returns\":{\"_0\":\"The token ID of the minted certificate\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setBaseURI(string)\":{\"details\":\"Updates the base token URI\",\"params\":{\"newBaseURI\":\"The new base token URI\"}},\"setMerkleRoot(bytes32)\":{\"details\":\"Updates the Merkle root\",\"params\":{\"newMerkleRoot\":\"The new Merkle root\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Gets the URI for a token's metadata\",\"params\":{\"tokenId\":\"The token ID to get the URI for\"},\"returns\":{\"_0\":\"The token URI\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"SoulboundNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SoulboundNFT.sol\":\"SoulboundNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/SoulboundNFT.sol\":{\"keccak256\":\"0x4d49d40f0a0d5a30fae797d02d8b69ef8d6d207f3440d2e5ddabb05f94c024a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e6c83fc7191d8b58f282eb5d5afb2c735ab3402cb315b6e8b29b636b69dead1\",\"dweb:/ipfs/QmdNDEBeV1Am5WLWLpX93QXiCbu4fEbWVCPX1k8o2GcCG5\"]},\"contracts/interfaces/IIssuerRegistry.sol\":{\"keccak256\":\"0x3d4eaf5e4545526a1ba065452ba5d8a986342828803436e1c9d9020befbce6bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee0cb27c5966fd7125528d6e070d0cdfeca0b597c0c1fb08b65e2f284cb59382\",\"dweb:/ipfs/QmbF5okc21wwwpgRMHLR5zEj3HuegPVZs82NFK8fvyiUR5\"]},\"contracts/interfaces/ISoulboundNFT.sol\":{\"keccak256\":\"0x6478f9d6828ac60c376a56dd60b8669cadbd03e3caf50a5266a021934283b682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://906a43dbd5bc9ec5307a8c3aa79e6e656ee7cb5cb55c5378f145ba58e1363fe3\",\"dweb:/ipfs/QmUKW2rHYNFS7UicQJrYVTaTgDNFszEBwNgpfotPhGtZAD\"]},\"contracts/utils/MerkleProof.sol\":{\"keccak256\":\"0x67ecdb0679d430a433a40e6d79711c318276e13352b0e4dc0dff7ac4593be028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://073bf241803fd5a484d161c82035d2b7fa791ad37f79cac66c23fd00185d2116\",\"dweb:/ipfs/QmXFrSxKQXPoUePqPXK275Zk3VDrdTg6Eha2vDM89QLaa3\"]}},\"version\":1}"}},"contracts/ZKVerifier.sol":{"ZKVerifier":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"circuitId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"address","name":"verifierContract","type":"address"}],"name":"CircuitRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proofId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"circuitId","type":"uint256"}],"name":"ProofCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proofId","type":"uint256"},{"indexed":true,"internalType":"address","name":"revoker","type":"address"}],"name":"ProofRevoked","type":"event"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"circuitId","type":"uint256"},{"internalType":"bytes","name":"proofData","type":"bytes"},{"internalType":"bytes","name":"publicInputs","type":"bytes"},{"internalType":"uint256","name":"validityPeriod","type":"uint256"}],"name":"createProof","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"circuitId","type":"uint256"}],"name":"deactivateCircuit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"circuitId","type":"uint256"}],"name":"getCircuitData","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"verifierContract","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct IZKVerifier.VerifierCircuit","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proofId","type":"uint256"}],"name":"getProof","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"circuitId","type":"uint256"},{"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"expiresAt","type":"uint256"},{"internalType":"bool","name":"isRevoked","type":"bool"}],"internalType":"struct IZKVerifier.ProofData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getProofCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proofId","type":"uint256"}],"name":"getProofData","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"circuitId","type":"uint256"},{"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"expiresAt","type":"uint256"},{"internalType":"bool","name":"isRevoked","type":"bool"}],"internalType":"struct IZKVerifier.ProofData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"getProofsByOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"circuitId","type":"uint256"}],"name":"reactivateCircuit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"verifierContract","type":"address"}],"name":"registerCircuit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proofId","type":"uint256"}],"name":"revokeProof","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"userProofByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proofId","type":"uint256"},{"internalType":"address","name":"verifierAddress","type":"address"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proofId","type":"uint256"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_7470":{"entryPoint":null,"id":7470,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":96,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:219:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:22","statements":[{"nodeType":"YulAssignment","src":"125:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:22"},"nodeType":"YulFunctionCall","src":"133:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:22"},"nodeType":"YulFunctionCall","src":"194:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:22"},"nodeType":"YulFunctionCall","src":"190:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:22"},"nodeType":"YulFunctionCall","src":"178:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:22"},"nodeType":"YulFunctionCall","src":"160:51:22"},"nodeType":"YulExpressionStatement","src":"160:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:22","type":""}],"src":"14:203:22"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610060565b50336000908152600660205260409020805460ff191660011790556100b0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611522806100bf6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638b6958ff116100a25780639d68b434116100715780639d68b4341461035b578063cbf63e991461037b578063da6504541461011b578063e8168b5c1461038e578063f2fde38b146103a157600080fd5b80638b6958ff146103075780638da5cb5b1461031a578063962926a8146103355780639c73dc541461034857600080fd5b80635c81587e116100e95780635c81587e1461028f5780636b9a4ae3146102b057806370480275146102d9578063715018a6146102ec578063733b0382146102f457600080fd5b806311149ada1461011b5780631785f53c146102375780633997a7e01461024c5780634fbe55f61461026c575b600080fd5b6101d2610129366004610f3b565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081019190915250600090815260046020818152604092839020835160e0810185528154815260018201546001600160a01b03169281019290925260028101549382019390935260038301546060820152908201546080820152600582015460a082015260069091015460ff16151560c082015290565b60405161022e9190815181526020808301516001600160a01b03169082015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c09182015115159181019190915260e00190565b60405180910390f35b61024a610245366004610f70565b6103b4565b005b61025f61025a366004610f3b565b6103dd565b60405161022e9190610fd8565b61027f61027a366004611046565b610593565b604051901515815260200161022e565b6102a261029d366004611072565b610645565b60405190815260200161022e565b6102a26102be366004610f70565b6001600160a01b031660009081526005602052604090205490565b61024a6102e7366004610f70565b6106ee565b61024a61071a565b6102a26103023660046110e5565b61072e565b61027f610315366004610f3b565b610960565b6000546040516001600160a01b03909116815260200161022e565b61024a610343366004610f3b565b6109ca565b61024a610356366004610f3b565b610b05565b61036e610369366004610f70565b610b80565b60405161022e9190611167565b61024a610389366004610f3b565b610bec565b6102a261039c3660046111ab565b610c6d565b61024a6103af366004610f70565b610e80565b6103bc610ebe565b6001600160a01b03166000908152600660205260409020805460ff19169055565b61041a6040518060a0016040528060008152602001606081526020016060815260200160006001600160a01b031681526020016000151581525090565b600360008381526020019081526020016000206040518060a0016040529081600082015481526020016001820180546104529061122c565b80601f016020809104026020016040519081016040528092919081815260200182805461047e9061122c565b80156104cb5780601f106104a0576101008083540402835291602001916104cb565b820191906000526020600020905b8154815290600101906020018083116104ae57829003601f168201915b505050505081526020016002820180546104e49061122c565b80601f01602080910402602001604051908101604052809291908181526020018280546105109061122c565b801561055d5780601f106105325761010080835404028352916020019161055d565b820191906000526020600020905b81548152906001019060200180831161054057829003601f168201915b5050509183525050600391909101546001600160a01b0381166020830152600160a01b900460ff16151560409091015292915050565b6000828152600460208181526040808420815160e081018352815480825260018301546001600160a01b03169482019490945260028201549281019290925260038101546060830152928301546080820152600583015460a082015260069092015460ff16151560c0830152820361060f57600091505061063f565b8060c001511561062357600091505061063f565b8060a0015142111561063957600091505061063f565b60019150505b92915050565b6001600160a01b03821660009081526005602052604081205482106106b15760405162461bcd60e51b815260206004820152601f60248201527f5a4b56657269666965723a20496e646578206f7574206f6620626f756e64730060448201526064015b60405180910390fd5b6001600160a01b03831660009081526005602052604090208054839081106106db576106db611266565b9060005260206000200154905092915050565b6106f6610ebe565b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b610722610ebe565b61072c6000610eeb565b565b600086815260036020819052604082200154600160a01b900460ff166107a05760405162461bcd60e51b815260206004820152602160248201527f5a4b56657269666965723a2043697263756974206973206e6f742061637469766044820152606560f81b60648201526084016106a8565b600280549060006107b083611292565b90915550506002546040516000906107d29089908990899089906020016112ab565b604051602081830303815290604052805190602001209050600084426107f891906112cd565b90506040518060e00160405280848152602001336001600160a01b031681526020018b815260200183815260200142815260200182815260200160001515815250600460008581526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555090505060056000336001600160a01b03166001600160a01b0316815260200190815260200160002083908060018154018082558091505060019003906000526020600020016000909190919091505589336001600160a01b0316847fa9665a946bb24359948b6138082dd57f3297d1d76e95e4420ddb59bc1c4f3f9160405160405180910390a4509098975050505050505050565b6040516327df2afb60e11b815260048101829052600060248201819052903090634fbe55f690604401602060405180830381865afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063f91906112e0565b60008181526004602052604081208054909103610a295760405162461bcd60e51b815260206004820181905260248201527f5a4b56657269666965723a2050726f6f6620646f6573206e6f7420657869737460448201526064016106a8565b60018101546001600160a01b0316331480610a5357503360009081526006602052604090205460ff165b610ac55760405162461bcd60e51b815260206004820152603960248201527f5a4b56657269666965723a2043616c6c6572206973206e6f7420617574686f7260448201527f697a656420746f207265766f6b6520746869732070726f6f660000000000000060648201526084016106a8565b60068101805460ff19166001179055604051339083907f9f269db4ba9dbbfd518b4ee0320bc478722bc61c7200f8a89911c4963e45c01590600090a35050565b3360009081526006602052604090205460ff16610b345760405162461bcd60e51b81526004016106a890611302565b6000818152600360205260408120549003610b615760405162461bcd60e51b81526004016106a890611344565b600090815260036020819052604090912001805460ff60a01b19169055565b6001600160a01b038116600090815260056020908152604091829020805483518184028101840190945280845260609392830182828015610be057602002820191906000526020600020905b815481526020019060010190808311610bcc575b50505050509050919050565b3360009081526006602052604090205460ff16610c1b5760405162461bcd60e51b81526004016106a890611302565b6000818152600360205260408120549003610c485760405162461bcd60e51b81526004016106a890611344565b600090815260036020819052604090912001805460ff60a01b1916600160a01b179055565b3360009081526006602052604081205460ff16610c9c5760405162461bcd60e51b81526004016106a890611302565b6001600160a01b038216610d085760405162461bcd60e51b815260206004820152602d60248201527f5a4b56657269666965723a20496e76616c696420766572696669657220636f6e60448201526c7472616374206164647265737360981b60648201526084016106a8565b60018054906000610d1883611292565b9190505550600060015490506040518060a0016040528082815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f89018190048102820181019092528781529181019190889088908190840183828082843760009201829052509385525050506001600160a01b03861660208084019190915260016040938401819052858352600382529290912083518155908301519091820190610de790826113eb565b5060408201516002820190610dfc90826113eb565b506060820151600390910180546080909301511515600160a01b026001600160a81b03199093166001600160a01b039092169190911791909117905560405181907f36f7eadd002b90e1bdb9d11345529136f8f7a46b5217d5de6e736a8f99776a0e90610e6e908a908a9088906114ab565b60405180910390a29695505050505050565b610e88610ebe565b6001600160a01b038116610eb257604051631e4fbdf760e01b8152600060048201526024016106a8565b610ebb81610eeb565b50565b6000546001600160a01b0316331461072c5760405163118cdaa760e01b81523360048201526024016106a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610f4d57600080fd5b5035919050565b80356001600160a01b0381168114610f6b57600080fd5b919050565b600060208284031215610f8257600080fd5b610f8b82610f54565b9392505050565b6000815180845260005b81811015610fb857602081850181015186830182015201610f9c565b506000602082860101526020601f19601f83011685010191505092915050565b60208152815160208201526000602083015160a06040840152610ffe60c0840182610f92565b90506040840151601f1984830301606085015261101b8282610f92565b91505060018060a01b0360608501511660808401526080840151151560a08401528091505092915050565b6000806040838503121561105957600080fd5b8235915061106960208401610f54565b90509250929050565b6000806040838503121561108557600080fd5b61108e83610f54565b946020939093013593505050565b60008083601f8401126110ae57600080fd5b50813567ffffffffffffffff8111156110c657600080fd5b6020830191508360208285010111156110de57600080fd5b9250929050565b600080600080600080608087890312156110fe57600080fd5b86359550602087013567ffffffffffffffff8082111561111d57600080fd5b6111298a838b0161109c565b9097509550604089013591508082111561114257600080fd5b5061114f89828a0161109c565b979a9699509497949695606090950135949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561119f57835183529284019291840191600101611183565b50909695505050505050565b6000806000806000606086880312156111c357600080fd5b853567ffffffffffffffff808211156111db57600080fd5b6111e789838a0161109c565b9097509550602088013591508082111561120057600080fd5b5061120d8882890161109c565b9094509250611220905060408701610f54565b90509295509295909350565b600181811c9082168061124057607f821691505b60208210810361126057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016112a4576112a461127c565b5060010190565b8385823760008482016000815283858237600093019283525090949350505050565b8082018082111561063f5761063f61127c565b6000602082840312156112f257600080fd5b81518015158114610f8b57600080fd5b60208082526022908201527f5a4b56657269666965723a2043616c6c6572206973206e6f7420616e2061646d60408201526134b760f11b606082015260800190565b60208082526022908201527f5a4b56657269666965723a204369726375697420646f6573206e6f74206578696040820152611cdd60f21b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b601f8211156113e657600081815260208120601f850160051c810160208610156113c35750805b601f850160051c820191505b818110156113e2578281556001016113cf565b5050505b505050565b815167ffffffffffffffff81111561140557611405611386565b61141981611413845461122c565b8461139c565b602080601f83116001811461144e57600084156114365750858301515b600019600386901b1c1916600185901b1785556113e2565b600085815260208120601f198616915b8281101561147d5788860151825594840194600190910190840161145e565b508582101561149b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815282604082015282846060830137600060608483018101919091526001600160a01b03929092166020820152601f909201601f19169091010191905056fea2646970667358221220aa4073eabed993ee0672ff8ab0e3e45d388ec9feda166355372587c009c87cc464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40 DUP2 PUSH2 0x60 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1522 DUP1 PUSH2 0xBF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B6958FF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9D68B434 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9D68B434 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xCBF63E99 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xDA650454 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE8168B5C EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B6958FF EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x962926A8 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x9C73DC54 EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C81587E GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x5C81587E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x6B9A4AE3 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x733B0382 EQ PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11149ADA EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x3997A7E0 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x4FBE55F6 EQ PUSH2 0x26C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D2 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x24A PUSH2 0x71A JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x27F PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E JUMP JUMPDEST PUSH2 0x24A PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x24A PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x36E PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x24A PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x41A PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x452 SWAP1 PUSH2 0x122C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47E SWAP1 PUSH2 0x122C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x4E4 SWAP1 PUSH2 0x122C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x510 SWAP1 PUSH2 0x122C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x532 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x540 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE DUP3 SUB PUSH2 0x60F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x63F JUMP JUMPDEST DUP1 PUSH1 0xC0 ADD MLOAD ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x63F JUMP JUMPDEST DUP1 PUSH1 0xA0 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 LT PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A20496E646578206F7574206F6620626F756E647300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DB PUSH2 0x1266 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x722 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x72C PUSH1 0x0 PUSH2 0xEEB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A2043697263756974206973206E6F74206163746976 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x7B0 DUP4 PUSH2 0x1292 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x7D2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x20 ADD PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP5 TIMESTAMP PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP10 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0xA9665A946BB24359948B6138082DD57F3297D1D76E95E4420DDB59BC1C4F3F91 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x27DF2AFB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 ADDRESS SWAP1 PUSH4 0x4FBE55F6 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SUB PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A2050726F6F6620646F6573206E6F74206578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xA53 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A2043616C6C6572206973206E6F7420617574686F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x697A656420746F207265766F6B6520746869732070726F6F6600000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 SWAP1 PUSH32 0x9F269DB4BA9DBBFD518B4EE0320BC478722BC61C7200F8A89911C4963E45C015 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBCC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A20496E76616C696420766572696669657220636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x74726163742061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD18 DUP4 PUSH2 0x1292 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE DUP6 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD SWAP1 SWAP2 DUP3 ADD SWAP1 PUSH2 0xDE7 SWAP1 DUP3 PUSH2 0x13EB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xDFC SWAP1 DUP3 PUSH2 0x13EB JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x36F7EADD002B90E1BDB9D11345529136F8F7A46B5217D5DE6E736A8F99776A0E SWAP1 PUSH2 0xE6E SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP9 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE88 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0xEBB DUP2 PUSH2 0xEEB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8B DUP3 PUSH2 0xF54 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xF9C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0xA0 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xFFE PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0xF92 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x101B DUP3 DUP3 PUSH2 0xF92 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1059 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1069 PUSH1 0x20 DUP5 ADD PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108E DUP4 PUSH2 0xF54 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x10FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x111D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1129 DUP11 DUP4 DUP12 ADD PUSH2 0x109C JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114F DUP10 DUP3 DUP11 ADD PUSH2 0x109C JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP5 SWAP7 SWAP6 PUSH1 0x60 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x119F JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1183 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E7 DUP10 DUP4 DUP11 ADD PUSH2 0x109C JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120D DUP9 DUP3 DUP10 ADD PUSH2 0x109C JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1220 SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1240 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1260 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x12A4 JUMPI PUSH2 0x12A4 PUSH2 0x127C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP4 DUP6 DUP3 CALLDATACOPY PUSH1 0x0 DUP5 DUP3 ADD PUSH1 0x0 DUP2 MSTORE DUP4 DUP6 DUP3 CALLDATACOPY PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x63F JUMPI PUSH2 0x63F PUSH2 0x127C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A2043616C6C6572206973206E6F7420616E2061646D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x34B7 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A204369726375697420646F6573206E6F7420657869 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1CDD PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x13E6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x13C3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13E2 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13CF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1405 JUMPI PUSH2 0x1405 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x1419 DUP2 PUSH2 0x1413 DUP5 SLOAD PUSH2 0x122C JUMP JUMPDEST DUP5 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x144E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1436 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x147D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x145E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x149B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 DUP5 DUP4 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA BLOCKHASH PUSH20 0xEABED993EE0672FF8AB0E3E45D388EC9FEDA1663 SSTORE CALLDATACOPY 0x25 DUP8 0xC0 MULMOD 0xC8 PUSH29 0xC464736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"271:8795:17:-:0;;;928:113;;;;;;;;;-1:-1:-1;950:10:17;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:22;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1015:10:17::1;1007:19;::::0;;;:7:::1;:19;::::0;;;;:26;;-1:-1:-1;;1007:26:17::1;1029:4;1007:26;::::0;;271:8795;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:22:-;271:8795:17;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":3774,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_1493":{"entryPoint":null,"id":1493,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":3819,"id":146,"parameterSlots":1,"returnSlots":0},"@addAdmin_7498":{"entryPoint":1774,"id":7498,"parameterSlots":1,"returnSlots":0},"@createProof_7647":{"entryPoint":1838,"id":7647,"parameterSlots":6,"returnSlots":1},"@deactivateCircuit_7883":{"entryPoint":2821,"id":7883,"parameterSlots":1,"returnSlots":0},"@getCircuitData_7802":{"entryPoint":989,"id":7802,"parameterSlots":1,"returnSlots":1},"@getProofCount_7830":{"entryPoint":null,"id":7830,"parameterSlots":1,"returnSlots":1},"@getProofData_7773":{"entryPoint":null,"id":7773,"parameterSlots":1,"returnSlots":1},"@getProof_7787":{"entryPoint":null,"id":7787,"parameterSlots":1,"returnSlots":1},"@getProofsByOwner_7816":{"entryPoint":2944,"id":7816,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@reactivateCircuit_7909":{"entryPoint":3052,"id":7909,"parameterSlots":1,"returnSlots":0},"@registerCircuit_7566":{"entryPoint":3181,"id":7566,"parameterSlots":5,"returnSlots":1},"@removeAdmin_7513":{"entryPoint":948,"id":7513,"parameterSlots":1,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1818,"id":98,"parameterSlots":0,"returnSlots":0},"@revokeProof_7758":{"entryPoint":2506,"id":7758,"parameterSlots":1,"returnSlots":0},"@transferOwnership_126":{"entryPoint":3712,"id":126,"parameterSlots":1,"returnSlots":0},"@userProofByIndex_7857":{"entryPoint":1605,"id":7857,"parameterSlots":2,"returnSlots":1},"@verifyProof_7665":{"entryPoint":2400,"id":7665,"parameterSlots":1,"returnSlots":1},"@verifyProof_7709":{"entryPoint":1427,"id":7709,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":3924,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_bytes_calldata":{"entryPoint":4252,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_address":{"entryPoint":3952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4210,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":4832,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address":{"entryPoint":4523,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":3899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":4166,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256":{"entryPoint":4325,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encode_string":{"entryPoint":3986,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_bytes_calldata_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":4779,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4455,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed":{"entryPoint":5291,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_stringliteral_02e77c9f176379ab949bbccaa8d741295c0c0c666a9ee586839aa724457c2611__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_15629865a56d9acfbe58e61fb815431b4ec2d73d30e4b0db8a2834c6f59f1cb5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_23a9e6324888b69a114ac30cc3df040284faf4813aa0cd71fe4c4366d3ba1fab__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bbc26683e9fe139e448e7842d818aef9d0acecb2ed547e65fb1edaf80bbab5c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a74b4031d2a910a98e34382b95905461eda072dea4d856830f05760c4b7e1bc9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ab6eb277a6302005f1e16229a2f7cfc09e651e9e8f55c6abadf49f9879972541__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f70bc21b8c20e6dcae2deb3d8e753cfa4a5527d2b822959d4b007622af85ce6f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_ProofData_$8096_memory_ptr__to_t_struct$_ProofData_$8096_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_struct$_VerifierCircuit_$8080_memory_ptr__to_t_struct$_VerifierCircuit_$8080_memory_ptr__fromStack_reversed":{"entryPoint":4056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4813,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":5020,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":5099,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4652,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":4754,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4732,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":4710,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4998,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13714:22","statements":[{"nodeType":"YulBlock","src":"6:3:22","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:22","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:22"},"nodeType":"YulFunctionCall","src":"132:12:22"},"nodeType":"YulExpressionStatement","src":"132:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:22"},"nodeType":"YulFunctionCall","src":"101:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:22"},"nodeType":"YulFunctionCall","src":"97:32:22"},"nodeType":"YulIf","src":"94:52:22"},{"nodeType":"YulAssignment","src":"155:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:22"},"nodeType":"YulFunctionCall","src":"165:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:22"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:22","type":""}],"src":"14:180:22"},{"body":{"nodeType":"YulBlock","src":"354:504:22","statements":[{"nodeType":"YulAssignment","src":"364:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"376:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"387:3:22","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"372:3:22"},"nodeType":"YulFunctionCall","src":"372:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"364:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"407:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"424:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"418:5:22"},"nodeType":"YulFunctionCall","src":"418:13:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"400:6:22"},"nodeType":"YulFunctionCall","src":"400:32:22"},"nodeType":"YulExpressionStatement","src":"400:32:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"463:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"448:3:22"},"nodeType":"YulFunctionCall","src":"448:20:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"484:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"492:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:22"},"nodeType":"YulFunctionCall","src":"480:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"474:5:22"},"nodeType":"YulFunctionCall","src":"474:24:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"508:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"513:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"504:3:22"},"nodeType":"YulFunctionCall","src":"504:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"517:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"500:3:22"},"nodeType":"YulFunctionCall","src":"500:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"470:3:22"},"nodeType":"YulFunctionCall","src":"470:50:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"441:6:22"},"nodeType":"YulFunctionCall","src":"441:80:22"},"nodeType":"YulExpressionStatement","src":"441:80:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"541:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"552:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"537:3:22"},"nodeType":"YulFunctionCall","src":"537:20:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"569:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"577:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"565:3:22"},"nodeType":"YulFunctionCall","src":"565:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"559:5:22"},"nodeType":"YulFunctionCall","src":"559:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"530:6:22"},"nodeType":"YulFunctionCall","src":"530:54:22"},"nodeType":"YulExpressionStatement","src":"530:54:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"604:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"615:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"600:3:22"},"nodeType":"YulFunctionCall","src":"600:20:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"632:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"640:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"628:3:22"},"nodeType":"YulFunctionCall","src":"628:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"622:5:22"},"nodeType":"YulFunctionCall","src":"622:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"593:6:22"},"nodeType":"YulFunctionCall","src":"593:54:22"},"nodeType":"YulExpressionStatement","src":"593:54:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"667:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"678:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"663:3:22"},"nodeType":"YulFunctionCall","src":"663:20:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"695:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"703:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"691:3:22"},"nodeType":"YulFunctionCall","src":"691:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"685:5:22"},"nodeType":"YulFunctionCall","src":"685:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"656:6:22"},"nodeType":"YulFunctionCall","src":"656:54:22"},"nodeType":"YulExpressionStatement","src":"656:54:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"730:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"741:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"726:3:22"},"nodeType":"YulFunctionCall","src":"726:20:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"758:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"766:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"754:3:22"},"nodeType":"YulFunctionCall","src":"754:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"748:5:22"},"nodeType":"YulFunctionCall","src":"748:24:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"719:6:22"},"nodeType":"YulFunctionCall","src":"719:54:22"},"nodeType":"YulExpressionStatement","src":"719:54:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"793:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"804:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"789:3:22"},"nodeType":"YulFunctionCall","src":"789:20:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"835:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"843:4:22","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"831:3:22"},"nodeType":"YulFunctionCall","src":"831:17:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"825:5:22"},"nodeType":"YulFunctionCall","src":"825:24:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"818:6:22"},"nodeType":"YulFunctionCall","src":"818:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"811:6:22"},"nodeType":"YulFunctionCall","src":"811:40:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"782:6:22"},"nodeType":"YulFunctionCall","src":"782:70:22"},"nodeType":"YulExpressionStatement","src":"782:70:22"}]},"name":"abi_encode_tuple_t_struct$_ProofData_$8096_memory_ptr__to_t_struct$_ProofData_$8096_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"323:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"334:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"345:4:22","type":""}],"src":"199:659:22"},{"body":{"nodeType":"YulBlock","src":"912:124:22","statements":[{"nodeType":"YulAssignment","src":"922:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"944:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"931:12:22"},"nodeType":"YulFunctionCall","src":"931:20:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"922:5:22"}]},{"body":{"nodeType":"YulBlock","src":"1014:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1023:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1026:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1016:6:22"},"nodeType":"YulFunctionCall","src":"1016:12:22"},"nodeType":"YulExpressionStatement","src":"1016:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"973:5:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"984:5:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"999:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1004:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"995:3:22"},"nodeType":"YulFunctionCall","src":"995:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"1008:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"991:3:22"},"nodeType":"YulFunctionCall","src":"991:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"980:3:22"},"nodeType":"YulFunctionCall","src":"980:31:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"970:2:22"},"nodeType":"YulFunctionCall","src":"970:42:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"963:6:22"},"nodeType":"YulFunctionCall","src":"963:50:22"},"nodeType":"YulIf","src":"960:70:22"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"891:6:22","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"902:5:22","type":""}],"src":"863:173:22"},{"body":{"nodeType":"YulBlock","src":"1111:116:22","statements":[{"body":{"nodeType":"YulBlock","src":"1157:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1166:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1169:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1159:6:22"},"nodeType":"YulFunctionCall","src":"1159:12:22"},"nodeType":"YulExpressionStatement","src":"1159:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1132:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"1141:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1128:3:22"},"nodeType":"YulFunctionCall","src":"1128:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"1153:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1124:3:22"},"nodeType":"YulFunctionCall","src":"1124:32:22"},"nodeType":"YulIf","src":"1121:52:22"},{"nodeType":"YulAssignment","src":"1182:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1211:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1192:18:22"},"nodeType":"YulFunctionCall","src":"1192:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1182:6:22"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1077:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1088:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1100:6:22","type":""}],"src":"1041:186:22"},{"body":{"nodeType":"YulBlock","src":"1282:373:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1292:26:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1312:5:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1306:5:22"},"nodeType":"YulFunctionCall","src":"1306:12:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1296:6:22","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1334:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1339:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1327:6:22"},"nodeType":"YulFunctionCall","src":"1327:19:22"},"nodeType":"YulExpressionStatement","src":"1327:19:22"},{"nodeType":"YulVariableDeclaration","src":"1355:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1364:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1359:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"1426:110:22","statements":[{"nodeType":"YulVariableDeclaration","src":"1440:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"1450:4:22","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1444:2:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1482:3:22"},{"name":"i","nodeType":"YulIdentifier","src":"1487:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1478:3:22"},"nodeType":"YulFunctionCall","src":"1478:11:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1491:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1474:3:22"},"nodeType":"YulFunctionCall","src":"1474:20:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1510:5:22"},{"name":"i","nodeType":"YulIdentifier","src":"1517:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1506:3:22"},"nodeType":"YulFunctionCall","src":"1506:13:22"},{"name":"_1","nodeType":"YulIdentifier","src":"1521:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1502:3:22"},"nodeType":"YulFunctionCall","src":"1502:22:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1496:5:22"},"nodeType":"YulFunctionCall","src":"1496:29:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1467:6:22"},"nodeType":"YulFunctionCall","src":"1467:59:22"},"nodeType":"YulExpressionStatement","src":"1467:59:22"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1385:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"1388:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1382:2:22"},"nodeType":"YulFunctionCall","src":"1382:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1396:21:22","statements":[{"nodeType":"YulAssignment","src":"1398:17:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1407:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"1410:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1403:3:22"},"nodeType":"YulFunctionCall","src":"1403:12:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1398:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"1378:3:22","statements":[]},"src":"1374:162:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1560:3:22"},{"name":"length","nodeType":"YulIdentifier","src":"1565:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1556:3:22"},"nodeType":"YulFunctionCall","src":"1556:16:22"},{"kind":"number","nodeType":"YulLiteral","src":"1574:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1552:3:22"},"nodeType":"YulFunctionCall","src":"1552:27:22"},{"kind":"number","nodeType":"YulLiteral","src":"1581:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1545:6:22"},"nodeType":"YulFunctionCall","src":"1545:38:22"},"nodeType":"YulExpressionStatement","src":"1545:38:22"},{"nodeType":"YulAssignment","src":"1592:57:22","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1607:3:22"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1620:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1628:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1616:3:22"},"nodeType":"YulFunctionCall","src":"1616:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1637:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1633:3:22"},"nodeType":"YulFunctionCall","src":"1633:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1612:3:22"},"nodeType":"YulFunctionCall","src":"1612:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1603:3:22"},"nodeType":"YulFunctionCall","src":"1603:39:22"},{"kind":"number","nodeType":"YulLiteral","src":"1644:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:22"},"nodeType":"YulFunctionCall","src":"1599:50:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1592:3:22"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1259:5:22","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1266:3:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1274:3:22","type":""}],"src":"1232:423:22"},{"body":{"nodeType":"YulBlock","src":"1827:631:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1844:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1855:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1837:6:22"},"nodeType":"YulFunctionCall","src":"1837:21:22"},"nodeType":"YulExpressionStatement","src":"1837:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1878:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1889:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1874:3:22"},"nodeType":"YulFunctionCall","src":"1874:18:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1900:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1894:5:22"},"nodeType":"YulFunctionCall","src":"1894:13:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1867:6:22"},"nodeType":"YulFunctionCall","src":"1867:41:22"},"nodeType":"YulExpressionStatement","src":"1867:41:22"},{"nodeType":"YulVariableDeclaration","src":"1917:42:22","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1947:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"1955:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1943:3:22"},"nodeType":"YulFunctionCall","src":"1943:15:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1937:5:22"},"nodeType":"YulFunctionCall","src":"1937:22:22"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"1921:12:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1979:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"1990:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1975:3:22"},"nodeType":"YulFunctionCall","src":"1975:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"1995:4:22","type":"","value":"0xa0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1968:6:22"},"nodeType":"YulFunctionCall","src":"1968:32:22"},"nodeType":"YulExpressionStatement","src":"1968:32:22"},{"nodeType":"YulVariableDeclaration","src":"2009:66:22","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"2041:12:22"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2059:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2070:3:22","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2055:3:22"},"nodeType":"YulFunctionCall","src":"2055:19:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2023:17:22"},"nodeType":"YulFunctionCall","src":"2023:52:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2013:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2084:44:22","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2116:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2124:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2112:3:22"},"nodeType":"YulFunctionCall","src":"2112:15:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2106:5:22"},"nodeType":"YulFunctionCall","src":"2106:22:22"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"2088:14:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2148:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2159:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2144:3:22"},"nodeType":"YulFunctionCall","src":"2144:18:22"},{"arguments":[{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2172:6:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2180:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2168:3:22"},"nodeType":"YulFunctionCall","src":"2168:22:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2196:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2192:3:22"},"nodeType":"YulFunctionCall","src":"2192:7:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2164:3:22"},"nodeType":"YulFunctionCall","src":"2164:36:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2137:6:22"},"nodeType":"YulFunctionCall","src":"2137:64:22"},"nodeType":"YulExpressionStatement","src":"2137:64:22"},{"nodeType":"YulVariableDeclaration","src":"2210:55:22","value":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"2242:14:22"},{"name":"tail_1","nodeType":"YulIdentifier","src":"2258:6:22"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"2224:17:22"},"nodeType":"YulFunctionCall","src":"2224:41:22"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"2214:6:22","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2285:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2296:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2281:3:22"},"nodeType":"YulFunctionCall","src":"2281:19:22"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2316:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2324:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2312:3:22"},"nodeType":"YulFunctionCall","src":"2312:15:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2306:5:22"},"nodeType":"YulFunctionCall","src":"2306:22:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2338:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2343:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2334:3:22"},"nodeType":"YulFunctionCall","src":"2334:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"2347:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2330:3:22"},"nodeType":"YulFunctionCall","src":"2330:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2302:3:22"},"nodeType":"YulFunctionCall","src":"2302:48:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2274:6:22"},"nodeType":"YulFunctionCall","src":"2274:77:22"},"nodeType":"YulExpressionStatement","src":"2274:77:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2371:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2382:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2367:3:22"},"nodeType":"YulFunctionCall","src":"2367:20:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2413:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"2421:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2409:3:22"},"nodeType":"YulFunctionCall","src":"2409:16:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2403:5:22"},"nodeType":"YulFunctionCall","src":"2403:23:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2396:6:22"},"nodeType":"YulFunctionCall","src":"2396:31:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2389:6:22"},"nodeType":"YulFunctionCall","src":"2389:39:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2360:6:22"},"nodeType":"YulFunctionCall","src":"2360:69:22"},"nodeType":"YulExpressionStatement","src":"2360:69:22"},{"nodeType":"YulAssignment","src":"2438:14:22","value":{"name":"tail_2","nodeType":"YulIdentifier","src":"2446:6:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2438:4:22"}]}]},"name":"abi_encode_tuple_t_struct$_VerifierCircuit_$8080_memory_ptr__to_t_struct$_VerifierCircuit_$8080_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1796:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1807:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1818:4:22","type":""}],"src":"1660:798:22"},{"body":{"nodeType":"YulBlock","src":"2550:167:22","statements":[{"body":{"nodeType":"YulBlock","src":"2596:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2605:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2608:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2598:6:22"},"nodeType":"YulFunctionCall","src":"2598:12:22"},"nodeType":"YulExpressionStatement","src":"2598:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2571:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"2580:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2567:3:22"},"nodeType":"YulFunctionCall","src":"2567:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"2592:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2563:3:22"},"nodeType":"YulFunctionCall","src":"2563:32:22"},"nodeType":"YulIf","src":"2560:52:22"},{"nodeType":"YulAssignment","src":"2621:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2644:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2631:12:22"},"nodeType":"YulFunctionCall","src":"2631:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2621:6:22"}]},{"nodeType":"YulAssignment","src":"2663:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2696:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2707:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2692:3:22"},"nodeType":"YulFunctionCall","src":"2692:18:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2673:18:22"},"nodeType":"YulFunctionCall","src":"2673:38:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2663:6:22"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2508:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2519:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2531:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2539:6:22","type":""}],"src":"2463:254:22"},{"body":{"nodeType":"YulBlock","src":"2817:92:22","statements":[{"nodeType":"YulAssignment","src":"2827:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2839:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"2850:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2835:3:22"},"nodeType":"YulFunctionCall","src":"2835:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2827:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:22"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2894:6:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2887:6:22"},"nodeType":"YulFunctionCall","src":"2887:14:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2880:6:22"},"nodeType":"YulFunctionCall","src":"2880:22:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2862:6:22"},"nodeType":"YulFunctionCall","src":"2862:41:22"},"nodeType":"YulExpressionStatement","src":"2862:41:22"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2786:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2797:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2808:4:22","type":""}],"src":"2722:187:22"},{"body":{"nodeType":"YulBlock","src":"3001:167:22","statements":[{"body":{"nodeType":"YulBlock","src":"3047:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3056:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3059:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3049:6:22"},"nodeType":"YulFunctionCall","src":"3049:12:22"},"nodeType":"YulExpressionStatement","src":"3049:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3022:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3031:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3018:3:22"},"nodeType":"YulFunctionCall","src":"3018:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3043:2:22","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3014:3:22"},"nodeType":"YulFunctionCall","src":"3014:32:22"},"nodeType":"YulIf","src":"3011:52:22"},{"nodeType":"YulAssignment","src":"3072:39:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3101:9:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3082:18:22"},"nodeType":"YulFunctionCall","src":"3082:29:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3072:6:22"}]},{"nodeType":"YulAssignment","src":"3120:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3147:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3158:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3143:3:22"},"nodeType":"YulFunctionCall","src":"3143:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3130:12:22"},"nodeType":"YulFunctionCall","src":"3130:32:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3120:6:22"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2959:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2970:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2982:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2990:6:22","type":""}],"src":"2914:254:22"},{"body":{"nodeType":"YulBlock","src":"3274:76:22","statements":[{"nodeType":"YulAssignment","src":"3284:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3296:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"3307:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3292:3:22"},"nodeType":"YulFunctionCall","src":"3292:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3284:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3326:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"3337:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3319:6:22"},"nodeType":"YulFunctionCall","src":"3319:25:22"},"nodeType":"YulExpressionStatement","src":"3319:25:22"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3243:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3254:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3265:4:22","type":""}],"src":"3173:177:22"},{"body":{"nodeType":"YulBlock","src":"3427:275:22","statements":[{"body":{"nodeType":"YulBlock","src":"3476:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3485:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3488:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3478:6:22"},"nodeType":"YulFunctionCall","src":"3478:12:22"},"nodeType":"YulExpressionStatement","src":"3478:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3455:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3463:4:22","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3451:3:22"},"nodeType":"YulFunctionCall","src":"3451:17:22"},{"name":"end","nodeType":"YulIdentifier","src":"3470:3:22"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3447:3:22"},"nodeType":"YulFunctionCall","src":"3447:27:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3440:6:22"},"nodeType":"YulFunctionCall","src":"3440:35:22"},"nodeType":"YulIf","src":"3437:55:22"},{"nodeType":"YulAssignment","src":"3501:30:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3524:6:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3511:12:22"},"nodeType":"YulFunctionCall","src":"3511:20:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3501:6:22"}]},{"body":{"nodeType":"YulBlock","src":"3574:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3583:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3586:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3576:6:22"},"nodeType":"YulFunctionCall","src":"3576:12:22"},"nodeType":"YulExpressionStatement","src":"3576:12:22"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3546:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3554:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3543:2:22"},"nodeType":"YulFunctionCall","src":"3543:30:22"},"nodeType":"YulIf","src":"3540:50:22"},{"nodeType":"YulAssignment","src":"3599:29:22","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3615:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3611:3:22"},"nodeType":"YulFunctionCall","src":"3611:17:22"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"3599:8:22"}]},{"body":{"nodeType":"YulBlock","src":"3680:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3689:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3692:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3682:6:22"},"nodeType":"YulFunctionCall","src":"3682:12:22"},"nodeType":"YulExpressionStatement","src":"3682:12:22"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3651:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"3659:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:22"},"nodeType":"YulFunctionCall","src":"3647:19:22"},{"kind":"number","nodeType":"YulLiteral","src":"3668:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3643:3:22"},"nodeType":"YulFunctionCall","src":"3643:30:22"},{"name":"end","nodeType":"YulIdentifier","src":"3675:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3640:2:22"},"nodeType":"YulFunctionCall","src":"3640:39:22"},"nodeType":"YulIf","src":"3637:59:22"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3390:6:22","type":""},{"name":"end","nodeType":"YulTypedName","src":"3398:3:22","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"3406:8:22","type":""},{"name":"length","nodeType":"YulTypedName","src":"3416:6:22","type":""}],"src":"3355:347:22"},{"body":{"nodeType":"YulBlock","src":"3866:695:22","statements":[{"body":{"nodeType":"YulBlock","src":"3913:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3922:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3925:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3915:6:22"},"nodeType":"YulFunctionCall","src":"3915:12:22"},"nodeType":"YulExpressionStatement","src":"3915:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3887:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"3896:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3883:3:22"},"nodeType":"YulFunctionCall","src":"3883:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"3908:3:22","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3879:3:22"},"nodeType":"YulFunctionCall","src":"3879:33:22"},"nodeType":"YulIf","src":"3876:53:22"},{"nodeType":"YulAssignment","src":"3938:33:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3961:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3948:12:22"},"nodeType":"YulFunctionCall","src":"3948:23:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3938:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"3980:46:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4011:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4022:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4007:3:22"},"nodeType":"YulFunctionCall","src":"4007:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3994:12:22"},"nodeType":"YulFunctionCall","src":"3994:32:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3984:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4035:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4045:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4039:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4090:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4099:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4102:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4092:6:22"},"nodeType":"YulFunctionCall","src":"4092:12:22"},"nodeType":"YulExpressionStatement","src":"4092:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4078:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"4086:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4075:2:22"},"nodeType":"YulFunctionCall","src":"4075:14:22"},"nodeType":"YulIf","src":"4072:34:22"},{"nodeType":"YulVariableDeclaration","src":"4115:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4171:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"4182:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4167:3:22"},"nodeType":"YulFunctionCall","src":"4167:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4191:7:22"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4141:25:22"},"nodeType":"YulFunctionCall","src":"4141:58:22"},"variables":[{"name":"value1_1","nodeType":"YulTypedName","src":"4119:8:22","type":""},{"name":"value2_1","nodeType":"YulTypedName","src":"4129:8:22","type":""}]},{"nodeType":"YulAssignment","src":"4208:18:22","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"4218:8:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4208:6:22"}]},{"nodeType":"YulAssignment","src":"4235:18:22","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"4245:8:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4235:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"4262:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4295:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4306:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4291:3:22"},"nodeType":"YulFunctionCall","src":"4291:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4278:12:22"},"nodeType":"YulFunctionCall","src":"4278:32:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4266:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"4339:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4348:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4351:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4341:6:22"},"nodeType":"YulFunctionCall","src":"4341:12:22"},"nodeType":"YulExpressionStatement","src":"4341:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4325:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"4335:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4322:2:22"},"nodeType":"YulFunctionCall","src":"4322:16:22"},"nodeType":"YulIf","src":"4319:36:22"},{"nodeType":"YulVariableDeclaration","src":"4364:86:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4431:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:22"},"nodeType":"YulFunctionCall","src":"4416:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4442:7:22"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"4390:25:22"},"nodeType":"YulFunctionCall","src":"4390:60:22"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"4368:8:22","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"4378:8:22","type":""}]},{"nodeType":"YulAssignment","src":"4459:18:22","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"4469:8:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4459:6:22"}]},{"nodeType":"YulAssignment","src":"4486:18:22","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"4496:8:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4486:6:22"}]},{"nodeType":"YulAssignment","src":"4513:42:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4540:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4551:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4536:3:22"},"nodeType":"YulFunctionCall","src":"4536:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4523:12:22"},"nodeType":"YulFunctionCall","src":"4523:32:22"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"4513:6:22"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3792:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3803:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3815:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3823:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3831:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3839:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3847:6:22","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3855:6:22","type":""}],"src":"3707:854:22"},{"body":{"nodeType":"YulBlock","src":"4667:102:22","statements":[{"nodeType":"YulAssignment","src":"4677:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4689:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"4700:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4685:3:22"},"nodeType":"YulFunctionCall","src":"4685:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4677:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4719:9:22"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4734:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4750:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4755:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4746:3:22"},"nodeType":"YulFunctionCall","src":"4746:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"4759:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4742:3:22"},"nodeType":"YulFunctionCall","src":"4742:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4730:3:22"},"nodeType":"YulFunctionCall","src":"4730:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4712:6:22"},"nodeType":"YulFunctionCall","src":"4712:51:22"},"nodeType":"YulExpressionStatement","src":"4712:51:22"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4636:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4647:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4658:4:22","type":""}],"src":"4566:203:22"},{"body":{"nodeType":"YulBlock","src":"4925:481:22","statements":[{"nodeType":"YulVariableDeclaration","src":"4935:12:22","value":{"kind":"number","nodeType":"YulLiteral","src":"4945:2:22","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4939:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4956:32:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4974:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"4985:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4970:3:22"},"nodeType":"YulFunctionCall","src":"4970:18:22"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4960:6:22","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5004:9:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5015:2:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4997:6:22"},"nodeType":"YulFunctionCall","src":"4997:21:22"},"nodeType":"YulExpressionStatement","src":"4997:21:22"},{"nodeType":"YulVariableDeclaration","src":"5027:17:22","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"5038:6:22"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"5031:3:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5053:27:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5073:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5067:5:22"},"nodeType":"YulFunctionCall","src":"5067:13:22"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5057:6:22","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"5096:6:22"},{"name":"length","nodeType":"YulIdentifier","src":"5104:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5089:6:22"},"nodeType":"YulFunctionCall","src":"5089:22:22"},"nodeType":"YulExpressionStatement","src":"5089:22:22"},{"nodeType":"YulAssignment","src":"5120:25:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5131:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5142:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5127:3:22"},"nodeType":"YulFunctionCall","src":"5127:18:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5120:3:22"}]},{"nodeType":"YulVariableDeclaration","src":"5154:29:22","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5172:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5180:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5168:3:22"},"nodeType":"YulFunctionCall","src":"5168:15:22"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"5158:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5192:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5201:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5196:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5260:120:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5281:3:22"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5292:6:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5286:5:22"},"nodeType":"YulFunctionCall","src":"5286:13:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5274:6:22"},"nodeType":"YulFunctionCall","src":"5274:26:22"},"nodeType":"YulExpressionStatement","src":"5274:26:22"},{"nodeType":"YulAssignment","src":"5313:19:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5324:3:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5329:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5320:3:22"},"nodeType":"YulFunctionCall","src":"5320:12:22"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5313:3:22"}]},{"nodeType":"YulAssignment","src":"5345:25:22","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5359:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5367:2:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5355:3:22"},"nodeType":"YulFunctionCall","src":"5355:15:22"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5345:6:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5222:1:22"},{"name":"length","nodeType":"YulIdentifier","src":"5225:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5219:2:22"},"nodeType":"YulFunctionCall","src":"5219:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5233:18:22","statements":[{"nodeType":"YulAssignment","src":"5235:14:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5244:1:22"},{"kind":"number","nodeType":"YulLiteral","src":"5247:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5240:3:22"},"nodeType":"YulFunctionCall","src":"5240:9:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5235:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"5215:3:22","statements":[]},"src":"5211:169:22"},{"nodeType":"YulAssignment","src":"5389:11:22","value":{"name":"pos","nodeType":"YulIdentifier","src":"5397:3:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5389:4:22"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4894:9:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4905:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4916:4:22","type":""}],"src":"4774:632:22"},{"body":{"nodeType":"YulBlock","src":"5555:649:22","statements":[{"body":{"nodeType":"YulBlock","src":"5601:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5610:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5613:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5603:6:22"},"nodeType":"YulFunctionCall","src":"5603:12:22"},"nodeType":"YulExpressionStatement","src":"5603:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5576:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"5585:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5572:3:22"},"nodeType":"YulFunctionCall","src":"5572:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"5597:2:22","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5568:3:22"},"nodeType":"YulFunctionCall","src":"5568:32:22"},"nodeType":"YulIf","src":"5565:52:22"},{"nodeType":"YulVariableDeclaration","src":"5626:37:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5653:9:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5640:12:22"},"nodeType":"YulFunctionCall","src":"5640:23:22"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5630:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5672:28:22","value":{"kind":"number","nodeType":"YulLiteral","src":"5682:18:22","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5676:2:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5727:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5736:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5739:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5729:6:22"},"nodeType":"YulFunctionCall","src":"5729:12:22"},"nodeType":"YulExpressionStatement","src":"5729:12:22"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5715:6:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5723:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5712:2:22"},"nodeType":"YulFunctionCall","src":"5712:14:22"},"nodeType":"YulIf","src":"5709:34:22"},{"nodeType":"YulVariableDeclaration","src":"5752:84:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5808:9:22"},{"name":"offset","nodeType":"YulIdentifier","src":"5819:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5804:3:22"},"nodeType":"YulFunctionCall","src":"5804:22:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5828:7:22"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"5778:25:22"},"nodeType":"YulFunctionCall","src":"5778:58:22"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"5756:8:22","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"5766:8:22","type":""}]},{"nodeType":"YulAssignment","src":"5845:18:22","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"5855:8:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5845:6:22"}]},{"nodeType":"YulAssignment","src":"5872:18:22","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"5882:8:22"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5872:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"5899:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5932:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"5943:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5928:3:22"},"nodeType":"YulFunctionCall","src":"5928:18:22"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5915:12:22"},"nodeType":"YulFunctionCall","src":"5915:32:22"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"5903:8:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"5976:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5985:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5988:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5978:6:22"},"nodeType":"YulFunctionCall","src":"5978:12:22"},"nodeType":"YulExpressionStatement","src":"5978:12:22"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"5962:8:22"},{"name":"_1","nodeType":"YulIdentifier","src":"5972:2:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5959:2:22"},"nodeType":"YulFunctionCall","src":"5959:16:22"},"nodeType":"YulIf","src":"5956:36:22"},{"nodeType":"YulVariableDeclaration","src":"6001:86:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6057:9:22"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6068:8:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6053:3:22"},"nodeType":"YulFunctionCall","src":"6053:24:22"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6079:7:22"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"6027:25:22"},"nodeType":"YulFunctionCall","src":"6027:60:22"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"6005:8:22","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"6015:8:22","type":""}]},{"nodeType":"YulAssignment","src":"6096:18:22","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"6106:8:22"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6096:6:22"}]},{"nodeType":"YulAssignment","src":"6123:18:22","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"6133:8:22"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6123:6:22"}]},{"nodeType":"YulAssignment","src":"6150:48:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6183:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6194:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6179:3:22"},"nodeType":"YulFunctionCall","src":"6179:18:22"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6160:18:22"},"nodeType":"YulFunctionCall","src":"6160:38:22"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6150:6:22"}]}]},"name":"abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5489:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5500:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5512:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5520:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5528:6:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5536:6:22","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5544:6:22","type":""}],"src":"5411:793:22"},{"body":{"nodeType":"YulBlock","src":"6264:325:22","statements":[{"nodeType":"YulAssignment","src":"6274:22:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6288:1:22","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6291:4:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6284:3:22"},"nodeType":"YulFunctionCall","src":"6284:12:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6274:6:22"}]},{"nodeType":"YulVariableDeclaration","src":"6305:38:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6335:4:22"},{"kind":"number","nodeType":"YulLiteral","src":"6341:1:22","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6331:3:22"},"nodeType":"YulFunctionCall","src":"6331:12:22"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6309:18:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"6382:31:22","statements":[{"nodeType":"YulAssignment","src":"6384:27:22","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6398:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6406:4:22","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6394:3:22"},"nodeType":"YulFunctionCall","src":"6394:17:22"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6384:6:22"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6362:18:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6355:6:22"},"nodeType":"YulFunctionCall","src":"6355:26:22"},"nodeType":"YulIf","src":"6352:61:22"},{"body":{"nodeType":"YulBlock","src":"6472:111:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6493:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6500:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6505:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6496:3:22"},"nodeType":"YulFunctionCall","src":"6496:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6486:6:22"},"nodeType":"YulFunctionCall","src":"6486:31:22"},"nodeType":"YulExpressionStatement","src":"6486:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6537:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6540:4:22","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6530:6:22"},"nodeType":"YulFunctionCall","src":"6530:15:22"},"nodeType":"YulExpressionStatement","src":"6530:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6565:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6568:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6558:6:22"},"nodeType":"YulFunctionCall","src":"6558:15:22"},"nodeType":"YulExpressionStatement","src":"6558:15:22"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6428:18:22"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6451:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"6459:2:22","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6448:2:22"},"nodeType":"YulFunctionCall","src":"6448:14:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6425:2:22"},"nodeType":"YulFunctionCall","src":"6425:38:22"},"nodeType":"YulIf","src":"6422:161:22"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6244:4:22","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6253:6:22","type":""}],"src":"6209:380:22"},{"body":{"nodeType":"YulBlock","src":"6768:181:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6785:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6796:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6778:6:22"},"nodeType":"YulFunctionCall","src":"6778:21:22"},"nodeType":"YulExpressionStatement","src":"6778:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6819:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6830:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6815:3:22"},"nodeType":"YulFunctionCall","src":"6815:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"6835:2:22","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6808:6:22"},"nodeType":"YulFunctionCall","src":"6808:30:22"},"nodeType":"YulExpressionStatement","src":"6808:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6858:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6869:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6854:3:22"},"nodeType":"YulFunctionCall","src":"6854:18:22"},{"hexValue":"5a4b56657269666965723a20496e646578206f7574206f6620626f756e6473","kind":"string","nodeType":"YulLiteral","src":"6874:33:22","type":"","value":"ZKVerifier: Index out of bounds"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6847:6:22"},"nodeType":"YulFunctionCall","src":"6847:61:22"},"nodeType":"YulExpressionStatement","src":"6847:61:22"},{"nodeType":"YulAssignment","src":"6917:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6929:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"6940:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:22"},"nodeType":"YulFunctionCall","src":"6925:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6917:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_a74b4031d2a910a98e34382b95905461eda072dea4d856830f05760c4b7e1bc9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6745:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6759:4:22","type":""}],"src":"6594:355:22"},{"body":{"nodeType":"YulBlock","src":"6986:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7003:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7010:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7015:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7006:3:22"},"nodeType":"YulFunctionCall","src":"7006:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6996:6:22"},"nodeType":"YulFunctionCall","src":"6996:31:22"},"nodeType":"YulExpressionStatement","src":"6996:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7046:4:22","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7036:6:22"},"nodeType":"YulFunctionCall","src":"7036:15:22"},"nodeType":"YulExpressionStatement","src":"7036:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7067:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7070:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7060:6:22"},"nodeType":"YulFunctionCall","src":"7060:15:22"},"nodeType":"YulExpressionStatement","src":"7060:15:22"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6954:127:22"},{"body":{"nodeType":"YulBlock","src":"7260:223:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7277:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7288:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7270:6:22"},"nodeType":"YulFunctionCall","src":"7270:21:22"},"nodeType":"YulExpressionStatement","src":"7270:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7311:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7322:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7307:3:22"},"nodeType":"YulFunctionCall","src":"7307:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"7327:2:22","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7300:6:22"},"nodeType":"YulFunctionCall","src":"7300:30:22"},"nodeType":"YulExpressionStatement","src":"7300:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7350:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7361:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7346:3:22"},"nodeType":"YulFunctionCall","src":"7346:18:22"},{"hexValue":"5a4b56657269666965723a2043697263756974206973206e6f74206163746976","kind":"string","nodeType":"YulLiteral","src":"7366:34:22","type":"","value":"ZKVerifier: Circuit is not activ"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7339:6:22"},"nodeType":"YulFunctionCall","src":"7339:62:22"},"nodeType":"YulExpressionStatement","src":"7339:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7421:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7432:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7417:3:22"},"nodeType":"YulFunctionCall","src":"7417:18:22"},{"hexValue":"65","kind":"string","nodeType":"YulLiteral","src":"7437:3:22","type":"","value":"e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7410:6:22"},"nodeType":"YulFunctionCall","src":"7410:31:22"},"nodeType":"YulExpressionStatement","src":"7410:31:22"},{"nodeType":"YulAssignment","src":"7450:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7462:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"7473:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7458:3:22"},"nodeType":"YulFunctionCall","src":"7458:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7450:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bbc26683e9fe139e448e7842d818aef9d0acecb2ed547e65fb1edaf80bbab5c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7237:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7251:4:22","type":""}],"src":"7086:397:22"},{"body":{"nodeType":"YulBlock","src":"7520:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7537:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7544:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7549:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7540:3:22"},"nodeType":"YulFunctionCall","src":"7540:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7530:6:22"},"nodeType":"YulFunctionCall","src":"7530:31:22"},"nodeType":"YulExpressionStatement","src":"7530:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7577:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7580:4:22","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7570:6:22"},"nodeType":"YulFunctionCall","src":"7570:15:22"},"nodeType":"YulExpressionStatement","src":"7570:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7601:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7604:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7594:6:22"},"nodeType":"YulFunctionCall","src":"7594:15:22"},"nodeType":"YulExpressionStatement","src":"7594:15:22"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"7488:127:22"},{"body":{"nodeType":"YulBlock","src":"7667:88:22","statements":[{"body":{"nodeType":"YulBlock","src":"7698:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7700:16:22"},"nodeType":"YulFunctionCall","src":"7700:18:22"},"nodeType":"YulExpressionStatement","src":"7700:18:22"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7683:5:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7694:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7690:3:22"},"nodeType":"YulFunctionCall","src":"7690:6:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7680:2:22"},"nodeType":"YulFunctionCall","src":"7680:17:22"},"nodeType":"YulIf","src":"7677:43:22"},{"nodeType":"YulAssignment","src":"7729:20:22","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7740:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"7747:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7736:3:22"},"nodeType":"YulFunctionCall","src":"7736:13:22"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7729:3:22"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7649:5:22","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7659:3:22","type":""}],"src":"7620:135:22"},{"body":{"nodeType":"YulBlock","src":"7963:221:22","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7986:3:22"},{"name":"value0","nodeType":"YulIdentifier","src":"7991:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"7999:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7973:12:22"},"nodeType":"YulFunctionCall","src":"7973:33:22"},"nodeType":"YulExpressionStatement","src":"7973:33:22"},{"nodeType":"YulVariableDeclaration","src":"8015:26:22","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8029:3:22"},{"name":"value1","nodeType":"YulIdentifier","src":"8034:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8025:3:22"},"nodeType":"YulFunctionCall","src":"8025:16:22"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"8019:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8057:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"8061:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8050:6:22"},"nodeType":"YulFunctionCall","src":"8050:13:22"},"nodeType":"YulExpressionStatement","src":"8050:13:22"},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8085:2:22"},{"name":"value2","nodeType":"YulIdentifier","src":"8089:6:22"},{"name":"value3","nodeType":"YulIdentifier","src":"8097:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8072:12:22"},"nodeType":"YulFunctionCall","src":"8072:32:22"},"nodeType":"YulExpressionStatement","src":"8072:32:22"},{"nodeType":"YulVariableDeclaration","src":"8113:25:22","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"8127:2:22"},{"name":"value3","nodeType":"YulIdentifier","src":"8131:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8123:3:22"},"nodeType":"YulFunctionCall","src":"8123:15:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"8117:2:22","type":""}]},{"expression":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"8154:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"8158:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8147:6:22"},"nodeType":"YulFunctionCall","src":"8147:13:22"},"nodeType":"YulExpressionStatement","src":"8147:13:22"},{"nodeType":"YulAssignment","src":"8169:9:22","value":{"name":"_2","nodeType":"YulIdentifier","src":"8176:2:22"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8169:3:22"}]}]},"name":"abi_encode_tuple_packed_t_bytes_calldata_ptr_t_bytes_calldata_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7915:3:22","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7920:6:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7928:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7936:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7944:6:22","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7955:3:22","type":""}],"src":"7760:424:22"},{"body":{"nodeType":"YulBlock","src":"8237:77:22","statements":[{"nodeType":"YulAssignment","src":"8247:16:22","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8258:1:22"},{"name":"y","nodeType":"YulIdentifier","src":"8261:1:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8254:3:22"},"nodeType":"YulFunctionCall","src":"8254:9:22"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8247:3:22"}]},{"body":{"nodeType":"YulBlock","src":"8286:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8288:16:22"},"nodeType":"YulFunctionCall","src":"8288:18:22"},"nodeType":"YulExpressionStatement","src":"8288:18:22"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8278:1:22"},{"name":"sum","nodeType":"YulIdentifier","src":"8281:3:22"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8275:2:22"},"nodeType":"YulFunctionCall","src":"8275:10:22"},"nodeType":"YulIf","src":"8272:36:22"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8220:1:22","type":""},{"name":"y","nodeType":"YulTypedName","src":"8223:1:22","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8229:3:22","type":""}],"src":"8189:125:22"},{"body":{"nodeType":"YulBlock","src":"8448:145:22","statements":[{"nodeType":"YulAssignment","src":"8458:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8470:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8481:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8466:3:22"},"nodeType":"YulFunctionCall","src":"8466:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8458:4:22"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8500:9:22"},{"name":"value0","nodeType":"YulIdentifier","src":"8511:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8493:6:22"},"nodeType":"YulFunctionCall","src":"8493:25:22"},"nodeType":"YulExpressionStatement","src":"8493:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8538:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"8549:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8534:3:22"},"nodeType":"YulFunctionCall","src":"8534:18:22"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"8558:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8574:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8579:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8570:3:22"},"nodeType":"YulFunctionCall","src":"8570:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"8583:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8566:3:22"},"nodeType":"YulFunctionCall","src":"8566:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8554:3:22"},"nodeType":"YulFunctionCall","src":"8554:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8527:6:22"},"nodeType":"YulFunctionCall","src":"8527:60:22"},"nodeType":"YulExpressionStatement","src":"8527:60:22"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8409:9:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8420:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8428:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8439:4:22","type":""}],"src":"8319:274:22"},{"body":{"nodeType":"YulBlock","src":"8676:199:22","statements":[{"body":{"nodeType":"YulBlock","src":"8722:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8731:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8734:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8724:6:22"},"nodeType":"YulFunctionCall","src":"8724:12:22"},"nodeType":"YulExpressionStatement","src":"8724:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8697:7:22"},{"name":"headStart","nodeType":"YulIdentifier","src":"8706:9:22"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8693:3:22"},"nodeType":"YulFunctionCall","src":"8693:23:22"},{"kind":"number","nodeType":"YulLiteral","src":"8718:2:22","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8689:3:22"},"nodeType":"YulFunctionCall","src":"8689:32:22"},"nodeType":"YulIf","src":"8686:52:22"},{"nodeType":"YulVariableDeclaration","src":"8747:29:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8766:9:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8760:5:22"},"nodeType":"YulFunctionCall","src":"8760:16:22"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8751:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"8829:16:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8838:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8841:1:22","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8831:6:22"},"nodeType":"YulFunctionCall","src":"8831:12:22"},"nodeType":"YulExpressionStatement","src":"8831:12:22"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8798:5:22"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8819:5:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8812:6:22"},"nodeType":"YulFunctionCall","src":"8812:13:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8805:6:22"},"nodeType":"YulFunctionCall","src":"8805:21:22"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8795:2:22"},"nodeType":"YulFunctionCall","src":"8795:32:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8788:6:22"},"nodeType":"YulFunctionCall","src":"8788:40:22"},"nodeType":"YulIf","src":"8785:60:22"},{"nodeType":"YulAssignment","src":"8854:15:22","value":{"name":"value","nodeType":"YulIdentifier","src":"8864:5:22"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8854:6:22"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8642:9:22","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8653:7:22","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8665:6:22","type":""}],"src":"8598:277:22"},{"body":{"nodeType":"YulBlock","src":"9054:182:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9071:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9082:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9064:6:22"},"nodeType":"YulFunctionCall","src":"9064:21:22"},"nodeType":"YulExpressionStatement","src":"9064:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9105:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9116:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9101:3:22"},"nodeType":"YulFunctionCall","src":"9101:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"9121:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9094:6:22"},"nodeType":"YulFunctionCall","src":"9094:30:22"},"nodeType":"YulExpressionStatement","src":"9094:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9144:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9155:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9140:3:22"},"nodeType":"YulFunctionCall","src":"9140:18:22"},{"hexValue":"5a4b56657269666965723a2050726f6f6620646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"9160:34:22","type":"","value":"ZKVerifier: Proof does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9133:6:22"},"nodeType":"YulFunctionCall","src":"9133:62:22"},"nodeType":"YulExpressionStatement","src":"9133:62:22"},{"nodeType":"YulAssignment","src":"9204:26:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9216:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9227:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9212:3:22"},"nodeType":"YulFunctionCall","src":"9212:18:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9204:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_ab6eb277a6302005f1e16229a2f7cfc09e651e9e8f55c6abadf49f9879972541__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9031:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9045:4:22","type":""}],"src":"8880:356:22"},{"body":{"nodeType":"YulBlock","src":"9415:247:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9432:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9443:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9425:6:22"},"nodeType":"YulFunctionCall","src":"9425:21:22"},"nodeType":"YulExpressionStatement","src":"9425:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9466:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9477:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9462:3:22"},"nodeType":"YulFunctionCall","src":"9462:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"9482:2:22","type":"","value":"57"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9455:6:22"},"nodeType":"YulFunctionCall","src":"9455:30:22"},"nodeType":"YulExpressionStatement","src":"9455:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9505:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9516:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9501:3:22"},"nodeType":"YulFunctionCall","src":"9501:18:22"},{"hexValue":"5a4b56657269666965723a2043616c6c6572206973206e6f7420617574686f72","kind":"string","nodeType":"YulLiteral","src":"9521:34:22","type":"","value":"ZKVerifier: Caller is not author"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9494:6:22"},"nodeType":"YulFunctionCall","src":"9494:62:22"},"nodeType":"YulExpressionStatement","src":"9494:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9576:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9587:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9572:3:22"},"nodeType":"YulFunctionCall","src":"9572:18:22"},{"hexValue":"697a656420746f207265766f6b6520746869732070726f6f66","kind":"string","nodeType":"YulLiteral","src":"9592:27:22","type":"","value":"ized to revoke this proof"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9565:6:22"},"nodeType":"YulFunctionCall","src":"9565:55:22"},"nodeType":"YulExpressionStatement","src":"9565:55:22"},{"nodeType":"YulAssignment","src":"9629:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9641:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9652:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9637:3:22"},"nodeType":"YulFunctionCall","src":"9637:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9629:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_02e77c9f176379ab949bbccaa8d741295c0c0c666a9ee586839aa724457c2611__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9392:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9406:4:22","type":""}],"src":"9241:421:22"},{"body":{"nodeType":"YulBlock","src":"9841:224:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9858:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9869:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9851:6:22"},"nodeType":"YulFunctionCall","src":"9851:21:22"},"nodeType":"YulExpressionStatement","src":"9851:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9892:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9903:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9888:3:22"},"nodeType":"YulFunctionCall","src":"9888:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"9908:2:22","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9881:6:22"},"nodeType":"YulFunctionCall","src":"9881:30:22"},"nodeType":"YulExpressionStatement","src":"9881:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9931:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"9942:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9927:3:22"},"nodeType":"YulFunctionCall","src":"9927:18:22"},{"hexValue":"5a4b56657269666965723a2043616c6c6572206973206e6f7420616e2061646d","kind":"string","nodeType":"YulLiteral","src":"9947:34:22","type":"","value":"ZKVerifier: Caller is not an adm"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9920:6:22"},"nodeType":"YulFunctionCall","src":"9920:62:22"},"nodeType":"YulExpressionStatement","src":"9920:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10002:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10013:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9998:3:22"},"nodeType":"YulFunctionCall","src":"9998:18:22"},{"hexValue":"696e","kind":"string","nodeType":"YulLiteral","src":"10018:4:22","type":"","value":"in"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9991:6:22"},"nodeType":"YulFunctionCall","src":"9991:32:22"},"nodeType":"YulExpressionStatement","src":"9991:32:22"},{"nodeType":"YulAssignment","src":"10032:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10044:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10055:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10040:3:22"},"nodeType":"YulFunctionCall","src":"10040:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10032:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_23a9e6324888b69a114ac30cc3df040284faf4813aa0cd71fe4c4366d3ba1fab__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9818:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9832:4:22","type":""}],"src":"9667:398:22"},{"body":{"nodeType":"YulBlock","src":"10244:224:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10261:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10272:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10254:6:22"},"nodeType":"YulFunctionCall","src":"10254:21:22"},"nodeType":"YulExpressionStatement","src":"10254:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10295:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10306:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10291:3:22"},"nodeType":"YulFunctionCall","src":"10291:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"10311:2:22","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10284:6:22"},"nodeType":"YulFunctionCall","src":"10284:30:22"},"nodeType":"YulExpressionStatement","src":"10284:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10334:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10345:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10330:3:22"},"nodeType":"YulFunctionCall","src":"10330:18:22"},{"hexValue":"5a4b56657269666965723a204369726375697420646f6573206e6f7420657869","kind":"string","nodeType":"YulLiteral","src":"10350:34:22","type":"","value":"ZKVerifier: Circuit does not exi"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10323:6:22"},"nodeType":"YulFunctionCall","src":"10323:62:22"},"nodeType":"YulExpressionStatement","src":"10323:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10405:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10416:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10401:3:22"},"nodeType":"YulFunctionCall","src":"10401:18:22"},{"hexValue":"7374","kind":"string","nodeType":"YulLiteral","src":"10421:4:22","type":"","value":"st"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10394:6:22"},"nodeType":"YulFunctionCall","src":"10394:32:22"},"nodeType":"YulExpressionStatement","src":"10394:32:22"},{"nodeType":"YulAssignment","src":"10435:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10447:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10458:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10443:3:22"},"nodeType":"YulFunctionCall","src":"10443:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10435:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_15629865a56d9acfbe58e61fb815431b4ec2d73d30e4b0db8a2834c6f59f1cb5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10221:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10235:4:22","type":""}],"src":"10070:398:22"},{"body":{"nodeType":"YulBlock","src":"10647:235:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10664:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10675:2:22","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10657:6:22"},"nodeType":"YulFunctionCall","src":"10657:21:22"},"nodeType":"YulExpressionStatement","src":"10657:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10698:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10709:2:22","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10694:3:22"},"nodeType":"YulFunctionCall","src":"10694:18:22"},{"kind":"number","nodeType":"YulLiteral","src":"10714:2:22","type":"","value":"45"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10687:6:22"},"nodeType":"YulFunctionCall","src":"10687:30:22"},"nodeType":"YulExpressionStatement","src":"10687:30:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10737:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10748:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10733:3:22"},"nodeType":"YulFunctionCall","src":"10733:18:22"},{"hexValue":"5a4b56657269666965723a20496e76616c696420766572696669657220636f6e","kind":"string","nodeType":"YulLiteral","src":"10753:34:22","type":"","value":"ZKVerifier: Invalid verifier con"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10726:6:22"},"nodeType":"YulFunctionCall","src":"10726:62:22"},"nodeType":"YulExpressionStatement","src":"10726:62:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10808:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10819:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10804:3:22"},"nodeType":"YulFunctionCall","src":"10804:18:22"},{"hexValue":"74726163742061646472657373","kind":"string","nodeType":"YulLiteral","src":"10824:15:22","type":"","value":"tract address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10797:6:22"},"nodeType":"YulFunctionCall","src":"10797:43:22"},"nodeType":"YulExpressionStatement","src":"10797:43:22"},{"nodeType":"YulAssignment","src":"10849:27:22","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10861:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"10872:3:22","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10857:3:22"},"nodeType":"YulFunctionCall","src":"10857:19:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10849:4:22"}]}]},"name":"abi_encode_tuple_t_stringliteral_f70bc21b8c20e6dcae2deb3d8e753cfa4a5527d2b822959d4b007622af85ce6f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10624:9:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10638:4:22","type":""}],"src":"10473:409:22"},{"body":{"nodeType":"YulBlock","src":"10919:95:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10936:1:22","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10943:3:22","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"10948:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10939:3:22"},"nodeType":"YulFunctionCall","src":"10939:20:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10929:6:22"},"nodeType":"YulFunctionCall","src":"10929:31:22"},"nodeType":"YulExpressionStatement","src":"10929:31:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10976:1:22","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10979:4:22","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10969:6:22"},"nodeType":"YulFunctionCall","src":"10969:15:22"},"nodeType":"YulExpressionStatement","src":"10969:15:22"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11000:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11003:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10993:6:22"},"nodeType":"YulFunctionCall","src":"10993:15:22"},"nodeType":"YulExpressionStatement","src":"10993:15:22"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"10887:127:22"},{"body":{"nodeType":"YulBlock","src":"11075:65:22","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11092:1:22","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"11095:3:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11085:6:22"},"nodeType":"YulFunctionCall","src":"11085:14:22"},"nodeType":"YulExpressionStatement","src":"11085:14:22"},{"nodeType":"YulAssignment","src":"11108:26:22","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11126:1:22","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11129:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11116:9:22"},"nodeType":"YulFunctionCall","src":"11116:18:22"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"11108:4:22"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"11058:3:22","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"11066:4:22","type":""}],"src":"11019:121:22"},{"body":{"nodeType":"YulBlock","src":"11226:464:22","statements":[{"body":{"nodeType":"YulBlock","src":"11259:425:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11273:11:22","value":{"kind":"number","nodeType":"YulLiteral","src":"11283:1:22","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11277:2:22","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11304:2:22"},{"name":"array","nodeType":"YulIdentifier","src":"11308:5:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11297:6:22"},"nodeType":"YulFunctionCall","src":"11297:17:22"},"nodeType":"YulExpressionStatement","src":"11297:17:22"},{"nodeType":"YulVariableDeclaration","src":"11327:31:22","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"11349:2:22"},{"kind":"number","nodeType":"YulLiteral","src":"11353:4:22","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"11339:9:22"},"nodeType":"YulFunctionCall","src":"11339:19:22"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"11331:4:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11371:57:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11394:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11404:1:22","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11411:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"11423:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11407:3:22"},"nodeType":"YulFunctionCall","src":"11407:19:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11400:3:22"},"nodeType":"YulFunctionCall","src":"11400:27:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11390:3:22"},"nodeType":"YulFunctionCall","src":"11390:38:22"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"11375:11:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"11465:23:22","statements":[{"nodeType":"YulAssignment","src":"11467:19:22","value":{"name":"data","nodeType":"YulIdentifier","src":"11482:4:22"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"11467:11:22"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"11447:10:22"},{"kind":"number","nodeType":"YulLiteral","src":"11459:4:22","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11444:2:22"},"nodeType":"YulFunctionCall","src":"11444:20:22"},"nodeType":"YulIf","src":"11441:47:22"},{"nodeType":"YulVariableDeclaration","src":"11501:41:22","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11515:4:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11525:1:22","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11532:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11537:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11528:3:22"},"nodeType":"YulFunctionCall","src":"11528:12:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11521:3:22"},"nodeType":"YulFunctionCall","src":"11521:20:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11511:3:22"},"nodeType":"YulFunctionCall","src":"11511:31:22"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"11505:2:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11555:24:22","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"11568:11:22"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"11559:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"11653:21:22","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11662:5:22"},{"name":"_1","nodeType":"YulIdentifier","src":"11669:2:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11655:6:22"},"nodeType":"YulFunctionCall","src":"11655:17:22"},"nodeType":"YulExpressionStatement","src":"11655:17:22"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11603:5:22"},{"name":"_2","nodeType":"YulIdentifier","src":"11610:2:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11600:2:22"},"nodeType":"YulFunctionCall","src":"11600:13:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11614:26:22","statements":[{"nodeType":"YulAssignment","src":"11616:22:22","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"11629:5:22"},{"kind":"number","nodeType":"YulLiteral","src":"11636:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11625:3:22"},"nodeType":"YulFunctionCall","src":"11625:13:22"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"11616:5:22"}]}]},"pre":{"nodeType":"YulBlock","src":"11596:3:22","statements":[]},"src":"11592:82:22"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"11242:3:22"},{"kind":"number","nodeType":"YulLiteral","src":"11247:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11239:2:22"},"nodeType":"YulFunctionCall","src":"11239:11:22"},"nodeType":"YulIf","src":"11236:448:22"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"11198:5:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"11205:3:22","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"11210:10:22","type":""}],"src":"11145:545:22"},{"body":{"nodeType":"YulBlock","src":"11780:81:22","statements":[{"nodeType":"YulAssignment","src":"11790:65:22","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"11805:4:22"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11823:1:22","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"11826:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11819:3:22"},"nodeType":"YulFunctionCall","src":"11819:11:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11836:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11832:3:22"},"nodeType":"YulFunctionCall","src":"11832:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"11815:3:22"},"nodeType":"YulFunctionCall","src":"11815:24:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11811:3:22"},"nodeType":"YulFunctionCall","src":"11811:29:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11801:3:22"},"nodeType":"YulFunctionCall","src":"11801:40:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11847:1:22","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"11850:3:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11843:3:22"},"nodeType":"YulFunctionCall","src":"11843:11:22"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"11798:2:22"},"nodeType":"YulFunctionCall","src":"11798:57:22"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"11790:4:22"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"11757:4:22","type":""},{"name":"len","nodeType":"YulTypedName","src":"11763:3:22","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"11771:4:22","type":""}],"src":"11695:166:22"},{"body":{"nodeType":"YulBlock","src":"11962:1256:22","statements":[{"nodeType":"YulVariableDeclaration","src":"11972:24:22","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11992:3:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11986:5:22"},"nodeType":"YulFunctionCall","src":"11986:10:22"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"11976:6:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"12039:22:22","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"12041:16:22"},"nodeType":"YulFunctionCall","src":"12041:18:22"},"nodeType":"YulExpressionStatement","src":"12041:18:22"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12011:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12019:18:22","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12008:2:22"},"nodeType":"YulFunctionCall","src":"12008:30:22"},"nodeType":"YulIf","src":"12005:56:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12114:4:22"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12152:4:22"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"12146:5:22"},"nodeType":"YulFunctionCall","src":"12146:11:22"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"12120:25:22"},"nodeType":"YulFunctionCall","src":"12120:38:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"12160:6:22"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"12070:43:22"},"nodeType":"YulFunctionCall","src":"12070:97:22"},"nodeType":"YulExpressionStatement","src":"12070:97:22"},{"nodeType":"YulVariableDeclaration","src":"12176:18:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12193:1:22","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"12180:9:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12203:23:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12222:4:22","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"12207:11:22","type":""}]},{"nodeType":"YulAssignment","src":"12235:24:22","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12248:11:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12235:9:22"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"12305:656:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12319:35:22","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12338:6:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12350:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12346:3:22"},"nodeType":"YulFunctionCall","src":"12346:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12334:3:22"},"nodeType":"YulFunctionCall","src":"12334:20:22"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"12323:7:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12367:49:22","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12411:4:22"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"12381:29:22"},"nodeType":"YulFunctionCall","src":"12381:35:22"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"12371:6:22","type":""}]},{"nodeType":"YulVariableDeclaration","src":"12429:10:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12438:1:22","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12433:1:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"12516:172:22","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12541:6:22"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12559:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12564:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12555:3:22"},"nodeType":"YulFunctionCall","src":"12555:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12549:5:22"},"nodeType":"YulFunctionCall","src":"12549:26:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12534:6:22"},"nodeType":"YulFunctionCall","src":"12534:42:22"},"nodeType":"YulExpressionStatement","src":"12534:42:22"},{"nodeType":"YulAssignment","src":"12593:24:22","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12607:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12615:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12603:3:22"},"nodeType":"YulFunctionCall","src":"12603:14:22"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12593:6:22"}]},{"nodeType":"YulAssignment","src":"12634:40:22","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12651:9:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12662:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12647:3:22"},"nodeType":"YulFunctionCall","src":"12647:27:22"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"12634:9:22"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12463:1:22"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"12466:7:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12460:2:22"},"nodeType":"YulFunctionCall","src":"12460:14:22"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12475:28:22","statements":[{"nodeType":"YulAssignment","src":"12477:24:22","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12486:1:22"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"12489:11:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12482:3:22"},"nodeType":"YulFunctionCall","src":"12482:19:22"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12477:1:22"}]}]},"pre":{"nodeType":"YulBlock","src":"12456:3:22","statements":[]},"src":"12452:236:22"},{"body":{"nodeType":"YulBlock","src":"12736:166:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12754:43:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12781:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"12786:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12777:3:22"},"nodeType":"YulFunctionCall","src":"12777:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12771:5:22"},"nodeType":"YulFunctionCall","src":"12771:26:22"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"12758:9:22","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"12821:6:22"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"12833:9:22"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12860:1:22","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"12863:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12856:3:22"},"nodeType":"YulFunctionCall","src":"12856:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"12872:3:22","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12852:3:22"},"nodeType":"YulFunctionCall","src":"12852:24:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12882:1:22","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12878:3:22"},"nodeType":"YulFunctionCall","src":"12878:6:22"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"12848:3:22"},"nodeType":"YulFunctionCall","src":"12848:37:22"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12844:3:22"},"nodeType":"YulFunctionCall","src":"12844:42:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12829:3:22"},"nodeType":"YulFunctionCall","src":"12829:58:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12814:6:22"},"nodeType":"YulFunctionCall","src":"12814:74:22"},"nodeType":"YulExpressionStatement","src":"12814:74:22"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"12707:7:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"12716:6:22"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12704:2:22"},"nodeType":"YulFunctionCall","src":"12704:19:22"},"nodeType":"YulIf","src":"12701:201:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"12922:4:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12936:1:22","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"12939:6:22"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12932:3:22"},"nodeType":"YulFunctionCall","src":"12932:14:22"},{"kind":"number","nodeType":"YulLiteral","src":"12948:1:22","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12928:3:22"},"nodeType":"YulFunctionCall","src":"12928:22:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"12915:6:22"},"nodeType":"YulFunctionCall","src":"12915:36:22"},"nodeType":"YulExpressionStatement","src":"12915:36:22"}]},"nodeType":"YulCase","src":"12298:663:22","value":{"kind":"number","nodeType":"YulLiteral","src":"12303:1:22","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"12978:234:22","statements":[{"nodeType":"YulVariableDeclaration","src":"12992:14:22","value":{"kind":"number","nodeType":"YulLiteral","src":"13005:1:22","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"12996:5:22","type":""}]},{"body":{"nodeType":"YulBlock","src":"13041:67:22","statements":[{"nodeType":"YulAssignment","src":"13059:35:22","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13078:3:22"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"13083:9:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13074:3:22"},"nodeType":"YulFunctionCall","src":"13074:19:22"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13068:5:22"},"nodeType":"YulFunctionCall","src":"13068:26:22"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13059:5:22"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"13022:6:22"},"nodeType":"YulIf","src":"13019:89:22"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"13128:4:22"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13187:5:22"},{"name":"newLen","nodeType":"YulIdentifier","src":"13194:6:22"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"13134:52:22"},"nodeType":"YulFunctionCall","src":"13134:67:22"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"13121:6:22"},"nodeType":"YulFunctionCall","src":"13121:81:22"},"nodeType":"YulExpressionStatement","src":"13121:81:22"}]},"nodeType":"YulCase","src":"12970:242:22","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"12278:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"12286:2:22","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12275:2:22"},"nodeType":"YulFunctionCall","src":"12275:14:22"},"nodeType":"YulSwitch","src":"12268:944:22"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"11947:4:22","type":""},{"name":"src","nodeType":"YulTypedName","src":"11953:3:22","type":""}],"src":"11866:1352:22"},{"body":{"nodeType":"YulBlock","src":"13382:330:22","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13399:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13410:2:22","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13392:6:22"},"nodeType":"YulFunctionCall","src":"13392:21:22"},"nodeType":"YulExpressionStatement","src":"13392:21:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13433:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13444:2:22","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13429:3:22"},"nodeType":"YulFunctionCall","src":"13429:18:22"},{"name":"value1","nodeType":"YulIdentifier","src":"13449:6:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13422:6:22"},"nodeType":"YulFunctionCall","src":"13422:34:22"},"nodeType":"YulExpressionStatement","src":"13422:34:22"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13482:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13493:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13478:3:22"},"nodeType":"YulFunctionCall","src":"13478:18:22"},{"name":"value0","nodeType":"YulIdentifier","src":"13498:6:22"},{"name":"value1","nodeType":"YulIdentifier","src":"13506:6:22"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13465:12:22"},"nodeType":"YulFunctionCall","src":"13465:48:22"},"nodeType":"YulExpressionStatement","src":"13465:48:22"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13537:9:22"},{"name":"value1","nodeType":"YulIdentifier","src":"13548:6:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13533:3:22"},"nodeType":"YulFunctionCall","src":"13533:22:22"},{"kind":"number","nodeType":"YulLiteral","src":"13557:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13529:3:22"},"nodeType":"YulFunctionCall","src":"13529:31:22"},{"kind":"number","nodeType":"YulLiteral","src":"13562:1:22","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13522:6:22"},"nodeType":"YulFunctionCall","src":"13522:42:22"},"nodeType":"YulExpressionStatement","src":"13522:42:22"},{"nodeType":"YulAssignment","src":"13573:62:22","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13589:9:22"},{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13608:6:22"},{"kind":"number","nodeType":"YulLiteral","src":"13616:2:22","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13604:3:22"},"nodeType":"YulFunctionCall","src":"13604:15:22"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13625:2:22","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"13621:3:22"},"nodeType":"YulFunctionCall","src":"13621:7:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13600:3:22"},"nodeType":"YulFunctionCall","src":"13600:29:22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13585:3:22"},"nodeType":"YulFunctionCall","src":"13585:45:22"},{"kind":"number","nodeType":"YulLiteral","src":"13632:2:22","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13581:3:22"},"nodeType":"YulFunctionCall","src":"13581:54:22"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13573:4:22"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13655:9:22"},{"kind":"number","nodeType":"YulLiteral","src":"13666:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13651:3:22"},"nodeType":"YulFunctionCall","src":"13651:20:22"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13677:6:22"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13693:3:22","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"13698:1:22","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"13689:3:22"},"nodeType":"YulFunctionCall","src":"13689:11:22"},{"kind":"number","nodeType":"YulLiteral","src":"13702:1:22","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13685:3:22"},"nodeType":"YulFunctionCall","src":"13685:19:22"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13673:3:22"},"nodeType":"YulFunctionCall","src":"13673:32:22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13644:6:22"},"nodeType":"YulFunctionCall","src":"13644:62:22"},"nodeType":"YulExpressionStatement","src":"13644:62:22"}]},"name":"abi_encode_tuple_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13335:9:22","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13346:6:22","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13354:6:22","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13362:6:22","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13373:4:22","type":""}],"src":"13223:489:22"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_ProofData_$8096_memory_ptr__to_t_struct$_ProofData_$8096_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), iszero(iszero(mload(add(value0, 0xc0)))))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_struct$_VerifierCircuit_$8080_memory_ptr__to_t_struct$_VerifierCircuit_$8080_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        let memberValue0 := mload(add(value0, 32))\n        mstore(add(headStart, 64), 0xa0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 192))\n        let memberValue0_1 := mload(add(value0, 64))\n        mstore(add(headStart, 96), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        mstore(add(headStart, 128), and(mload(add(value0, 96)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 0xa0), iszero(iszero(mload(add(value0, 128)))))\n        tail := tail_2\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_bytes_calldata_ptrt_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        value5 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_address(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a74b4031d2a910a98e34382b95905461eda072dea4d856830f05760c4b7e1bc9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ZKVerifier: Index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_3bbc26683e9fe139e448e7842d818aef9d0acecb2ed547e65fb1edaf80bbab5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ZKVerifier: Circuit is not activ\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr_t_bytes_calldata_ptr__to_t_bytes_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        calldatacopy(_1, value2, value3)\n        let _2 := add(_1, value3)\n        mstore(_2, 0)\n        end := _2\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_ab6eb277a6302005f1e16229a2f7cfc09e651e9e8f55c6abadf49f9879972541__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ZKVerifier: Proof does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_02e77c9f176379ab949bbccaa8d741295c0c0c666a9ee586839aa724457c2611__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"ZKVerifier: Caller is not author\")\n        mstore(add(headStart, 96), \"ized to revoke this proof\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_23a9e6324888b69a114ac30cc3df040284faf4813aa0cd71fe4c4366d3ba1fab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ZKVerifier: Caller is not an adm\")\n        mstore(add(headStart, 96), \"in\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_15629865a56d9acfbe58e61fb815431b4ec2d73d30e4b0db8a2834c6f59f1cb5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ZKVerifier: Circuit does not exi\")\n        mstore(add(headStart, 96), \"st\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f70bc21b8c20e6dcae2deb3d8e753cfa4a5527d2b822959d4b007622af85ce6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ZKVerifier: Invalid verifier con\")\n        mstore(add(headStart, 96), \"tract address\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_string_calldata_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), value1)\n        calldatacopy(add(headStart, 96), value0, value1)\n        mstore(add(add(headStart, value1), 96), 0)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 96)\n        mstore(add(headStart, 0x20), and(value2, sub(shl(160, 1), 1)))\n    }\n}","id":22,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B6958FF GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9D68B434 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9D68B434 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xCBF63E99 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xDA650454 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0xE8168B5C EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B6958FF EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x962926A8 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0x9C73DC54 EQ PUSH2 0x348 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C81587E GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x5C81587E EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x6B9A4AE3 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x733B0382 EQ PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x11149ADA EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x237 JUMPI DUP1 PUSH4 0x3997A7E0 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x4FBE55F6 EQ PUSH2 0x26C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D2 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24A PUSH2 0x245 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH2 0x25A CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0xFD8 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1046 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x645 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x2BE CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x24A PUSH2 0x71A JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x302 CALLDATASIZE PUSH1 0x4 PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x27F PUSH2 0x315 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22E JUMP JUMPDEST PUSH2 0x24A PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x24A PUSH2 0x356 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0xB05 JUMP JUMPDEST PUSH2 0x36E PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22E SWAP2 SWAP1 PUSH2 0x1167 JUMP JUMPDEST PUSH2 0x24A PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0xF3B JUMP JUMPDEST PUSH2 0xBEC JUMP JUMPDEST PUSH2 0x2A2 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x11AB JUMP JUMPDEST PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x24A PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xE80 JUMP JUMPDEST PUSH2 0x3BC PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x41A PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x452 SWAP1 PUSH2 0x122C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x47E SWAP1 PUSH2 0x122C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4CB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4CB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4AE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x4E4 SWAP1 PUSH2 0x122C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x510 SWAP1 PUSH2 0x122C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x532 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x540 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x3 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP3 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE DUP3 SUB PUSH2 0x60F JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x63F JUMP JUMPDEST DUP1 PUSH1 0xC0 ADD MLOAD ISZERO PUSH2 0x623 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x63F JUMP JUMPDEST DUP1 PUSH1 0xA0 ADD MLOAD TIMESTAMP GT ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 LT PUSH2 0x6B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A20496E646578206F7574206F6620626F756E647300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x6DB JUMPI PUSH2 0x6DB PUSH2 0x1266 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x722 PUSH2 0xEBE JUMP JUMPDEST PUSH2 0x72C PUSH1 0x0 PUSH2 0xEEB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x7A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A2043697263756974206973206E6F74206163746976 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x7B0 DUP4 PUSH2 0x1292 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH2 0x7D2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x20 ADD PUSH2 0x12AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP5 TIMESTAMP PUSH2 0x7F8 SWAP2 SWAP1 PUSH2 0x12CD JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP10 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0xA9665A946BB24359948B6138082DD57F3297D1D76E95E4420DDB59BC1C4F3F91 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x27DF2AFB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 ADDRESS SWAP1 PUSH4 0x4FBE55F6 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x12E0 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SUB PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A2050726F6F6620646F6573206E6F74206578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 PUSH2 0xA53 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0xAC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A2043616C6C6572206973206E6F7420617574686F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x697A656420746F207265766F6B6520746869732070726F6F6600000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x6 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 SWAP1 PUSH32 0x9F269DB4BA9DBBFD518B4EE0320BC478722BC61C7200F8A89911C4963E45C015 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xBE0 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xBCC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A8 SWAP1 PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD08 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A20496E76616C696420766572696669657220636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x74726163742061646472657373 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD18 DUP4 PUSH2 0x1292 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP10 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP8 DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x40 SWAP4 DUP5 ADD DUP2 SWAP1 MSTORE DUP6 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD SWAP1 SWAP2 DUP3 ADD SWAP1 PUSH2 0xDE7 SWAP1 DUP3 PUSH2 0x13EB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xDFC SWAP1 DUP3 PUSH2 0x13EB JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x80 SWAP1 SWAP4 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0x36F7EADD002B90E1BDB9D11345529136F8F7A46B5217D5DE6E736A8F99776A0E SWAP1 PUSH2 0xE6E SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP9 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE88 PUSH2 0xEBE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH2 0xEBB DUP2 PUSH2 0xEEB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x72C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF8B DUP3 PUSH2 0xF54 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFB8 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xF9C JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0xA0 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xFFE PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0xF92 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x101B DUP3 DUP3 PUSH2 0xF92 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1059 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1069 PUSH1 0x20 DUP5 ADD PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1085 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x108E DUP4 PUSH2 0xF54 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x10AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x10DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x10FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x111D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1129 DUP11 DUP4 DUP12 ADD PUSH2 0x109C JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x114F DUP10 DUP3 DUP11 ADD PUSH2 0x109C JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP5 SWAP7 SWAP6 PUSH1 0x60 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x119F JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1183 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x11C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E7 DUP10 DUP4 DUP11 ADD PUSH2 0x109C JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120D DUP9 DUP3 DUP10 ADD PUSH2 0x109C JUMP JUMPDEST SWAP1 SWAP5 POP SWAP3 POP PUSH2 0x1220 SWAP1 POP PUSH1 0x40 DUP8 ADD PUSH2 0xF54 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1240 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1260 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x12A4 JUMPI PUSH2 0x12A4 PUSH2 0x127C JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP4 DUP6 DUP3 CALLDATACOPY PUSH1 0x0 DUP5 DUP3 ADD PUSH1 0x0 DUP2 MSTORE DUP4 DUP6 DUP3 CALLDATACOPY PUSH1 0x0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x63F JUMPI PUSH2 0x63F PUSH2 0x127C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A2043616C6C6572206973206E6F7420616E2061646D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x34B7 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x5A4B56657269666965723A204369726375697420646F6573206E6F7420657869 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1CDD PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x13E6 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x13C3 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13E2 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13CF JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1405 JUMPI PUSH2 0x1405 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x1419 DUP2 PUSH2 0x1413 DUP5 SLOAD PUSH2 0x122C JUMP JUMPDEST DUP5 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x144E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1436 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x13E2 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x147D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x145E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x149B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP5 PUSH1 0x60 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 DUP5 DUP4 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1F SWAP1 SWAP3 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA BLOCKHASH PUSH20 0xEABED993EE0672FF8AB0E3E45D388EC9FEDA1663 SSTORE CALLDATACOPY 0x25 DUP8 0xC0 MULMOD 0xC8 PUSH29 0xC464736F6C634300081400330000000000000000000000000000000000 ","sourceMap":"271:8795:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6955:118;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7049:16:17;;;;:7;:16;;;;;;;;;7042:23;;;;;;;;;;;;;;;-1:-1:-1;;;;;7042:23:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6955:118;;;;;;;418:13:22;;400:32;;492:4;480:17;;;474:24;-1:-1:-1;;;;;470:50:22;448:20;;;441:80;577:4;565:17;;;559:24;537:20;;;530:54;640:4;628:17;;;622:24;600:20;;;593:54;703:4;691:17;;;685:24;663:20;;;656:54;508:3;754:17;;;748:24;726:20;;;719:54;843:4;831:17;;;825:24;818:32;811:40;789:20;;;782:70;;;;387:3;372:19;;199:659;6955:118:17;;;;;;;;1557:96;;;;;;:::i;:::-;;:::i;:::-;;7229:145;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5056:732::-;;;;;;:::i;:::-;;:::i;:::-;;;2887:14:22;;2880:22;2862:41;;2850:2;2835:18;5056:732:17;2722:187:22;8174:226:17;;;;;;:::i;:::-;;:::i;:::-;;;3319:25:22;;;3307:2;3292:18;8174:226:17;3173:177:22;7837:120:17;;;;;;:::i;:::-;-1:-1:-1;;;;;7924:18:17;7897:7;7924:18;;;:12;:18;;;;;:25;;7837:120;1354:92;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;3110:1362:17:-;;;;;;:::i;:::-;;:::i;4675:130::-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1684:7;1710:6;1638:85;;-1:-1:-1;;;;;1710:6:0;;;4712:51:22;;4700:2;4685:18;1638:85:0;4566:203:22;5903:590:17;;;;;;:::i;:::-;;:::i;8525:207::-;;;;;;:::i;:::-;;:::i;7542:127::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8857:206::-;;;;;;:::i;:::-;;:::i;1962:798::-;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;1557:96:17:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1623:14:17::1;1640:5;1623:14:::0;;;:7:::1;:14;::::0;;;;:22;;-1:-1:-1;;1623:22:17::1;::::0;;1557:96::o;7229:145::-;7304:22;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7304:22:17;7346:9;:20;7356:9;7346:20;;;;;;;;;;;7339:27;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7339:27:17;;;-1:-1:-1;;7339:27:17;;;;;;-1:-1:-1;;;;;7339:27:17;;;;;;-1:-1:-1;;;7339:27:17;;;;;;;;;;;;;-1:-1:-1;;7229:145:17:o;5056:732::-;5151:4;5193:16;;;:7;:16;;;;;;;;5168:41;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5168:41:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5268:13;;5264:58;;5305:5;5298:12;;;;;5264:58;5384:5;:15;;;5380:60;;;5423:5;5416:12;;;;;5380:60;5520:5;:15;;;5502;:33;5498:78;;;5559:5;5552:12;;;;;5498:78;5776:4;5769:11;;;5056:732;;;;;:::o;8174:226::-;-1:-1:-1;;;;;8288:18:17;;8252:7;8288:18;;;:12;:18;;;;;:25;8280:33;;8272:77;;;;-1:-1:-1;;;8272:77:17;;6796:2:22;8272:77:17;;;6778:21:22;6835:2;6815:18;;;6808:30;6874:33;6854:18;;;6847:61;6925:18;;8272:77:17;;;;;;;;;-1:-1:-1;;;;;8367:18:17;;;;;;:12;:18;;;;;:25;;8386:5;;8367:25;;;;;;:::i;:::-;;;;;;;;;8360:32;;8174:226;;;;:::o;1354:92::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1417:14:17::1;;::::0;;;:7:::1;:14;::::0;;;;:21;;-1:-1:-1;;1417:21:17::1;1434:4;1417:21;::::0;;1354:92::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3110:1362:17:-;3299:7;3327:20;;;:9;:20;;;;;;;:29;;-1:-1:-1;;;3327:29:17;;;;3319:75;;;;-1:-1:-1;;;3319:75:17;;7288:2:22;3319:75:17;;;7270:21:22;7327:2;7307:18;;;7300:30;7366:34;7346:18;;;7339:62;-1:-1:-1;;;7417:18:22;;;7410:31;7458:19;;3319:75:17;7086:397:22;3319:75:17;3638:15;:17;;;:15;:17;;;:::i;:::-;;;;-1:-1:-1;;3684:15:17;;3783:41;;3666:15;;3783:41;;3800:9;;;;3811:12;;;;3783:41;;;:::i;:::-;;;;;;;;;;;;;3773:52;;;;;;3753:72;;3884:17;3922:14;3904:15;:32;;;;:::i;:::-;3884:52;;4005:257;;;;;;;;4034:7;4005:257;;;;4063:10;-1:-1:-1;;;;;4005:257:17;;;;;4099:9;4005:257;;;;4134:9;4005:257;;;;4169:15;4005:257;;;;4210:9;4005:257;;;;4245:5;4005:257;;;;;3986:7;:16;3994:7;3986:16;;;;;;;;;;;:276;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3986:276:17;;;;;-1:-1:-1;;;;;3986:276:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4321:12;:24;4334:10;-1:-1:-1;;;;;4321:24:17;-1:-1:-1;;;;;4321:24:17;;;;;;;;;;;;4351:7;4321:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4419:9;4407:10;-1:-1:-1;;;;;4385:44:17;4398:7;4385:44;;;;;;;;;;-1:-1:-1;4457:7:17;;3110:1362;-1:-1:-1;;;;;;;;3110:1362:17:o;4675:130::-;4760:37;;-1:-1:-1;;;4760:37:17;;;;;8493:25:22;;;4736:4:17;8534:18:22;;;8527:60;;;4736:4:17;4760;;:16;;8466:18:22;;4760:37:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5903:590::-;5970:23;5996:16;;;:7;:16;;;;;6075:8;;5996:16;;6075:13;6067:58;;;;-1:-1:-1;;;6067:58:17;;9082:2:22;6067:58:17;;;9064:21:22;;;9101:18;;;9094:30;9160:34;9140:18;;;9133:62;9212:18;;6067:58:17;8880:356:22;6067:58:17;6221:11;;;;-1:-1:-1;;;;;6221:11:17;6236:10;6221:25;;:48;;-1:-1:-1;6258:10:17;6250:19;;;;:7;:19;;;;;;;;6221:48;6199:155;;;;-1:-1:-1;;;6199:155:17;;9443:2:22;6199:155:17;;;9425:21:22;9482:2;9462:18;;;9455:30;9521:34;9501:18;;;9494:62;9592:27;9572:18;;;9565:55;9637:19;;6199:155:17;9241:421:22;6199:155:17;6404:15;;;:22;;-1:-1:-1;;6404:22:17;6422:4;6404:22;;;6452:33;;6474:10;;6465:7;;6452:33;;6404:15;;6452:33;5959:534;5903:590;:::o;8525:207::-;1179:10;1171:19;;;;:7;:19;;;;;;;;1163:66;;;;-1:-1:-1;;;1163:66:17;;;;;;;:::i;:::-;8609:20:::1;::::0;;;:9:::1;:20;::::0;;;;:23;:28;;8601:75:::1;;;;-1:-1:-1::0;;;8601:75:17::1;;;;;;;:::i;:::-;8719:5;8687:20:::0;;;:9:::1;:20;::::0;;;;;;;:29:::1;:37:::0;;-1:-1:-1;;;;8687:37:17::1;::::0;;8525:207::o;7542:127::-;-1:-1:-1;;;;;7642:19:17;;;;;;:12;:19;;;;;;;;;7635:26;;;;;;;;;;;;;;;;;7606:16;;7635:26;;;7642:19;7635:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7542:127;;;:::o;8857:206::-;1179:10;1171:19;;;;:7;:19;;;;;;;;1163:66;;;;-1:-1:-1;;;1163:66:17;;;;;;;:::i;:::-;8941:20:::1;::::0;;;:9:::1;:20;::::0;;;;:23;:28;;8933:75:::1;;;;-1:-1:-1::0;;;8933:75:17::1;;;;;;;:::i;:::-;9019:20;::::0;;;:9:::1;:20;::::0;;;;;;;:29:::1;:36:::0;;-1:-1:-1;;;;9019:36:17::1;-1:-1:-1::0;;;9019:36:17::1;::::0;;8857:206::o;1962:798::-;1179:10;2135:7;1171:19;;;:7;:19;;;;;;;;1163:66;;;;-1:-1:-1;;;1163:66:17;;;;;;;:::i;:::-;-1:-1:-1;;;;;2163:30:17;::::1;2155:88;;;::::0;-1:-1:-1;;;2155:88:17;;10675:2:22;2155:88:17::1;::::0;::::1;10657:21:22::0;10714:2;10694:18;;;10687:30;10753:34;10733:18;;;10726:62;-1:-1:-1;;;10804:18:22;;;10797:43;10857:19;;2155:88:17::1;10473:409:22::0;2155:88:17::1;2297:17;:19:::0;;;:17:::1;:19;::::0;::::1;:::i;:::-;;;;;;2327:17;2347;;2327:37;;2439:198;;;;;;;;2474:9;2439:198;;;;2504:4;;2439:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;2439:198:17;;;-1:-1:-1;2439:198:17::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;2536:11;;;;;;2439:198;::::1;2536:11:::0;;;;2439:198;::::1;;::::0;::::1;::::0;;;-1:-1:-1;2439:198:17;;;-1:-1:-1;;;;;;;;2439:198:17;::::1;;::::0;;::::1;::::0;;;;2621:4:::1;2439:198:::0;;;;;;;2416:20;;;:9:::1;:20:::0;;;;;;:221;;;;;;::::1;::::0;:20;;:221;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;2416:221:17::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;2416:221:17::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;-1:-1:-1::0;;;2416:221:17::1;-1:-1:-1::0;;;;;;2416:221:17;;;-1:-1:-1;;;;;2416:221:17;;::::1;::::0;;;;;;;::::1;::::0;;2663:52:::1;::::0;2681:9;;2663:52:::1;::::0;::::1;::::0;2692:4;;;;2698:16;;2663:52:::1;:::i;:::-;;;;;;;;2743:9:::0;1962:798;-1:-1:-1;;;;;;1962:798:17:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;4712:51:22::0;4685:18;;2672:31:0::1;4566:203:22::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:7;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:7;1901:40:0;;;4712:51:22;4685:18;;1901:40:0;4566:203:22;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:180:22:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:22;;14:180;-1:-1:-1;14:180:22:o;863:173::-;931:20;;-1:-1:-1;;;;;980:31:22;;970:42;;960:70;;1026:1;1023;1016:12;960:70;863:173;;;:::o;1041:186::-;1100:6;1153:2;1141:9;1132:7;1128:23;1124:32;1121:52;;;1169:1;1166;1159:12;1121:52;1192:29;1211:9;1192:29;:::i;:::-;1182:39;1041:186;-1:-1:-1;;;1041:186:22:o;1232:423::-;1274:3;1312:5;1306:12;1339:6;1334:3;1327:19;1364:1;1374:162;1388:6;1385:1;1382:13;1374:162;;;1450:4;1506:13;;;1502:22;;1496:29;1478:11;;;1474:20;;1467:59;1403:12;1374:162;;;1378:3;1581:1;1574:4;1565:6;1560:3;1556:16;1552:27;1545:38;1644:4;1637:2;1633:7;1628:2;1620:6;1616:15;1612:29;1607:3;1603:39;1599:50;1592:57;;;1232:423;;;;:::o;1660:798::-;1855:2;1844:9;1837:21;1900:6;1894:13;1889:2;1878:9;1874:18;1867:41;1818:4;1955:2;1947:6;1943:15;1937:22;1995:4;1990:2;1979:9;1975:18;1968:32;2023:52;2070:3;2059:9;2055:19;2041:12;2023:52;:::i;:::-;2009:66;;2124:2;2116:6;2112:15;2106:22;2196:2;2192:7;2180:9;2172:6;2168:22;2164:36;2159:2;2148:9;2144:18;2137:64;2224:41;2258:6;2242:14;2224:41;:::i;:::-;2210:55;;;2347:1;2343;2338:3;2334:11;2330:19;2324:2;2316:6;2312:15;2306:22;2302:48;2296:3;2285:9;2281:19;2274:77;2421:3;2413:6;2409:16;2403:23;2396:31;2389:39;2382:4;2371:9;2367:20;2360:69;2446:6;2438:14;;;1660:798;;;;:::o;2463:254::-;2531:6;2539;2592:2;2580:9;2571:7;2567:23;2563:32;2560:52;;;2608:1;2605;2598:12;2560:52;2644:9;2631:23;2621:33;;2673:38;2707:2;2696:9;2692:18;2673:38;:::i;:::-;2663:48;;2463:254;;;;;:::o;2914:::-;2982:6;2990;3043:2;3031:9;3022:7;3018:23;3014:32;3011:52;;;3059:1;3056;3049:12;3011:52;3082:29;3101:9;3082:29;:::i;:::-;3072:39;3158:2;3143:18;;;;3130:32;;-1:-1:-1;;;2914:254:22:o;3355:347::-;3406:8;3416:6;3470:3;3463:4;3455:6;3451:17;3447:27;3437:55;;3488:1;3485;3478:12;3437:55;-1:-1:-1;3511:20:22;;3554:18;3543:30;;3540:50;;;3586:1;3583;3576:12;3540:50;3623:4;3615:6;3611:17;3599:29;;3675:3;3668:4;3659:6;3651;3647:19;3643:30;3640:39;3637:59;;;3692:1;3689;3682:12;3637:59;3355:347;;;;;:::o;3707:854::-;3815:6;3823;3831;3839;3847;3855;3908:3;3896:9;3887:7;3883:23;3879:33;3876:53;;;3925:1;3922;3915:12;3876:53;3961:9;3948:23;3938:33;;4022:2;4011:9;4007:18;3994:32;4045:18;4086:2;4078:6;4075:14;4072:34;;;4102:1;4099;4092:12;4072:34;4141:58;4191:7;4182:6;4171:9;4167:22;4141:58;:::i;:::-;4218:8;;-1:-1:-1;4115:84:22;-1:-1:-1;4306:2:22;4291:18;;4278:32;;-1:-1:-1;4322:16:22;;;4319:36;;;4351:1;4348;4341:12;4319:36;;4390:60;4442:7;4431:8;4420:9;4416:24;4390:60;:::i;:::-;3707:854;;;;-1:-1:-1;3707:854:22;;;;;4551:2;4536:18;;;4523:32;;3707:854;-1:-1:-1;;;;3707:854:22:o;4774:632::-;4945:2;4997:21;;;5067:13;;4970:18;;;5089:22;;;4916:4;;4945:2;5168:15;;;;5142:2;5127:18;;;4916:4;5211:169;5225:6;5222:1;5219:13;5211:169;;;5286:13;;5274:26;;5355:15;;;;5320:12;;;;5247:1;5240:9;5211:169;;;-1:-1:-1;5397:3:22;;4774:632;-1:-1:-1;;;;;;4774:632:22:o;5411:793::-;5512:6;5520;5528;5536;5544;5597:2;5585:9;5576:7;5572:23;5568:32;5565:52;;;5613:1;5610;5603:12;5565:52;5653:9;5640:23;5682:18;5723:2;5715:6;5712:14;5709:34;;;5739:1;5736;5729:12;5709:34;5778:58;5828:7;5819:6;5808:9;5804:22;5778:58;:::i;:::-;5855:8;;-1:-1:-1;5752:84:22;-1:-1:-1;5943:2:22;5928:18;;5915:32;;-1:-1:-1;5959:16:22;;;5956:36;;;5988:1;5985;5978:12;5956:36;;6027:60;6079:7;6068:8;6057:9;6053:24;6027:60;:::i;:::-;6106:8;;-1:-1:-1;6001:86:22;-1:-1:-1;6160:38:22;;-1:-1:-1;6194:2:22;6179:18;;6160:38;:::i;:::-;6150:48;;5411:793;;;;;;;;:::o;6209:380::-;6288:1;6284:12;;;;6331;;;6352:61;;6406:4;6398:6;6394:17;6384:27;;6352:61;6459:2;6451:6;6448:14;6428:18;6425:38;6422:161;;6505:10;6500:3;6496:20;6493:1;6486:31;6540:4;6537:1;6530:15;6568:4;6565:1;6558:15;6422:161;;6209:380;;;:::o;6954:127::-;7015:10;7010:3;7006:20;7003:1;6996:31;7046:4;7043:1;7036:15;7070:4;7067:1;7060:15;7488:127;7549:10;7544:3;7540:20;7537:1;7530:31;7580:4;7577:1;7570:15;7604:4;7601:1;7594:15;7620:135;7659:3;7680:17;;;7677:43;;7700:18;;:::i;:::-;-1:-1:-1;7747:1:22;7736:13;;7620:135::o;7760:424::-;7999:6;7991;7986:3;7973:33;7955:3;8034:6;8029:3;8025:16;8061:1;8057:2;8050:13;8097:6;8089;8085:2;8072:32;8158:1;8123:15;;8147:13;;;-1:-1:-1;8123:15:22;;7760:424;-1:-1:-1;;;;7760:424:22:o;8189:125::-;8254:9;;;8275:10;;;8272:36;;;8288:18;;:::i;8598:277::-;8665:6;8718:2;8706:9;8697:7;8693:23;8689:32;8686:52;;;8734:1;8731;8724:12;8686:52;8766:9;8760:16;8819:5;8812:13;8805:21;8798:5;8795:32;8785:60;;8841:1;8838;8831:12;9667:398;9869:2;9851:21;;;9908:2;9888:18;;;9881:30;9947:34;9942:2;9927:18;;9920:62;-1:-1:-1;;;10013:2:22;9998:18;;9991:32;10055:3;10040:19;;9667:398::o;10070:::-;10272:2;10254:21;;;10311:2;10291:18;;;10284:30;10350:34;10345:2;10330:18;;10323:62;-1:-1:-1;;;10416:2:22;10401:18;;10394:32;10458:3;10443:19;;10070:398::o;10887:127::-;10948:10;10943:3;10939:20;10936:1;10929:31;10979:4;10976:1;10969:15;11003:4;11000:1;10993:15;11145:545;11247:2;11242:3;11239:11;11236:448;;;11283:1;11308:5;11304:2;11297:17;11353:4;11349:2;11339:19;11423:2;11411:10;11407:19;11404:1;11400:27;11394:4;11390:38;11459:4;11447:10;11444:20;11441:47;;;-1:-1:-1;11482:4:22;11441:47;11537:2;11532:3;11528:12;11525:1;11521:20;11515:4;11511:31;11501:41;;11592:82;11610:2;11603:5;11600:13;11592:82;;;11655:17;;;11636:1;11625:13;11592:82;;;11596:3;;;11236:448;11145:545;;;:::o;11866:1352::-;11992:3;11986:10;12019:18;12011:6;12008:30;12005:56;;;12041:18;;:::i;:::-;12070:97;12160:6;12120:38;12152:4;12146:11;12120:38;:::i;:::-;12114:4;12070:97;:::i;:::-;12222:4;;12286:2;12275:14;;12303:1;12298:663;;;;13005:1;13022:6;13019:89;;;-1:-1:-1;13074:19:22;;;13068:26;13019:89;-1:-1:-1;;11823:1:22;11819:11;;;11815:24;11811:29;11801:40;11847:1;11843:11;;;11798:57;13121:81;;12268:944;;12298:663;11092:1;11085:14;;;11129:4;11116:18;;-1:-1:-1;;12334:20:22;;;12452:236;12466:7;12463:1;12460:14;12452:236;;;12555:19;;;12549:26;12534:42;;12647:27;;;;12615:1;12603:14;;;;12482:19;;12452:236;;;12456:3;12716:6;12707:7;12704:19;12701:201;;;12777:19;;;12771:26;-1:-1:-1;;12860:1:22;12856:14;;;12872:3;12852:24;12848:37;12844:42;12829:58;12814:74;;12701:201;-1:-1:-1;;;;;12948:1:22;12932:14;;;12928:22;12915:36;;-1:-1:-1;11866:1352:22:o;13223:489::-;13410:2;13399:9;13392:21;13449:6;13444:2;13433:9;13429:18;13422:34;13506:6;13498;13493:2;13482:9;13478:18;13465:48;13562:1;13557:2;13533:22;;;13529:31;;13522:42;;;;-1:-1:-1;;;;;13673:32:22;;;;13666:4;13651:20;;13644:62;13625:2;13604:15;;;-1:-1:-1;;13600:29:22;13585:45;;;13581:54;;;-1:-1:-1;13223:489:22:o"},"methodIdentifiers":{"addAdmin(address)":"70480275","createProof(uint256,bytes,bytes,uint256)":"733b0382","deactivateCircuit(uint256)":"9c73dc54","getCircuitData(uint256)":"3997a7e0","getProof(uint256)":"11149ada","getProofCount(address)":"6b9a4ae3","getProofData(uint256)":"da650454","getProofsByOwner(address)":"9d68b434","owner()":"8da5cb5b","reactivateCircuit(uint256)":"cbf63e99","registerCircuit(string,string,address)":"e8168b5c","removeAdmin(address)":"1785f53c","renounceOwnership()":"715018a6","revokeProof(uint256)":"962926a8","transferOwnership(address)":"f2fde38b","userProofByIndex(address,uint256)":"5c81587e","verifyProof(uint256)":"8b6958ff","verifyProof(uint256,address)":"4fbe55f6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"}],\"name\":\"CircuitRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"}],\"name\":\"ProofCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"}],\"name\":\"ProofRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proofData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"publicInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriod\",\"type\":\"uint256\"}],\"name\":\"createProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"}],\"name\":\"deactivateCircuit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"}],\"name\":\"getCircuitData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct IZKVerifier.VerifierCircuit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"name\":\"getProof\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRevoked\",\"type\":\"bool\"}],\"internalType\":\"struct IZKVerifier.ProofData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getProofCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"name\":\"getProofData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRevoked\",\"type\":\"bool\"}],\"internalType\":\"struct IZKVerifier.ProofData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getProofsByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"}],\"name\":\"reactivateCircuit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"}],\"name\":\"registerCircuit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"name\":\"revokeProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"userProofByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for managing zero-knowledge proof verification for certificates\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"CircuitRegistered(uint256,string,address)\":{\"details\":\"Event emitted when a new circuit is registered\"},\"ProofCreated(uint256,address,uint256)\":{\"details\":\"Event emitted when a new proof is created\"},\"ProofRevoked(uint256,address)\":{\"details\":\"Event emitted when a proof is revoked\"}},\"kind\":\"dev\",\"methods\":{\"addAdmin(address)\":{\"details\":\"Add an admin\",\"params\":{\"admin\":\"The address to add as admin\"}},\"constructor\":{\"details\":\"Constructor for ZKVerifier\"},\"createProof(uint256,bytes,bytes,uint256)\":{\"details\":\"Creates a new ZK proof\",\"params\":{\"circuitId\":\"The ID of the circuit to use\",\"proofData\":\"The raw proof data\",\"publicInputs\":\"The public inputs for the proof\",\"validityPeriod\":\"How long the proof should be valid for (in seconds)\"},\"returns\":{\"_0\":\"The ID of the created proof\"}},\"deactivateCircuit(uint256)\":{\"details\":\"Deactivate a circuit\",\"params\":{\"circuitId\":\"The ID of the circuit to deactivate\"}},\"getCircuitData(uint256)\":{\"details\":\"Gets information about a circuit\",\"params\":{\"circuitId\":\"The ID of the circuit\"},\"returns\":{\"_0\":\"The circuit data\"}},\"getProof(uint256)\":{\"details\":\"Gets information about a proof (alias for frontend compatibility)\",\"params\":{\"proofId\":\"The ID of the proof\"},\"returns\":{\"_0\":\"The proof data\"}},\"getProofCount(address)\":{\"details\":\"Gets the number of proofs created by a user\",\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The number of proofs\"}},\"getProofData(uint256)\":{\"details\":\"Gets information about a proof\",\"params\":{\"proofId\":\"The ID of the proof\"},\"returns\":{\"_0\":\"The proof data\"}},\"getProofsByOwner(address)\":{\"details\":\"Gets all proofs owned by an address\",\"params\":{\"owner\":\"The address to get proofs for\"},\"returns\":{\"_0\":\"An array of proof IDs\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"reactivateCircuit(uint256)\":{\"details\":\"Reactivate a circuit\",\"params\":{\"circuitId\":\"The ID of the circuit to reactivate\"}},\"registerCircuit(string,string,address)\":{\"details\":\"Registers a new verifier circuit (admin only)\",\"params\":{\"description\":\"The description of the circuit\",\"name\":\"The name of the circuit\",\"verifierContract\":\"The address of the verifier contract\"},\"returns\":{\"_0\":\"The ID of the registered circuit\"}},\"removeAdmin(address)\":{\"details\":\"Remove an admin\",\"params\":{\"admin\":\"The address to remove as admin\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeProof(uint256)\":{\"details\":\"Revokes a ZK proof\",\"params\":{\"proofId\":\"The ID of the proof to revoke\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"userProofByIndex(address,uint256)\":{\"details\":\"Gets a proof ID by index in a user's proofs\",\"params\":{\"index\":\"The index in the user's proof array\",\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The proof ID\"}},\"verifyProof(uint256)\":{\"details\":\"Simplified verifier for frontend compatibility\",\"params\":{\"proofId\":\"The ID of the proof to verify\"},\"returns\":{\"_0\":\"True if the proof is valid, false otherwise\"}},\"verifyProof(uint256,address)\":{\"details\":\"Verifies a ZK proof\",\"params\":{\"proofId\":\"The ID of the proof to verify\",\"verifierAddress\":\"The address of the verifier (if restricted)\"},\"returns\":{\"_0\":\"True if the proof is valid, false otherwise\"}}},\"title\":\"ZKVerifier\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ZKVerifier.sol\":\"ZKVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/ZKVerifier.sol\":{\"keccak256\":\"0xbd2d993e1c8df9cdf19268f6e4e32875383fbec6b92b84964ebb1a00217e758e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de15dd4b77eab5a133a67a05824594c2743bccb5a7b6b191c37e2312f585d8e2\",\"dweb:/ipfs/Qmdz5co51PmwvUbLhTW4woejqtzhYLYA8RvRH5JHYp82Lf\"]},\"contracts/interfaces/IZKVerifier.sol\":{\"keccak256\":\"0xc6d8023ad1dad069180d0f40eccd63b0ca1a9e43737b2910b78cb800b3ecfcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3979464cbefb85053fa866473afa6c64f7925ef429c193f448317a838d7520c5\",\"dweb:/ipfs/QmUezmag8UNKz3GcAkSq4fhZz4NuAPjAD2Dhik9RFcd3nx\"]}},\"version\":1}"}},"contracts/interfaces/IIssuerRegistry.sol":{"IIssuerRegistry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"enum IIssuerRegistry.IssuerTier","name":"fromTier","type":"uint8"},{"indexed":false,"internalType":"enum IIssuerRegistry.IssuerTier","name":"toTier","type":"uint8"}],"name":"IssuerUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"issuer","type":"address"},{"indexed":false,"internalType":"enum IIssuerRegistry.IssuerTier","name":"tier","type":"uint8"},{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"IssuerVerified","type":"event"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"}],"name":"getIssuerData","outputs":[{"components":[{"internalType":"address","name":"issuerAddress","type":"address"},{"internalType":"enum IIssuerRegistry.IssuerTier","name":"tier","type":"uint8"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"verificationData","type":"string"},{"internalType":"uint256","name":"verifiedAt","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct IIssuerRegistry.IssuerData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"}],"name":"getIssuerTier","outputs":[{"internalType":"enum IIssuerRegistry.IssuerTier","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"issuer","type":"address"}],"name":"isVerifiedIssuer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"issuerAddress","type":"address"},{"internalType":"string","name":"issuerName","type":"string"}],"name":"manualVerifyIssuer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"domain","type":"string"},{"internalType":"string","name":"verificationData","type":"string"}],"name":"upgradeToT1","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"issuerName","type":"string"},{"internalType":"string","name":"domain","type":"string"},{"internalType":"string","name":"verificationData","type":"string"}],"name":"verifyIssuerT1","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"issuerName","type":"string"},{"internalType":"string","name":"socialMediaUrl","type":"string"}],"name":"verifyIssuerT2","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getIssuerData(address)":"88fd4a03","getIssuerTier(address)":"3dbf1db3","isVerifiedIssuer(address)":"ce21e1cb","manualVerifyIssuer(address,string)":"96ae3709","upgradeToT1(string,string)":"f52fa8e3","verifyIssuerT1(string,string,string)":"4181186f","verifyIssuerT2(string,string)":"62078d2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"fromTier\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"toTier\",\"type\":\"uint8\"}],\"name\":\"IssuerUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"IssuerVerified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"getIssuerData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuerAddress\",\"type\":\"address\"},{\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"tier\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationData\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"verifiedAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct IIssuerRegistry.IssuerData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"getIssuerTier\",\"outputs\":[{\"internalType\":\"enum IIssuerRegistry.IssuerTier\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"isVerifiedIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"issuerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"issuerName\",\"type\":\"string\"}],\"name\":\"manualVerifyIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationData\",\"type\":\"string\"}],\"name\":\"upgradeToT1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"issuerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"domain\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"verificationData\",\"type\":\"string\"}],\"name\":\"verifyIssuerT1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"issuerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"socialMediaUrl\",\"type\":\"string\"}],\"name\":\"verifyIssuerT2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the IssuerRegistry contract that manages verification of certificate issuers\",\"events\":{\"IssuerUpgraded(address,uint8,uint8)\":{\"details\":\"Event emitted when an issuer is upgraded\"},\"IssuerVerified(address,uint8,string)\":{\"details\":\"Event emitted when an issuer is verified\"}},\"kind\":\"dev\",\"methods\":{\"getIssuerData(address)\":{\"details\":\"Gets the data for an issuer\",\"params\":{\"issuer\":\"The address to get data for\"},\"returns\":{\"_0\":\"The issuer data\"}},\"getIssuerTier(address)\":{\"details\":\"Gets the tier level of an issuer\",\"params\":{\"issuer\":\"The address to check\"},\"returns\":{\"_0\":\"The tier level of the issuer\"}},\"isVerifiedIssuer(address)\":{\"details\":\"Checks if an address is a verified issuer\",\"params\":{\"issuer\":\"The address to check\"},\"returns\":{\"_0\":\"True if the address is a verified issuer, false otherwise\"}},\"manualVerifyIssuer(address,string)\":{\"details\":\"Manually verifies an issuer (only admin)\",\"params\":{\"issuerAddress\":\"The address to be verified\",\"issuerName\":\"The name of the issuer organization\"}},\"upgradeToT1(string,string)\":{\"details\":\"Upgrades an issuer from T2 to T1\",\"params\":{\"domain\":\"The domain name used for verification\",\"verificationData\":\"Additional data used in verification process\"}},\"verifyIssuerT1(string,string,string)\":{\"details\":\"Verifies an issuer with T1 verification (DNS)\",\"params\":{\"domain\":\"The domain name used for verification\",\"issuerName\":\"The name of the issuer organization\",\"verificationData\":\"Additional data used in verification process\"}},\"verifyIssuerT2(string,string)\":{\"details\":\"Verifies an issuer with T2 verification (social media)\",\"params\":{\"issuerName\":\"The name of the issuer organization\",\"socialMediaUrl\":\"The URL of the social media post used for verification\"}}},\"title\":\"IIssuerRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IIssuerRegistry.sol\":\"IIssuerRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IIssuerRegistry.sol\":{\"keccak256\":\"0x3d4eaf5e4545526a1ba065452ba5d8a986342828803436e1c9d9020befbce6bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee0cb27c5966fd7125528d6e070d0cdfeca0b597c0c1fb08b65e2f284cb59382\",\"dweb:/ipfs/QmbF5okc21wwwpgRMHLR5zEj3HuegPVZs82NFK8fvyiUR5\"]}},\"version\":1}"}},"contracts/interfaces/ISoulboundNFT.sol":{"ISoulboundNFT":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"issuer","type":"address"}],"name":"CertificateMinted","type":"event"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getCertificateData","outputs":[{"internalType":"address","name":"issuer","type":"address"},{"internalType":"uint8","name":"issuerLevel","type":"uint8"},{"internalType":"string","name":"metadataURI","type":"string"},{"internalType":"uint256","name":"issuedTimestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"isEligible","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"mintCertificate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getCertificateData(uint256)":"31494bbb","isEligible(address,bytes32[])":"c18b065e","mintCertificate(address,bytes32[])":"c4b3d052"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"}],\"name\":\"CertificateMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getCertificateData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"issuerLevel\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"metadataURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"issuedTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"isEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mintCertificate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the SoulboundNFT contract\",\"events\":{\"CertificateMinted(address,uint256,address)\":{\"details\":\"Event emitted when a certificate is minted\"}},\"kind\":\"dev\",\"methods\":{\"getCertificateData(uint256)\":{\"details\":\"Gets the certificate data for a token ID\",\"params\":{\"tokenId\":\"The token ID to get data for\"},\"returns\":{\"issuedTimestamp\":\"The timestamp when the certificate was issued\",\"issuer\":\"The address of the certificate issuer\",\"issuerLevel\":\"The level of the issuer (T1, T2, etc.)\",\"metadataURI\":\"The URI for the certificate metadata\"}},\"isEligible(address,bytes32[])\":{\"details\":\"Checks if an address is eligible to claim a certificate\",\"params\":{\"merkleProof\":\"The Merkle proof to verify eligibility\",\"recipient\":\"The address to check eligibility for\"},\"returns\":{\"_0\":\"True if the address is eligible, false otherwise\"}},\"mintCertificate(address,bytes32[])\":{\"details\":\"Mints a new certificate to a recipient\",\"params\":{\"merkleProof\":\"The Merkle proof that verifies the recipient is eligible\",\"recipient\":\"The address that will receive the certificate\"},\"returns\":{\"_0\":\"The token ID of the minted certificate\"}}},\"title\":\"ISoulboundNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISoulboundNFT.sol\":\"ISoulboundNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISoulboundNFT.sol\":{\"keccak256\":\"0x6478f9d6828ac60c376a56dd60b8669cadbd03e3caf50a5266a021934283b682\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://906a43dbd5bc9ec5307a8c3aa79e6e656ee7cb5cb55c5378f145ba58e1363fe3\",\"dweb:/ipfs/QmUKW2rHYNFS7UicQJrYVTaTgDNFszEBwNgpfotPhGtZAD\"]}},\"version\":1}"}},"contracts/interfaces/IZKVerifier.sol":{"IZKVerifier":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"circuitId","type":"uint256"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"address","name":"verifierContract","type":"address"}],"name":"CircuitRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proofId","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"circuitId","type":"uint256"}],"name":"ProofCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"proofId","type":"uint256"},{"indexed":true,"internalType":"address","name":"revoker","type":"address"}],"name":"ProofRevoked","type":"event"},{"inputs":[{"internalType":"uint256","name":"circuitId","type":"uint256"},{"internalType":"bytes","name":"proofData","type":"bytes"},{"internalType":"bytes","name":"publicInputs","type":"bytes"},{"internalType":"uint256","name":"validityPeriod","type":"uint256"}],"name":"createProof","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"circuitId","type":"uint256"}],"name":"getCircuitData","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"verifierContract","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct IZKVerifier.VerifierCircuit","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"proofId","type":"uint256"}],"name":"getProofData","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"circuitId","type":"uint256"},{"internalType":"bytes32","name":"proofHash","type":"bytes32"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"uint256","name":"expiresAt","type":"uint256"},{"internalType":"bool","name":"isRevoked","type":"bool"}],"internalType":"struct IZKVerifier.ProofData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"address","name":"verifierContract","type":"address"}],"name":"registerCircuit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proofId","type":"uint256"}],"name":"revokeProof","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"proofId","type":"uint256"},{"internalType":"address","name":"verifierAddress","type":"address"}],"name":"verifyProof","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"createProof(uint256,bytes,bytes,uint256)":"733b0382","getCircuitData(uint256)":"3997a7e0","getProofData(uint256)":"da650454","registerCircuit(string,string,address)":"e8168b5c","revokeProof(uint256)":"962926a8","verifyProof(uint256,address)":"4fbe55f6"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"}],\"name\":\"CircuitRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"}],\"name\":\"ProofCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"}],\"name\":\"ProofRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proofData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"publicInputs\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validityPeriod\",\"type\":\"uint256\"}],\"name\":\"createProof\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"}],\"name\":\"getCircuitData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct IZKVerifier.VerifierCircuit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"name\":\"getProofData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"circuitId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiresAt\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isRevoked\",\"type\":\"bool\"}],\"internalType\":\"struct IZKVerifier.ProofData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"}],\"name\":\"registerCircuit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"}],\"name\":\"revokeProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proofId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifierAddress\",\"type\":\"address\"}],\"name\":\"verifyProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the ZKVerifier contract that verifies zero-knowledge proofs for certificates\",\"events\":{\"CircuitRegistered(uint256,string,address)\":{\"details\":\"Event emitted when a new circuit is registered\"},\"ProofCreated(uint256,address,uint256)\":{\"details\":\"Event emitted when a new proof is created\"},\"ProofRevoked(uint256,address)\":{\"details\":\"Event emitted when a proof is revoked\"}},\"kind\":\"dev\",\"methods\":{\"createProof(uint256,bytes,bytes,uint256)\":{\"details\":\"Creates a new ZK proof\",\"params\":{\"circuitId\":\"The ID of the circuit to use\",\"proofData\":\"The raw proof data\",\"publicInputs\":\"The public inputs for the proof\",\"validityPeriod\":\"How long the proof should be valid for (in seconds)\"},\"returns\":{\"_0\":\"The ID of the created proof\"}},\"getCircuitData(uint256)\":{\"details\":\"Gets information about a circuit\",\"params\":{\"circuitId\":\"The ID of the circuit\"},\"returns\":{\"_0\":\"The circuit data\"}},\"getProofData(uint256)\":{\"details\":\"Gets information about a proof\",\"params\":{\"proofId\":\"The ID of the proof\"},\"returns\":{\"_0\":\"The proof data\"}},\"registerCircuit(string,string,address)\":{\"details\":\"Registers a new verifier circuit (admin only)\",\"params\":{\"description\":\"The description of the circuit\",\"name\":\"The name of the circuit\",\"verifierContract\":\"The address of the verifier contract\"},\"returns\":{\"_0\":\"The ID of the registered circuit\"}},\"revokeProof(uint256)\":{\"details\":\"Revokes a ZK proof\",\"params\":{\"proofId\":\"The ID of the proof to revoke\"}},\"verifyProof(uint256,address)\":{\"details\":\"Verifies a ZK proof\",\"params\":{\"proofId\":\"The ID of the proof to verify\",\"verifierAddress\":\"The address of the verifier (if restricted)\"},\"returns\":{\"_0\":\"True if the proof is valid, false otherwise\"}}},\"title\":\"IZKVerifier\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IZKVerifier.sol\":\"IZKVerifier\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IZKVerifier.sol\":{\"keccak256\":\"0xc6d8023ad1dad069180d0f40eccd63b0ca1a9e43737b2910b78cb800b3ecfcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3979464cbefb85053fa866473afa6c64f7925ef429c193f448317a838d7520c5\",\"dweb:/ipfs/QmUezmag8UNKz3GcAkSq4fhZz4NuAPjAD2Dhik9RFcd3nx\"]}},\"version\":1}"}},"contracts/utils/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d276dac32b1c5b4c5dccda2d2dbbd70c343b89ca4fe711e2011a3c1ad46f948264736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 PUSH23 0xDAC32B1C5B4C5DCCDA2D2DBBD70C343B89CA4FE711E201 BYTE EXTCODECOPY BYTE 0xD4 PUSH16 0x948264736F6C63430008140033000000 ","sourceMap":"145:1526:21:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;145:1526:21;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d276dac32b1c5b4c5dccda2d2dbbd70c343b89ca4fe711e2011a3c1ad46f948264736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 PUSH23 0xDAC32B1C5B4C5DCCDA2D2DBBD70C343B89CA4FE711E201 BYTE EXTCODECOPY BYTE 0xD4 PUSH16 0x948264736F6C63430008140033000000 ","sourceMap":"145:1526:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for verification of Merkle proofs\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MerkleProof\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/MerkleProof.sol\":{\"keccak256\":\"0x67ecdb0679d430a433a40e6d79711c318276e13352b0e4dc0dff7ac4593be028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://073bf241803fd5a484d161c82035d2b7fa791ad37f79cac66c23fd00185d2116\",\"dweb:/ipfs/QmXFrSxKQXPoUePqPXK275Zk3VDrdTg6Eha2vDM89QLaa3\"]}},\"version\":1}"}}}}}